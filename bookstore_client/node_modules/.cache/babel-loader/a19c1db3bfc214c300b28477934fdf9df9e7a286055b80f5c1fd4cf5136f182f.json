{"ast":null,"code":"var _jsxFileName = \"/Users/samindu/Downloads/client/src/pages/investor/individualInvestor/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from '../../../api/axios';\nimport Signup1 from './Signup1';\nimport Signup2 from './Signup2';\nimport Signup3 from './Signup3';\nimport { Navbar, Footer, Button, StatusPopUp } from \"../../webcomponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailRegex = /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/;\nconst nicRegex = /^[0-9]{9}[vVxX]|[0-9]{12}$/;\nconst mobileRegex = /^(?:\\+94|0)(?:\\d{9})$/;\nconst passwordRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).{8,}$/;\nfunction Form() {\n  _s();\n  const [page, setPage] = useState(0);\n  const [showSuccessNotification, setShowSuccessNotification] = useState(false);\n  const [formData, setFormData] = useState({\n    firstname: '',\n    lastname: '',\n    firstline: '',\n    secondline: '',\n    town: '',\n    district: '',\n    email: '',\n    nic: '',\n    gender: '',\n    mobile: '',\n    policeReport: '',\n    bankStatement: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [categories, setCategories] = useState({\n    food: false,\n    technology: false,\n    app: false,\n    fitness: false,\n    healthcare: false,\n    sports: false,\n    beauty: false,\n    clothing: false,\n    toys: false,\n    entertainment: false,\n    pets: false,\n    music: false,\n    holiday: false,\n    children: false,\n    housewares: false\n  });\n  const sectorId = [];\n  var x = 1;\n  // For each category that is selected, add the category id to the list\n  for (const [key, value] of Object.entries(categories)) {\n    if (value === true) {\n      sectorId.push(x);\n    }\n    x++;\n  }\n  const [validateFormData, setValidateFormData] = useState({\n    firstname: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    lastname: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    firstline: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    secondline: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    town: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    district: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    email: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    nic: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    gender: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    mobile: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    policeReport: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    bankStatement: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    password: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    confirmPassword: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    }\n  });\n  const [disabled, setDisabled] = useState(true);\n  useEffect(() => {\n    let emailFlag = emailRegex.test(formData.email);\n    let nicFlag = nicRegex.test(formData.nic);\n    let mobileFlag = mobileRegex.test(formData.mobile);\n    let passwordFlag = passwordRegex.test(formData.password);\n    let confirmPasswordFlag = formData.password === formData.confirmPassword;\n    setValidateFormData({\n      email: {\n        State: emailFlag || !formData.email ? \"Valid\" : \"Invalid\",\n        Message: emailFlag || !formData.email ? \"\" : \"Invalid Email\"\n      },\n      nic: {\n        State: nicFlag || !formData.nic ? \"Valid\" : \"Invalid\",\n        Message: nicFlag || !formData.nic ? \"\" : \"Invalid NIC\"\n      },\n      mobile: {\n        State: mobileFlag || !formData.mobile ? \"Valid\" : \"Invalid\",\n        Message: mobileFlag || !formData.mobile ? \"\" : \"Invalid Contact Number\"\n      },\n      password: {\n        State: passwordFlag || !formData.password ? \"Valid\" : \"Invalid\",\n        Message: passwordFlag || !formData.password ? \"\" : \"Password must contain at least 8 characters, one uppercase, one lowercase and one number\"\n      },\n      confirmPassword: {\n        State: confirmPasswordFlag || !formData.confirmPassword ? \"Valid\" : \"Invalid\",\n        Message: confirmPasswordFlag || !formData.confirmPassword ? \"\" : \"Passwords do not match\"\n      }\n    });\n    //check email already exist state\n    if (formData.email) {\n      axios.get(`/auth/checkEmail/${formData.email}`).then(res => {\n        if (res.data.status === \"Error\") {\n          setValidateFormData(prevData => ({\n            ...prevData,\n            email: {\n              State: \"Invalid\",\n              Message: \"Email already exists\"\n            }\n          }));\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }, [formData.email, formData.nic, formData.mobile, formData.password, formData.confirmPassword]);\n  const [requiredFields] = useState({\n    // Add the required fields here, corresponding to each page\n    0: ['firstname', 'lastname', 'firstline', 'town', 'district', 'email', 'nic', 'gender', 'mobile'],\n    1: [],\n    2: ['policeReport', 'bankStatement', 'password', 'confirmPassword']\n  });\n  useEffect(() => {\n    var _requiredFields$page;\n    // Check if all the required fields on the current page are filled\n    const isPageDataValid = (_requiredFields$page = requiredFields[page]) === null || _requiredFields$page === void 0 ? void 0 : _requiredFields$page.every(field => formData[field]);\n\n    // Check if there are no validation errors for the current page\n    const isPageValid = Object.keys(validateFormData).every(field => validateFormData[field].State === \"Valid\");\n\n    //check at least 5 from the categories are selected\n    if (page === 1) {\n      const isCategoriesValid = sectorId.length >= 1;\n      setValidateFormData(prevData => ({\n        ...prevData,\n        categories: {\n          State: isCategoriesValid ? \"Valid\" : \"Invalid\",\n          Message: isCategoriesValid ? \"\" : \"Please select at least 5 categories\"\n        }\n      }));\n    }\n\n    // Enable/disable the Next button based on the above checks\n    setDisabled(!isPageDataValid || !isPageValid);\n  }, [formData, validateFormData, requiredFields, page]);\n  const FormTitles = [\"Signup1\", \"Signup2\", \"Signup3\"];\n  const PageDisplay = () => {\n    if (page === 0) {\n      return /*#__PURE__*/_jsxDEV(Signup1, {\n        formData: formData,\n        setFormData: setFormData,\n        validateFormData: validateFormData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 20\n      }, this);\n    } else if (page === 1) {\n      return /*#__PURE__*/_jsxDEV(Signup2, {\n        formData: formData,\n        setFormData: setFormData,\n        validateFormData: validateFormData,\n        categories: categories,\n        setCategories: setCategories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 20\n      }, this);\n    } else if (page === 2) {\n      return /*#__PURE__*/_jsxDEV(Signup3, {\n        formData: formData,\n        setFormData: setFormData,\n        validateFormData: validateFormData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 20\n      }, this);\n    }\n  };\n  const handlePrevClick = () => {\n    setPage(currPage => currPage - 1);\n  };\n  const requestData = {\n    firstname: formData.firstname,\n    lastname: formData.lastname,\n    firstLineAddress: formData.firstline,\n    secondLineAddress: formData.secondline,\n    town: formData.town,\n    district: formData.district,\n    email: formData.email,\n    nic: formData.nic,\n    gender: formData.gender,\n    contactNumber: formData.mobile,\n    policeReport: formData.policeReport,\n    financialDocument: formData.bankStatement,\n    password: formData.password,\n    confirmPassword: formData.confirmPassword,\n    sectorId: sectorId\n  };\n  const handleNextClick = async () => {\n    if (page === FormTitles.length - 1) {\n      try {\n        const formData = new FormData();\n\n        //generate a unique names for images using date and a random number\n        const policeReportFileName = Date.now() + Math.random() + requestData.policeReport.name;\n        const bankStatementFileName = Date.now() + Math.random() + requestData.financialDocument.name;\n\n        //append the images to the formdata\n        formData.append(\"policeReport\", requestData.policeReport, policeReportFileName);\n        formData.append(\"bankStatement\", requestData.financialDocument, bankStatementFileName);\n\n        //send the images to the backend\n        const response = await axios.post('/auth/uploadindividual', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          withCredentials: true\n        });\n\n        //update the request data with the image names\n        requestData.policeReport = policeReportFileName;\n        requestData.financialDocument = bankStatementFileName;\n        const response2 = await axios.post('auth/register/individualInvestor', JSON.stringify(requestData), {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response2.data.status === \"Success\") {\n          setShowSuccessNotification(true);\n        } else {\n          console.log(\"Error\");\n        }\n      } catch (error) {\n        console.error(error); // Handle any errors that occur during the request\n      }\n    } else {\n      setPage(currPage => currPage + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      active: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"h-auto flex justify-center items-center bg-white lg:h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \" bg-white flex drop-shadow-md w-full h-auto lg:rounded-[1rem] lg:w-9/12 mt-[-3rem]\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-700 p-20 w-full\",\n          children: [PageDisplay(), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: 'float-left' + (page === 0 ? ' hidden' : ''),\n            icon: \"previous\",\n            onClick: handlePrevClick,\n            children: \"Prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: \"float-right\",\n            onClick: handleNextClick,\n            icon: page === FormTitles.length - 1 ? '' : 'next',\n            disabled: disabled,\n            children: page === FormTitles.length - 1 ? 'Submit' : 'Next'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"individual_investor w-[50%] rounded-r-[1rem] hidden lg:block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showSuccessNotification && /*#__PURE__*/_jsxDEV(StatusPopUp, {\n        successTitle: \"Registration Request sent Successfully\",\n        successMessage: \"Please wait for admin to check and approve your request\",\n        redirectUrl: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"8G9S6jJFhYSjRTQI8/MmzO72Q3k=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useEffect","useState","axios","Signup1","Signup2","Signup3","Navbar","Footer","Button","StatusPopUp","jsxDEV","_jsxDEV","emailRegex","nicRegex","mobileRegex","passwordRegex","Form","_s","page","setPage","showSuccessNotification","setShowSuccessNotification","formData","setFormData","firstname","lastname","firstline","secondline","town","district","email","nic","gender","mobile","policeReport","bankStatement","password","confirmPassword","categories","setCategories","food","technology","app","fitness","healthcare","sports","beauty","clothing","toys","entertainment","pets","music","holiday","children","housewares","sectorId","x","key","value","Object","entries","push","validateFormData","setValidateFormData","disabled","setDisabled","emailFlag","test","nicFlag","mobileFlag","passwordFlag","confirmPasswordFlag","State","Message","get","then","res","data","status","prevData","catch","error","console","requiredFields","_requiredFields$page","isPageDataValid","every","field","isPageValid","keys","isCategoriesValid","length","FormTitles","PageDisplay","fileName","_jsxFileName","lineNumber","columnNumber","handlePrevClick","currPage","requestData","firstLineAddress","secondLineAddress","contactNumber","financialDocument","handleNextClick","FormData","policeReportFileName","Date","now","Math","random","name","bankStatementFileName","append","response","post","headers","withCredentials","response2","JSON","stringify","log","active","className","type","icon","onClick","successTitle","successMessage","redirectUrl","_c","$RefreshReg$"],"sources":["/Users/samindu/Downloads/client/src/pages/investor/individualInvestor/Form.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from '../../../api/axios';\r\nimport Signup1 from './Signup1';\r\nimport Signup2 from './Signup2';\r\nimport Signup3 from './Signup3';\r\nimport {Navbar, Footer, Button, StatusPopUp} from \"../../webcomponent\";\r\n\r\n\r\nconst emailRegex = /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/;\r\nconst nicRegex = /^[0-9]{9}[vVxX]|[0-9]{12}$/;\r\nconst mobileRegex = /^(?:\\+94|0)(?:\\d{9})$/;\r\nconst passwordRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).{8,}$/;\r\n\r\nfunction Form() {\r\n    const [page, setPage] = useState(0);\r\n    const [showSuccessNotification, setShowSuccessNotification] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        firstname: '',\r\n        lastname: '',\r\n        firstline: '',\r\n        secondline: '',\r\n        town: '',\r\n        district: '',\r\n        email: '',\r\n        nic: '',\r\n        gender: '',\r\n        mobile: '',\r\n        policeReport: '',\r\n        bankStatement: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n    const [categories, setCategories] = useState({\r\n        food: false,\r\n        technology: false,\r\n        app: false,\r\n        fitness: false,\r\n        healthcare: false,\r\n        sports: false,\r\n        beauty: false,\r\n        clothing: false,\r\n        toys: false,\r\n        entertainment: false,\r\n        pets: false,\r\n        music: false,\r\n        holiday: false,\r\n        children: false,\r\n        housewares: false,\r\n    });\r\n\r\n    const sectorId = [];\r\n\r\n    var x = 1;\r\n    // For each category that is selected, add the category id to the list\r\n    for (const [key, value] of Object.entries(categories)) {\r\n        if (value === true) {\r\n            sectorId.push(x)\r\n        }\r\n        x++;\r\n    }\r\n\r\n    const [validateFormData, setValidateFormData] = useState({\r\n        firstname: {\"State\": \"\", \"Message\": \"\"},\r\n        lastname: {\"State\": \"\", \"Message\": \"\"},\r\n        firstline: {\"State\": \"\", \"Message\": \"\"},\r\n        secondline: {\"State\": \"\", \"Message\": \"\"},\r\n        town: {\"State\": \"\", \"Message\": \"\"},\r\n        district: {\"State\": \"\", \"Message\": \"\"},\r\n        email: {\"State\": \"\", \"Message\": \"\"},\r\n        nic: {\"State\": \"\", \"Message\": \"\"},\r\n        gender: {\"State\": \"\", \"Message\": \"\"},\r\n        mobile: {\"State\": \"\", \"Message\": \"\"},\r\n        policeReport: {\"State\": \"\", \"Message\": \"\"},\r\n        bankStatement: {\"State\": \"\", \"Message\": \"\"},\r\n        password: {\"State\": \"\", \"Message\": \"\"},\r\n        confirmPassword: {\"State\": \"\", \"Message\": \"\"}\r\n    });\r\n\r\n    const [disabled, setDisabled] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let emailFlag = emailRegex.test(formData.email);\r\n        let nicFlag = nicRegex.test(formData.nic);\r\n        let mobileFlag = mobileRegex.test(formData.mobile);\r\n        let passwordFlag = passwordRegex.test(formData.password);\r\n        let confirmPasswordFlag = formData.password === formData.confirmPassword;\r\n\r\n        setValidateFormData({\r\n            email: {\r\n                State: emailFlag || !formData.email ? \"Valid\" : \"Invalid\",\r\n                Message: emailFlag || !formData.email ? \"\" : \"Invalid Email\"\r\n            },\r\n            nic: {\r\n                State: nicFlag || !formData.nic ? \"Valid\" : \"Invalid\",\r\n                Message: nicFlag || !formData.nic ? \"\" : \"Invalid NIC\"\r\n            },\r\n            mobile: {\r\n                State: mobileFlag || !formData.mobile ? \"Valid\" : \"Invalid\",\r\n                Message: mobileFlag || !formData.mobile ? \"\" : \"Invalid Contact Number\"\r\n            },\r\n            password: {\r\n                State: passwordFlag || !formData.password ? \"Valid\" : \"Invalid\",\r\n                Message: passwordFlag || !formData.password ? \"\" : \"Password must contain at least 8 characters, one uppercase, one lowercase and one number\"\r\n            },\r\n            confirmPassword: {\r\n                State: confirmPasswordFlag || !formData.confirmPassword ? \"Valid\" : \"Invalid\",\r\n                Message: confirmPasswordFlag || !formData.confirmPassword ? \"\" : \"Passwords do not match\"\r\n            }\r\n        });\r\n        //check email already exist state\r\n        if (formData.email) {\r\n            axios.get(`/auth/checkEmail/${formData.email}`)\r\n                .then((res) => {\r\n                        if (res.data.status === \"Error\") {\r\n                            setValidateFormData((prevData) => ({\r\n                                ...prevData,\r\n                                email: {\r\n                                    State: \"Invalid\",\r\n                                    Message: \"Email already exists\"\r\n                                }\r\n                            }));\r\n                        }\r\n                    }\r\n                )\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n        }\r\n    }, [formData.email, formData.nic, formData.mobile, formData.password, formData.confirmPassword]);\r\n\r\n    const [requiredFields] = useState({\r\n        // Add the required fields here, corresponding to each page\r\n        0: ['firstname', 'lastname', 'firstline', 'town', 'district', 'email', 'nic', 'gender', 'mobile'],\r\n        1: [],\r\n        2: ['policeReport', 'bankStatement', 'password', 'confirmPassword']\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Check if all the required fields on the current page are filled\r\n        const isPageDataValid = requiredFields[page]?.every(field => formData[field]);\r\n\r\n        // Check if there are no validation errors for the current page\r\n        const isPageValid = Object.keys(validateFormData).every(field => validateFormData[field].State === \"Valid\");\r\n\r\n        //check at least 5 from the categories are selected\r\n        if (page === 1) {\r\n            const isCategoriesValid = sectorId.length >= 1;\r\n            setValidateFormData((prevData) => ({\r\n                ...prevData,\r\n                categories: {\r\n                    State: isCategoriesValid ? \"Valid\" : \"Invalid\",\r\n                    Message: isCategoriesValid ? \"\" : \"Please select at least 5 categories\"\r\n                }\r\n            }));\r\n        }\r\n\r\n        // Enable/disable the Next button based on the above checks\r\n        setDisabled((!isPageDataValid || !isPageValid));\r\n    }, [formData, validateFormData, requiredFields, page]);\r\n\r\n    const FormTitles = [\"Signup1\", \"Signup2\", \"Signup3\"];\r\n\r\n    const PageDisplay = () => {\r\n        if (page === 0) {\r\n            return <Signup1 formData={formData} setFormData={setFormData} validateFormData={validateFormData}/>\r\n        } else if (page === 1) {\r\n            return <Signup2 formData={formData} setFormData={setFormData} validateFormData={validateFormData}\r\n                            categories={categories} setCategories={setCategories}/>\r\n        } else if (page === 2) {\r\n            return <Signup3 formData={formData} setFormData={setFormData} validateFormData={validateFormData}/>\r\n        }\r\n    };\r\n\r\n    const handlePrevClick = () => {\r\n        setPage((currPage) => currPage - 1)\r\n    };\r\n\r\n    const requestData = {\r\n        firstname: formData.firstname,\r\n        lastname: formData.lastname,\r\n        firstLineAddress: formData.firstline,\r\n        secondLineAddress: formData.secondline,\r\n        town: formData.town,\r\n        district: formData.district,\r\n        email: formData.email,\r\n        nic: formData.nic,\r\n        gender: formData.gender,\r\n        contactNumber: formData.mobile,\r\n        policeReport: formData.policeReport,\r\n        financialDocument: formData.bankStatement,\r\n        password: formData.password,\r\n        confirmPassword: formData.confirmPassword,\r\n        sectorId: sectorId\r\n    }\r\n\r\n    const handleNextClick = async () => {\r\n        if (page === FormTitles.length - 1) {\r\n            try {\r\n                const formData = new FormData();\r\n\r\n                //generate a unique names for images using date and a random number\r\n                const policeReportFileName = Date.now() + Math.random() + requestData.policeReport.name;\r\n                const bankStatementFileName = Date.now() + Math.random() + requestData.financialDocument.name;\r\n\r\n                //append the images to the formdata\r\n                formData.append(\"policeReport\", requestData.policeReport, policeReportFileName);\r\n                formData.append(\"bankStatement\", requestData.financialDocument, bankStatementFileName);\r\n\r\n                //send the images to the backend\r\n                const response = await axios.post('/auth/uploadindividual', formData, {\r\n                    headers: {'Content-Type': 'multipart/form-data'},\r\n                    withCredentials: true\r\n                });\r\n\r\n                //update the request data with the image names\r\n                requestData.policeReport = policeReportFileName;\r\n                requestData.financialDocument = bankStatementFileName;\r\n\r\n\r\n                const response2 = await axios.post('auth/register/individualInvestor', JSON.stringify(requestData), {\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    withCredentials: true\r\n                });\r\n\r\n                if (response2.data.status === \"Success\") {\r\n                    setShowSuccessNotification(true);\r\n                } else {\r\n                    console.log(\"Error\");\r\n                }\r\n            } catch (error) {\r\n                console.error(error); // Handle any errors that occur during the request\r\n            }\r\n        } else {\r\n            setPage((currPage) => currPage + 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar active=\"Sign Up\"/>\r\n            <main className=\"h-auto flex justify-center items-center bg-white lg:h-screen\">\r\n                <form className=\" bg-white flex drop-shadow-md w-full h-auto lg:rounded-[1rem] lg:w-9/12 mt-[-3rem]\">\r\n                    <div className=\"text-gray-700 p-20 w-full\">\r\n                        {PageDisplay()}\r\n                        <Button\r\n                            type=\"button\"\r\n                            className={'float-left' + (page === 0 ? ' hidden' : '')}\r\n                            icon=\"previous\"\r\n                            onClick={handlePrevClick}\r\n                        >\r\n                            Prev\r\n                        </Button>\r\n                        <Button\r\n                            type=\"button\"\r\n                            className=\"float-right\"\r\n                            onClick={handleNextClick}\r\n                            icon={page === FormTitles.length - 1 ? '' : 'next'}\r\n                            disabled={disabled}\r\n                        >\r\n                            {page === FormTitles.length - 1 ? 'Submit' : 'Next'}\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"individual_investor w-[50%] rounded-r-[1rem] hidden lg:block\">\r\n                    </div>\r\n                </form>\r\n            </main>\r\n            <div>\r\n                {showSuccessNotification && (\r\n                    <StatusPopUp\r\n                        successTitle=\"Registration Request sent Successfully\"\r\n                        successMessage=\"Please wait for admin to check and approve your request\"\r\n                        redirectUrl=\"/\"\r\n                    />\r\n                )}\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}