{"ast":null,"code":"var _jsxFileName = \"/Users/samindu/Downloads/client/src/pages/common/Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport useAxiosMethods from \"../../hooks/useAxiosMethods\";\nimport { Header, Input } from \"../webcomponent\";\nimport useAuth from \"../../hooks/useAuth\";\nimport SockJS from \"sockjs-client\";\nimport { over } from \"stompjs\";\nimport { Avatar, Typography } from \"@material-tailwind/react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEllipsis, faImage, faPaperclip, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport useData from \"../../hooks/useData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet stompClient = null;\nconst Inbox = () => {\n  _s();\n  const {\n    auth\n  } = useAuth();\n  const {\n    data,\n    setData\n  } = useData();\n  const {\n    get\n  } = useAxiosMethods();\n  const sender = auth.id;\n  const [rawData, setRawData] = useState([]);\n  const [chats, setChats] = useState(new Map());\n  const [rooms, setRooms] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [currentRoom, setCurrentRoom] = useState(null);\n  useEffect(() => {\n    let socket = new SockJS('http://localhost:8080/api/auth/ws');\n    stompClient = over(socket);\n    stompClient.connect({}, onConnected, onError);\n    get(`/user/chat/${auth === null || auth === void 0 ? void 0 : auth.id}`, setRawData);\n  }, []);\n  useEffect(() => {\n    if (rawData.length === 0) return;\n    let temp = [];\n    let room = [];\n    let roomOwner = null;\n    let name = \"\";\n    let lastSeen = \"\";\n    let lastMessageDate = \"\";\n    rawData === null || rawData === void 0 ? void 0 : rawData.map(deserializing);\n    function deserializing(data) {\n      var _roomOwner, _roomOwner9, _data$sender, _data$receiver, _roomOwner11;\n      (data === null || data === void 0 ? void 0 : data.sender.id) === (auth === null || auth === void 0 ? void 0 : auth.id) ? roomOwner = data === null || data === void 0 ? void 0 : data.receiver : roomOwner = data === null || data === void 0 ? void 0 : data.sender;\n      if (!isExist(temp, (_roomOwner = roomOwner) === null || _roomOwner === void 0 ? void 0 : _roomOwner.id)) {\n        var _roomOwner2, _roomOwner6, _roomOwner7, _roomOwner8;\n        if (((_roomOwner2 = roomOwner) === null || _roomOwner2 === void 0 ? void 0 : _roomOwner2.role) === \"ENTERPRISE_INVESTOR\") {\n          var _roomOwner3;\n          name = (_roomOwner3 = roomOwner) === null || _roomOwner3 === void 0 ? void 0 : _roomOwner3.businessName;\n        } else {\n          var _roomOwner4, _roomOwner5;\n          name = ((_roomOwner4 = roomOwner) === null || _roomOwner4 === void 0 ? void 0 : _roomOwner4.firstname) + \" \" + ((_roomOwner5 = roomOwner) === null || _roomOwner5 === void 0 ? void 0 : _roomOwner5.lastname);\n        }\n        ((_roomOwner6 = roomOwner) === null || _roomOwner6 === void 0 ? void 0 : _roomOwner6.status) === \"ONLINE\" ? lastSeen = \"Online\" : lastSeen = \"Last Seen \" + deserializeTimestamp((_roomOwner7 = roomOwner) === null || _roomOwner7 === void 0 ? void 0 : _roomOwner7.lastLogin);\n        let date = new Date(data === null || data === void 0 ? void 0 : data.timestamp);\n        let today = new Date();\n        if (date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear()) {\n          lastMessageDate = deserializeTimestamp(data === null || data === void 0 ? void 0 : data.timestamp);\n        } else {\n          lastMessageDate = date.getDate() + \"/\" + date.getMonth() + \"/\" + date.getFullYear();\n        }\n        room = {\n          id: (_roomOwner8 = roomOwner) === null || _roomOwner8 === void 0 ? void 0 : _roomOwner8.id,\n          name: name,\n          image: data === null || data === void 0 ? void 0 : data.roomOwnerImage,\n          lastSeen: lastSeen,\n          lastMessageDate: lastMessageDate,\n          lastMessage: data === null || data === void 0 ? void 0 : data.message\n        };\n        temp.push(room);\n      }\n      if (isExist(temp, (_roomOwner9 = roomOwner) === null || _roomOwner9 === void 0 ? void 0 : _roomOwner9.id)) {\n        let index = temp.findIndex(room => {\n          var _roomOwner10;\n          return room.id === ((_roomOwner10 = roomOwner) === null || _roomOwner10 === void 0 ? void 0 : _roomOwner10.id);\n        });\n        temp[index].lastMessage = data === null || data === void 0 ? void 0 : data.message;\n      }\n      let dataPacket = {\n        sender: data === null || data === void 0 ? void 0 : (_data$sender = data.sender) === null || _data$sender === void 0 ? void 0 : _data$sender.id,\n        receiver: data === null || data === void 0 ? void 0 : (_data$receiver = data.receiver) === null || _data$receiver === void 0 ? void 0 : _data$receiver.id,\n        message: data === null || data === void 0 ? void 0 : data.message,\n        time: data === null || data === void 0 ? void 0 : data.timestamp,\n        type: \"MESSAGE\"\n      };\n      updateChats((_roomOwner11 = roomOwner) === null || _roomOwner11 === void 0 ? void 0 : _roomOwner11.id, dataPacket);\n    }\n    temp.map(createRooms);\n    function createRooms(room) {\n      setRooms(prev => [...prev, room]);\n    }\n    return () => {\n      console.log(\"Disconnecting\");\n    };\n  }, [rawData]);\n  useEffect(() => {}, [chats]);\n  useEffect(() => {\n    if (data === null && rooms.length === 0) return;\n    if (data !== null && data !== void 0 && data.id) {\n      if (isExist(rooms, data === null || data === void 0 ? void 0 : data.id)) {\n        setCurrentRoom([data === null || data === void 0 ? void 0 : data.id, rooms.findIndex(room => room.id === (data === null || data === void 0 ? void 0 : data.id))]);\n        setData(null);\n      } else {\n        let room = {\n          id: data === null || data === void 0 ? void 0 : data.id,\n          name: data === null || data === void 0 ? void 0 : data.name,\n          image: data === null || data === void 0 ? void 0 : data.profileImage,\n          lastSeen: \"\",\n          lastMessageDate: \"\",\n          lastMessage: \"\"\n        };\n        setRooms([...rooms, room]);\n        updateChats(data === null || data === void 0 ? void 0 : data.id, {});\n      }\n    }\n  }, [rooms]);\n  const onConnected = () => {\n    stompClient.subscribe('/user/' + sender + '/private', onMessageReceived);\n  };\n  const onError = () => {\n    console.log(\"Error Connecting to Websocket\");\n  };\n  const onMessageReceived = payload => {\n    let dataPacket = JSON.parse(payload.body);\n    console.log(rooms);\n    updateChats(Number(dataPacket.sender), dataPacket);\n  };\n  const onSendMessage = event => {\n    event.preventDefault();\n\n    //Timestamp\n    let timestamp = new Date();\n    let dataPacket = {\n      sender: sender,\n      receiver: currentRoom[0],\n      message: message,\n      time: timestamp,\n      type: 'MESSAGE'\n    };\n    if (isExist(rooms, currentRoom[0])) {\n      let index = rooms.findIndex(room => room.id === currentRoom[0]);\n      rooms[index].lastMessageDate = deserializeTimestamp(timestamp);\n      rooms[index].lastMessage = message;\n    }\n    setRooms(rooms);\n    updateChats(currentRoom[0], dataPacket);\n    if (stompClient && message !== '') {\n      stompClient.send(\"/app/message\", {}, JSON.stringify(dataPacket));\n      setMessage('');\n    }\n  };\n  const updateChats = (id, dataPacket) => {\n    if (chats.get(id)) {\n      chats.get(id).push(dataPacket);\n    } else {\n      let list = [];\n      list.push(dataPacket);\n      chats.set(id, list);\n    }\n    setChats(new Map(chats));\n  };\n  const deserializeTimestamp = timestamp => {\n    let date = new Date(timestamp);\n    return date.getHours() + \":\" + (date.getMinutes() < 10 ? \"0\" : \"\") + date.getMinutes() + \" \" + (date.getHours() >= 12 ? \"PM\" : \"AM\");\n  };\n  const isExist = (rooms, id) => {\n    let flag = false;\n    if (rooms.length === 0) {\n      return false;\n    }\n    rooms === null || rooms === void 0 ? void 0 : rooms.map(check);\n    function check(room) {\n      if (room.id === id) {\n        flag = true;\n      }\n    }\n    return flag;\n  };\n  return /*#__PURE__*/_jsxDEV(Header, {\n    active: \"Inbox\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row min-h-full min-w-full bg-white rounded-lg border-[1px]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[25%] border-r-[1px] relative overflow-hidden overflow-y-scroll container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white flex p-4 justify-between items-center sticky top-0 z-[1000]\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faEllipsis,\n            className: \"cursor-pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full absolute\",\n          children: rooms.map((room, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-4 pb-0 hover:bg-light-purple/20 ${currentRoom === room.id ? \"bg-light-purple/20\" : \"\"}`,\n            onClick: () => setCurrentRoom([room.id, index]),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-center gap-4 w-full cursor-pointer\",\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                src: `data:application/img;base64,${room.image}`,\n                alt: \"avatar\",\n                size: \"sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"hidden lg:block w-full\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: room.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"small\",\n                    className: \"text-main-gray/60 font-normal hidden lg:block\",\n                    children: room.lastMessageDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"small\",\n                  className: \"text-main-gray/60 font-normal hidden lg:block w-full\",\n                  children: room.lastMessage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"mt-4 border-blue-gray-50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[75%] flex flex-col\",\n        children: currentRoom !== null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row justify-between items-center border-b-[1px] p-4 bg-white sticky top-0 z-[1000]\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex w-full px-[1rem] justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-center gap-4 w-full cursor-pointer\",\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  src: `data:application/img;base64,${rooms[currentRoom[1]].image}`,\n                  alt: \"avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-full\",\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: rooms[currentRoom[1]].name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"small\",\n                    className: \"text-main-gray/60 font-normal\",\n                    children: rooms[currentRoom[1]].lastSeen\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faEllipsis,\n                className: \"cursor-pointer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative h-full overflow-y-scroll container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full absolute\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col gap-[0.5rem] p-4\",\n                children:\n                //Skip if message from map is empty\n                [...chats.get(currentRoom[0])].filter(message => Object.keys(message).length !== 0).map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `flex flex-row gap-4 items-center ${message.sender === sender ? \"justify-end\" : \"\"}`,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `flex flex-row gap-[1rem] p-[0.7rem] ${message.sender === sender ? \"bg-light-purple/30 rounded-xl rounded-br-none\" : \"bg-light-purple/10 rounded-xl rounded-tl-none\"}`,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      className: \"text-black text-[1rem] font-[300]\",\n                      children: message.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: `inline-flex items-end text-black text-[0.5rem] font-[300]`,\n                      children: deserializeTimestamp(message.time)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 57\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row justify-end items-center bg-white w-full p-4 gap-1 relative border-t-[1px]\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-row items-center w-full border rounded-full h-12 px-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full\",\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  label: \"hidden\",\n                  className: \"border-none w-full focus:outline-none text-sm h-10 flex items-center p-4\",\n                  value: message,\n                  onInput: event => {\n                    setMessage(event.target.value);\n                  },\n                  onKeyPress: event => {\n                    if (event.key === 'Enter') onSendMessage(event);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"flex items-center justify-center h-10 w-8 text-gray-400\",\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faPaperclip,\n                    className: \"w-5 h-5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"flex items-center justify-center h-10 w-8 text-gray-400 ml-1 mr-2\",\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faImage,\n                    className: \"w-5 h-5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"flex items-center justify-center h-11 w-11 rounded-full bg-gray-200 hover:bg-main-purple text-main-purple hover:text-white\",\n              onClick: event => onSendMessage(event),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPaperPlane,\n                className: \"w-5 h-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 9\n  }, this);\n};\n_s(Inbox, \"Pi4dW2BsExjD1Y9PfPcTkH3xzgg=\", false, function () {\n  return [useAuth, useData, useAxiosMethods];\n});\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useEffect","useState","useAxiosMethods","Header","Input","useAuth","SockJS","over","Avatar","Typography","FontAwesomeIcon","faEllipsis","faImage","faPaperclip","faPaperPlane","useData","jsxDEV","_jsxDEV","Fragment","_Fragment","stompClient","Inbox","_s","auth","data","setData","get","sender","id","rawData","setRawData","chats","setChats","Map","rooms","setRooms","message","setMessage","currentRoom","setCurrentRoom","socket","connect","onConnected","onError","length","temp","room","roomOwner","name","lastSeen","lastMessageDate","map","deserializing","_roomOwner","_roomOwner9","_data$sender","_data$receiver","_roomOwner11","receiver","isExist","_roomOwner2","_roomOwner6","_roomOwner7","_roomOwner8","role","_roomOwner3","businessName","_roomOwner4","_roomOwner5","firstname","lastname","status","deserializeTimestamp","lastLogin","date","Date","timestamp","today","getDate","getMonth","getFullYear","image","roomOwnerImage","lastMessage","push","index","findIndex","_roomOwner10","dataPacket","time","type","updateChats","createRooms","prev","console","log","profileImage","subscribe","onMessageReceived","payload","JSON","parse","body","Number","onSendMessage","event","preventDefault","send","stringify","list","set","getHours","getMinutes","flag","check","active","children","className","variant","fileName","_jsxFileName","lineNumber","columnNumber","icon","onClick","src","alt","size","filter","Object","keys","label","value","onInput","target","onKeyPress","key","_c","$RefreshReg$"],"sources":["/Users/samindu/Downloads/client/src/pages/common/Inbox.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport useAxiosMethods from \"../../hooks/useAxiosMethods\";\r\n\r\nimport {Header, Input} from \"../webcomponent\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\nimport SockJS from \"sockjs-client\";\r\nimport {over} from \"stompjs\";\r\n\r\nimport {Avatar, Typography} from \"@material-tailwind/react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEllipsis, faImage, faPaperclip, faPaperPlane} from \"@fortawesome/free-solid-svg-icons\";\r\nimport useData from \"../../hooks/useData\";\r\n\r\nlet stompClient = null;\r\n\r\nconst Inbox = () => {\r\n\r\n    const {auth} = useAuth();\r\n    const {data, setData} = useData();\r\n    const {get} = useAxiosMethods();\r\n\r\n    const sender = auth.id;\r\n\r\n    const [rawData, setRawData] = useState([]);\r\n    const [chats, setChats] = useState(new Map());\r\n    const [rooms, setRooms] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [currentRoom, setCurrentRoom] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n        let socket = new SockJS('http://localhost:8080/api/auth/ws');\r\n        stompClient = over(socket);\r\n        stompClient.connect({}, onConnected, onError);\r\n\r\n        get(`/user/chat/${auth?.id}`, setRawData);\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        if (rawData.length === 0) return;\r\n\r\n        let temp = [];\r\n        let room = []\r\n        let roomOwner = null;\r\n        let name = \"\";\r\n        let lastSeen = \"\";\r\n        let lastMessageDate = \"\";\r\n\r\n        rawData?.map(deserializing);\r\n\r\n        function deserializing(data) {\r\n\r\n            data?.sender.id === auth?.id ? roomOwner = data?.receiver : roomOwner = data?.sender;\r\n\r\n            if (!isExist(temp, roomOwner?.id)) {\r\n\r\n                if (roomOwner?.role === \"ENTERPRISE_INVESTOR\") {\r\n                    name = roomOwner?.businessName;\r\n                } else {\r\n                    name = roomOwner?.firstname + \" \" + roomOwner?.lastname;\r\n                }\r\n\r\n                roomOwner?.status === \"ONLINE\" ? lastSeen = \"Online\" : lastSeen = \"Last Seen \" + deserializeTimestamp(roomOwner?.lastLogin);\r\n\r\n               let date = new Date(data?.timestamp);\r\n               let today = new Date();\r\n               if (date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear()) {\r\n                   lastMessageDate = deserializeTimestamp(data?.timestamp);\r\n               } else {\r\n                   lastMessageDate = date.getDate() + \"/\" + date.getMonth() + \"/\" + date.getFullYear();\r\n               }\r\n\r\n                room = {\r\n                    id: roomOwner?.id,\r\n                    name: name,\r\n                    image: data?.roomOwnerImage,\r\n                    lastSeen: lastSeen,\r\n                    lastMessageDate: lastMessageDate,\r\n                    lastMessage: data?.message\r\n                };\r\n\r\n                temp.push(room);\r\n            }\r\n\r\n            if (isExist(temp, roomOwner?.id)) {\r\n                let index = temp.findIndex(room => room.id === roomOwner?.id);\r\n                temp[index].lastMessage = data?.message;\r\n            }\r\n\r\n            let dataPacket = {\r\n                sender: data?.sender?.id,\r\n                receiver: data?.receiver?.id,\r\n                message: data?.message,\r\n                time: data?.timestamp,\r\n                type: \"MESSAGE\"\r\n            }\r\n\r\n            updateChats(roomOwner?.id, dataPacket);\r\n\r\n        }\r\n\r\n        temp.map(createRooms)\r\n\r\n        function createRooms(room) {\r\n            setRooms((prev => [...prev, room]))\r\n        }\r\n\r\n        return () => {\r\n            console.log(\"Disconnecting\");\r\n        }\r\n\r\n    }, [rawData]);\r\n\r\n    useEffect(() => {}, [chats]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (data === null && rooms.length === 0) return;\r\n\r\n        if (data?.id) {\r\n            if (isExist(rooms, data?.id)) {\r\n                setCurrentRoom([data?.id, rooms.findIndex(room => room.id === data?.id)]);\r\n                setData(null);\r\n            } else {\r\n                let room = {\r\n                    id: data?.id,\r\n                    name: data?.name,\r\n                    image: data?.profileImage,\r\n                    lastSeen: \"\",\r\n                    lastMessageDate: \"\",\r\n                    lastMessage: \"\"\r\n                }\r\n\r\n                setRooms([...rooms, room]);\r\n\r\n                updateChats( data?.id, {});\r\n            }\r\n\r\n        }\r\n    }, [rooms]);\r\n\r\n    const onConnected = () => {\r\n        stompClient.subscribe('/user/' + sender + '/private', onMessageReceived);\r\n    }\r\n\r\n    const onError = () => {\r\n        console.log(\"Error Connecting to Websocket\");\r\n    }\r\n\r\n    const onMessageReceived = (payload) => {\r\n        let dataPacket = JSON.parse(payload.body);\r\n        console.log(rooms)\r\n        updateChats(Number(dataPacket.sender), dataPacket);\r\n    }\r\n\r\n    const onSendMessage = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        //Timestamp\r\n        let timestamp = new Date();\r\n\r\n        let dataPacket = {sender: sender, receiver: currentRoom[0], message: message, time: timestamp, type: 'MESSAGE'};\r\n\r\n        if (isExist(rooms, currentRoom[0])) {\r\n            let index = rooms.findIndex(room => room.id === currentRoom[0]);\r\n\r\n            rooms[index].lastMessageDate = deserializeTimestamp(timestamp);\r\n            rooms[index].lastMessage = message;\r\n        }\r\n\r\n        setRooms(rooms)\r\n\r\n        updateChats(currentRoom[0], dataPacket);\r\n\r\n        if (stompClient && message !== '') {\r\n            stompClient.send(\"/app/message\", {}, JSON.stringify(dataPacket));\r\n            setMessage('');\r\n        }\r\n\r\n    }\r\n\r\n    const updateChats = (id, dataPacket) => {\r\n\r\n        if (chats.get(id)) {\r\n            chats.get(id,).push(dataPacket);\r\n        } else {\r\n            let list = [];\r\n            list.push(dataPacket);\r\n            chats.set(id, list);\r\n        }\r\n\r\n        setChats(new Map(chats));\r\n    }\r\n\r\n    const deserializeTimestamp = (timestamp) => {\r\n        let date = new Date(timestamp);\r\n        return date.getHours() + \":\" + (date.getMinutes() < 10 ? \"0\" : \"\") + date.getMinutes() + \" \" + (date.getHours() >= 12 ? \"PM\" : \"AM\");\r\n    }\r\n\r\n    const isExist = (rooms, id) => {\r\n\r\n        let flag = false;\r\n\r\n        if (rooms.length === 0) {\r\n            return false;\r\n        }\r\n\r\n        rooms?.map(check);\r\n\r\n        function check(room) {\r\n            if (room.id === id) {\r\n                flag = true;\r\n            }\r\n        }\r\n\r\n        return flag;\r\n    }\r\n\r\n    return (\r\n        <Header active=\"Inbox\">\r\n            <div className=\"flex flex-row min-h-full min-w-full bg-white rounded-lg border-[1px]\">\r\n                <div className=\"w-[25%] border-r-[1px] relative overflow-hidden overflow-y-scroll container\">\r\n                    <div className=\"bg-white flex p-4 justify-between items-center sticky top-0 z-[1000]\">\r\n                        <Typography variant=\"h6\">Message</Typography>\r\n                        <FontAwesomeIcon icon={faEllipsis} className=\"cursor-pointer\"/>\r\n                    </div>\r\n                    <div className=\"w-full absolute\">\r\n                        {\r\n                            rooms.map((room, index) => (\r\n                                <div\r\n                                    className={`p-4 pb-0 hover:bg-light-purple/20 ${currentRoom === room.id ? \"bg-light-purple/20\" : \"\"}`}\r\n                                    onClick={() => setCurrentRoom([room.id, index])} key={index}>\r\n                                    <div\r\n                                        className=\"flex items-center justify-center gap-4 w-full cursor-pointer\">\r\n                                        <Avatar\r\n                                            src={`data:application/img;base64,${room.image}`}\r\n                                            alt=\"avatar\"\r\n                                            size=\"sm\"\r\n                                        />\r\n                                        <div className=\"hidden lg:block w-full\">\r\n                                            <div className=\"flex justify-between items-center\">\r\n                                                <Typography variant=\"h6\">{room.name}</Typography>\r\n                                                <Typography variant=\"small\"\r\n                                                            className=\"text-main-gray/60 font-normal hidden lg:block\">\r\n                                                    {room.lastMessageDate}\r\n                                                </Typography>\r\n                                            </div>\r\n                                            <Typography variant=\"small\"\r\n                                                        className=\"text-main-gray/60 font-normal hidden lg:block w-full\">\r\n                                                {room.lastMessage}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr className=\"mt-4 border-blue-gray-50\"/>\r\n                                </div>\r\n\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-[75%] flex flex-col\">\r\n                    {\r\n                        currentRoom !== null\r\n                            ? <>\r\n                                <div\r\n                                    className=\"flex flex-row justify-between items-center border-b-[1px] p-4 bg-white sticky top-0 z-[1000]\">\r\n                                    <div className=\"flex w-full px-[1rem] justify-between items-center\">\r\n                                        <div className=\"flex items-center justify-center gap-4 w-full cursor-pointer\">\r\n                                            <Avatar\r\n                                                src={`data:application/img;base64,${rooms[currentRoom[1]].image}`}\r\n                                                alt=\"avatar\"\r\n                                            />\r\n                                            <div className=\"w-full\">\r\n                                                <Typography variant=\"h6\">{rooms[currentRoom[1]].name}</Typography>\r\n                                                <Typography variant=\"small\"\r\n                                                            className=\"text-main-gray/60 font-normal\">\r\n                                                    {rooms[currentRoom[1]].lastSeen}\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </div>\r\n                                        <FontAwesomeIcon icon={faEllipsis} className=\"cursor-pointer\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"relative h-full overflow-y-scroll container\">\r\n                                    <div className=\"w-full absolute\">\r\n                                        <div className=\"flex flex-col gap-[0.5rem] p-4\">\r\n                                            {\r\n                                                //Skip if message from map is empty\r\n                                                [...chats.get(currentRoom[0])].filter((message) => Object.keys(message).length !== 0).map((message, index) => (\r\n                                                    <div\r\n                                                        className={`flex flex-row gap-4 items-center ${message.sender === sender ? \"justify-end\" : \"\"}`}\r\n                                                        key={index}>\r\n                                                        <div\r\n                                                            className={`flex flex-row gap-[1rem] p-[0.7rem] ${message.sender === sender ? \"bg-light-purple/30 rounded-xl rounded-br-none\" : \"bg-light-purple/10 rounded-xl rounded-tl-none\"}`}>\r\n                                                            <Typography\r\n                                                                className=\"text-black text-[1rem] font-[300]\">{message.message}</Typography>\r\n                                                            <Typography\r\n                                                                className={`inline-flex items-end text-black text-[0.5rem] font-[300]`}>{deserializeTimestamp(message.time)}</Typography>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"flex flex-row justify-end items-center bg-white w-full p-4 gap-1 relative border-t-[1px]\">\r\n                                    <div className=\"flex flex-row items-center w-full border rounded-full h-12 px-2\">\r\n                                        <div className=\"w-full\">\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                label=\"hidden\"\r\n                                                className=\"border-none w-full focus:outline-none text-sm h-10 flex items-center p-4\"\r\n                                                value={message}\r\n                                                onInput={(event) => {\r\n                                                    setMessage(event.target.value);\r\n                                                }}\r\n                                                onKeyPress={(event) => {if (event.key === 'Enter') onSendMessage(event)}}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"flex flex-row\">\r\n                                            <button className=\"flex items-center justify-center h-10 w-8 text-gray-400\">\r\n                                                <FontAwesomeIcon icon={faPaperclip} className=\"w-5 h-5\"/>\r\n                                            </button>\r\n                                            <button\r\n                                                className=\"flex items-center justify-center h-10 w-8 text-gray-400 ml-1 mr-2\">\r\n                                                <FontAwesomeIcon icon={faImage} className=\"w-5 h-5\"/>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button\r\n                                        className=\"flex items-center justify-center h-11 w-11 rounded-full bg-gray-200 hover:bg-main-purple text-main-purple hover:text-white\"\r\n                                        onClick={(event) => onSendMessage(event)}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPaperPlane} className=\"w-5 h-5\"/>\r\n                                    </button>\r\n                                </div>\r\n                            </>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Header>\r\n    );\r\n}\r\n\r\nexport default Inbox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}