{"ast":null,"code":"var _jsxFileName = \"/Users/samindu/Downloads/client/src/pages/videoconference/Conference.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { VideoSDKMeeting } from \"@videosdk.live/rtc-js-prebuilt\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Conference = () => {\n  _s();\n  const {\n    id,\n    user,\n    time\n  } = useParams();\n  const [investorJoined, setinvestorJoined] = useState(false);\n  const [enterpreneurjoined, setenterpreneurjoined] = useState(false);\n\n  // when checking user investor or entrepreneur as any one can change the url and join, implemenet a way to confirm users identity( can use the auth state as it has the role)\n  // need to check if the meeting is sceduled or not, should maintain a flag when scheduling, before passing to use effect, if that a invalid url this should be denied\n  useEffect(() => {\n    const apiKey = process.env.REACT_APP_VIDEOSDK_API_KEY;\n    const name = user;\n    const currentTime = new Date().getTime();\n    const meetingTime = new Date(time).getTime();\n    console.log(\"current time: \", currentTime);\n    console.log(\"meeting time: \", meetingTime);\n\n    // after 30 mins of meeting time, link will expire\n    if (currentTime - meetingTime >= 30 * 60 * 1000) {\n      console.log(\"Link has expired.\"); // need to route or display meeting expired page or component\n      window.location.href = window.location.origin + '/link-expired';\n      return;\n    }\n\n    // to confirm investor or enterpreneu joined to meeting\n    // need to save this to DB\n    if (user === \"investor\") {\n      setinvestorJoined(true);\n    } else {\n      setenterpreneurjoined(true);\n    }\n    const config = {\n      name: name,\n      meetingId: id,\n      // from this it differentiate meetings\n      apiKey: apiKey,\n      region: \"sg001\",\n      // region for new meeting\n\n      containerId: null,\n      redirectOnLeave: window.location.origin + \"/meetings\",\n      micEnabled: false,\n      webcamEnabled: false,\n      participantCanToggleSelfWebcam: true,\n      participantCanToggleSelfMic: true,\n      participantCanLeave: true,\n      // if false, leave button won't be visible\n\n      chatEnabled: true,\n      screenShareEnabled: true,\n      pollEnabled: false,\n      whiteboardEnabled: false,\n      raiseHandEnabled: true,\n      layout: {\n        type: \"SPOTLIGHT\",\n        // \"SPOTLIGHT\" | \"SIDEBAR\" | \"GRID\"\n        priority: \"PIN\" // \"SPEAKER\" | \"PIN\",\n        // gridSize: 3,\n      },\n\n      branding: {\n        enabled: true,\n        logoURL: \"/assets/images/VentureVerse-Black.png\",\n        name: \"VentureVerse\",\n        poweredBy: false\n      },\n      permissions: {\n        pin: true,\n        askToJoin: user === \"entrepreneur\" ? true : false,\n        // Ask joined participants for entry in meeting\n        toggleParticipantMic: true,\n        // Can toggle other participant's mic\n        toggleParticipantWebcam: true,\n        // Can toggle other participant's webcam\n        toggleVirtualBackground: true,\n        // Can toggle virtual background\n        drawOnWhiteboard: false,\n        // Can draw on whiteboard\n        toggleWhiteboard: false,\n        // Can toggle whiteboard\n        toggleRecording: false,\n        // Can toggle meeting recording\n        toggleLivestream: false,\n        //can toggle live stream\n        removeParticipant: user === \"investor\" ? true : false,\n        // Can remove participant\n        endMeeting: user === \"investor\" ? true : false,\n        // Can end meeting\n        changeLayout: true //can change layout\n      },\n\n      waitingScreen: {\n        imageUrl: \"https://i.imgur.com/9WAcrpj.png\",\n        text: \"Connecting to the meeting...\"\n      },\n      joinScreen: {\n        visible: true,\n        // Show the join screen ?\n        title: \"VentureVerse Conference Room\",\n        // Meeting title\n        meetingUrl: window.location.origin + \"/meeting/\" + id + \"/\" + user + \"/\" + time // Meeting joining url\n      },\n\n      leftScreen: {\n        // visible when redirect on leave not provieded\n        actionButton: {\n          // optional action button\n          label: \"Go to Meetings Page\",\n          // action button label\n          href: window.location.origin + \"/meetings\" // action button href\n        },\n\n        rejoinButtonEnabled: false // show rejoin button\n      },\n\n      theme: \"DARK\",\n      // DARK || LIGHT || DEFAULT\n      notificationSoundEnabled: true,\n      debug: true,\n      // pop up error during invalid config or netwrok error\n\n      maxResolution: \"sd\" // \"hd\" or \"sd\"\n\n      // For more features check: /prebuilt/guide/prebuilt-video-and-audio-calling/getting-started\n    };\n\n    const meeting = new VideoSDKMeeting();\n    meeting.init(config);\n    let reminderTimer = null;\n    console.log(investorJoined, enterpreneurjoined);\n    if (investorJoined || enterpreneurjoined) {\n      const expiration = 30 * 60 * 1000 + meetingTime - currentTime;\n      const reminderDelay = 15 * 60 * 1000 + meetingTime - currentTime;\n      if (reminderDelay > 0) {\n        reminderTimer = setTimeout(() => {\n          if (investorJoined && !enterpreneurjoined) {\n            console.log(\"Patient ID:01, please join the meeting, Docotr is waiting\"); // need to send sms to patient\n          } else if (!investorJoined && enterpreneurjoined) {\n            console.log(\"Doctor ID:01, please join the meeting, Patient is waiting\"); // need to send sms to doctor\n          }\n        }, reminderDelay);\n      }\n\n      // after 30 mins automaticaly page will be refreshed and participant wont be able to use that link again\n      const refreshAfterTimeSlot = setTimeout(() => {\n        window.location.reload();\n      }, expiration);\n      return () => {\n        clearTimeout(reminderTimer);\n        clearTimeout(refreshAfterTimeSlot);\n      };\n    }\n  }, [id, user, time, investorJoined, enterpreneurjoined]);\n  useEffect(() => {\n    const handleBeforeUnload = event => {\n      event.preventDefault();\n      // this shouldn't be empty, but browser will show a default message\n      event.returnValue = \"Are You Sure You Want To Leave?\";\n    };\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n};\n_s(Conference, \"2kBoSbXFFBSgmFn5tFYlgxAe0ys=\", false, function () {\n  return [useParams];\n});\n_c = Conference;\nexport default Conference;\nvar _c;\n$RefreshReg$(_c, \"Conference\");","map":{"version":3,"names":["React","useEffect","useState","VideoSDKMeeting","useParams","jsxDEV","_jsxDEV","Conference","_s","id","user","time","investorJoined","setinvestorJoined","enterpreneurjoined","setenterpreneurjoined","apiKey","process","env","REACT_APP_VIDEOSDK_API_KEY","name","currentTime","Date","getTime","meetingTime","console","log","window","location","href","origin","config","meetingId","region","containerId","redirectOnLeave","micEnabled","webcamEnabled","participantCanToggleSelfWebcam","participantCanToggleSelfMic","participantCanLeave","chatEnabled","screenShareEnabled","pollEnabled","whiteboardEnabled","raiseHandEnabled","layout","type","priority","branding","enabled","logoURL","poweredBy","permissions","pin","askToJoin","toggleParticipantMic","toggleParticipantWebcam","toggleVirtualBackground","drawOnWhiteboard","toggleWhiteboard","toggleRecording","toggleLivestream","removeParticipant","endMeeting","changeLayout","waitingScreen","imageUrl","text","joinScreen","visible","title","meetingUrl","leftScreen","actionButton","label","rejoinButtonEnabled","theme","notificationSoundEnabled","debug","maxResolution","meeting","init","reminderTimer","expiration","reminderDelay","setTimeout","refreshAfterTimeSlot","reload","clearTimeout","handleBeforeUnload","event","preventDefault","returnValue","addEventListener","removeEventListener","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samindu/Downloads/client/src/pages/videoconference/Conference.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { VideoSDKMeeting } from \"@videosdk.live/rtc-js-prebuilt\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Conference = () => {\r\n\r\n    const { id, user, time } = useParams();\r\n\r\n    const [investorJoined, setinvestorJoined] = useState(false);\r\n    const [enterpreneurjoined, setenterpreneurjoined] = useState(false);\r\n\r\n\r\n    // when checking user investor or entrepreneur as any one can change the url and join, implemenet a way to confirm users identity( can use the auth state as it has the role)\r\n    // need to check if the meeting is sceduled or not, should maintain a flag when scheduling, before passing to use effect, if that a invalid url this should be denied\r\n    useEffect(() => {\r\n\r\n        const apiKey = process.env.REACT_APP_VIDEOSDK_API_KEY;\r\n        const name = user;\r\n\r\n        const currentTime = new Date().getTime();\r\n        const meetingTime = new Date(time).getTime();\r\n        console.log(\"current time: \", currentTime);\r\n        console.log(\"meeting time: \", meetingTime);\r\n\r\n        // after 30 mins of meeting time, link will expire\r\n        if (currentTime - meetingTime >= 30 * 60 * 1000) {\r\n            console.log(\"Link has expired.\"); // need to route or display meeting expired page or component\r\n            window.location.href = window.location.origin + '/link-expired';\r\n            return;\r\n        }\r\n\r\n        // to confirm investor or enterpreneu joined to meeting\r\n        // need to save this to DB\r\n        if (user === \"investor\") {\r\n            setinvestorJoined(true);\r\n        } else {\r\n            setenterpreneurjoined(true);\r\n        }\r\n\r\n\r\n        const config = {\r\n            name: name,\r\n            meetingId: id, // from this it differentiate meetings\r\n            apiKey: apiKey,\r\n\r\n            region: \"sg001\", // region for new meeting\r\n\r\n            containerId: null,\r\n            redirectOnLeave: window.location.origin + \"/meetings\",\r\n\r\n            micEnabled: false,\r\n            webcamEnabled: false,\r\n            participantCanToggleSelfWebcam: true,\r\n            participantCanToggleSelfMic: true,\r\n            participantCanLeave: true, // if false, leave button won't be visible\r\n\r\n            chatEnabled: true,\r\n            screenShareEnabled: true,\r\n            pollEnabled: false,\r\n            whiteboardEnabled: false,\r\n            raiseHandEnabled: true,\r\n\r\n\r\n            layout: {\r\n                type: \"SPOTLIGHT\", // \"SPOTLIGHT\" | \"SIDEBAR\" | \"GRID\"\r\n                priority: \"PIN\", // \"SPEAKER\" | \"PIN\",\r\n                // gridSize: 3,\r\n            },\r\n\r\n            branding: {\r\n                enabled: true,\r\n                logoURL:\r\n                    \"/assets/images/VentureVerse-Black.png\",\r\n                name: \"VentureVerse\",\r\n                poweredBy: false,\r\n            },\r\n\r\n            permissions: {\r\n                pin: true,\r\n                askToJoin: user === \"entrepreneur\" ? true : false, // Ask joined participants for entry in meeting\r\n                toggleParticipantMic: true, // Can toggle other participant's mic\r\n                toggleParticipantWebcam: true, // Can toggle other participant's webcam\r\n                toggleVirtualBackground: true, // Can toggle virtual background\r\n                drawOnWhiteboard: false, // Can draw on whiteboard\r\n                toggleWhiteboard: false, // Can toggle whiteboard\r\n                toggleRecording: false, // Can toggle meeting recording\r\n                toggleLivestream: false, //can toggle live stream\r\n                removeParticipant: user === \"investor\" ? true : false, // Can remove participant\r\n                endMeeting: user === \"investor\" ? true : false, // Can end meeting\r\n                changeLayout: true, //can change layout\r\n            },\r\n\r\n            waitingScreen: {\r\n                imageUrl: \"https://i.imgur.com/9WAcrpj.png\",\r\n                text: \"Connecting to the meeting...\",\r\n            },\r\n\r\n            joinScreen: {\r\n                visible: true, // Show the join screen ?\r\n                title: \"VentureVerse Conference Room\", // Meeting title\r\n                meetingUrl: window.location.origin + \"/meeting/\" + id + \"/\" + user + \"/\" + time, // Meeting joining url\r\n            },\r\n\r\n            leftScreen: {\r\n                // visible when redirect on leave not provieded\r\n                actionButton: {\r\n                    // optional action button\r\n                    label: \"Go to Meetings Page\", // action button label\r\n                    href: window.location.origin + \"/meetings\", // action button href\r\n\r\n                },\r\n                rejoinButtonEnabled: false, // show rejoin button\r\n            },\r\n\r\n            theme: \"DARK\", // DARK || LIGHT || DEFAULT\r\n            notificationSoundEnabled: true,\r\n\r\n            debug: true, // pop up error during invalid config or netwrok error\r\n\r\n            maxResolution: \"sd\", // \"hd\" or \"sd\"\r\n\r\n            // For more features check: /prebuilt/guide/prebuilt-video-and-audio-calling/getting-started\r\n        };\r\n\r\n        const meeting = new VideoSDKMeeting();\r\n        meeting.init(config);\r\n\r\n        let reminderTimer = null;\r\n        console.log(investorJoined, enterpreneurjoined);\r\n\r\n        if (investorJoined || enterpreneurjoined) {\r\n\r\n            const expiration = ((30 * 60 * 1000) + meetingTime) - currentTime;\r\n            const reminderDelay = ((15 * 60 * 1000) + meetingTime) - currentTime;\r\n\r\n            if (reminderDelay > 0) {\r\n                reminderTimer = setTimeout(() => {\r\n                    if (investorJoined && !enterpreneurjoined) {\r\n                        console.log(\"Patient ID:01, please join the meeting, Docotr is waiting\"); // need to send sms to patient\r\n                    } else if (!investorJoined && enterpreneurjoined) {\r\n                        console.log(\"Doctor ID:01, please join the meeting, Patient is waiting\"); // need to send sms to doctor\r\n                    }\r\n                }, reminderDelay);\r\n            }\r\n\r\n\r\n            // after 30 mins automaticaly page will be refreshed and participant wont be able to use that link again\r\n            const refreshAfterTimeSlot = setTimeout(() => {\r\n                window.location.reload();\r\n            }, expiration);\r\n\r\n            return () => {\r\n                clearTimeout(reminderTimer);\r\n                clearTimeout(refreshAfterTimeSlot);\r\n            };\r\n        }\r\n\r\n\r\n    }, [id, user, time, investorJoined, enterpreneurjoined]);\r\n\r\n\r\n    useEffect(() => {\r\n        const handleBeforeUnload = (event) => {\r\n            event.preventDefault();\r\n            // this shouldn't be empty, but browser will show a default message\r\n            event.returnValue = \"Are You Sure You Want To Leave?\";\r\n        };\r\n\r\n        window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Conference\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM;IAAEC,EAAE;IAAEC,IAAI;IAAEC;EAAK,CAAC,GAAGP,SAAS,CAAC,CAAC;EAEtC,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACY,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAGnE;EACA;EACAD,SAAS,CAAC,MAAM;IAEZ,MAAMe,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B;IACrD,MAAMC,IAAI,GAAGV,IAAI;IAEjB,MAAMW,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IACxC,MAAMC,WAAW,GAAG,IAAIF,IAAI,CAACX,IAAI,CAAC,CAACY,OAAO,CAAC,CAAC;IAC5CE,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEL,WAAW,CAAC;IAC1CI,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,WAAW,CAAC;;IAE1C;IACA,IAAIH,WAAW,GAAGG,WAAW,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE;MAC7CC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;MAClCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGF,MAAM,CAACC,QAAQ,CAACE,MAAM,GAAG,eAAe;MAC/D;IACJ;;IAEA;IACA;IACA,IAAIpB,IAAI,KAAK,UAAU,EAAE;MACrBG,iBAAiB,CAAC,IAAI,CAAC;IAC3B,CAAC,MAAM;MACHE,qBAAqB,CAAC,IAAI,CAAC;IAC/B;IAGA,MAAMgB,MAAM,GAAG;MACXX,IAAI,EAAEA,IAAI;MACVY,SAAS,EAAEvB,EAAE;MAAE;MACfO,MAAM,EAAEA,MAAM;MAEdiB,MAAM,EAAE,OAAO;MAAE;;MAEjBC,WAAW,EAAE,IAAI;MACjBC,eAAe,EAAER,MAAM,CAACC,QAAQ,CAACE,MAAM,GAAG,WAAW;MAErDM,UAAU,EAAE,KAAK;MACjBC,aAAa,EAAE,KAAK;MACpBC,8BAA8B,EAAE,IAAI;MACpCC,2BAA2B,EAAE,IAAI;MACjCC,mBAAmB,EAAE,IAAI;MAAE;;MAE3BC,WAAW,EAAE,IAAI;MACjBC,kBAAkB,EAAE,IAAI;MACxBC,WAAW,EAAE,KAAK;MAClBC,iBAAiB,EAAE,KAAK;MACxBC,gBAAgB,EAAE,IAAI;MAGtBC,MAAM,EAAE;QACJC,IAAI,EAAE,WAAW;QAAE;QACnBC,QAAQ,EAAE,KAAK,CAAE;QACjB;MACJ,CAAC;;MAEDC,QAAQ,EAAE;QACNC,OAAO,EAAE,IAAI;QACbC,OAAO,EACH,uCAAuC;QAC3C/B,IAAI,EAAE,cAAc;QACpBgC,SAAS,EAAE;MACf,CAAC;MAEDC,WAAW,EAAE;QACTC,GAAG,EAAE,IAAI;QACTC,SAAS,EAAE7C,IAAI,KAAK,cAAc,GAAG,IAAI,GAAG,KAAK;QAAE;QACnD8C,oBAAoB,EAAE,IAAI;QAAE;QAC5BC,uBAAuB,EAAE,IAAI;QAAE;QAC/BC,uBAAuB,EAAE,IAAI;QAAE;QAC/BC,gBAAgB,EAAE,KAAK;QAAE;QACzBC,gBAAgB,EAAE,KAAK;QAAE;QACzBC,eAAe,EAAE,KAAK;QAAE;QACxBC,gBAAgB,EAAE,KAAK;QAAE;QACzBC,iBAAiB,EAAErD,IAAI,KAAK,UAAU,GAAG,IAAI,GAAG,KAAK;QAAE;QACvDsD,UAAU,EAAEtD,IAAI,KAAK,UAAU,GAAG,IAAI,GAAG,KAAK;QAAE;QAChDuD,YAAY,EAAE,IAAI,CAAE;MACxB,CAAC;;MAEDC,aAAa,EAAE;QACXC,QAAQ,EAAE,iCAAiC;QAC3CC,IAAI,EAAE;MACV,CAAC;MAEDC,UAAU,EAAE;QACRC,OAAO,EAAE,IAAI;QAAE;QACfC,KAAK,EAAE,8BAA8B;QAAE;QACvCC,UAAU,EAAE7C,MAAM,CAACC,QAAQ,CAACE,MAAM,GAAG,WAAW,GAAGrB,EAAE,GAAG,GAAG,GAAGC,IAAI,GAAG,GAAG,GAAGC,IAAI,CAAE;MACrF,CAAC;;MAED8D,UAAU,EAAE;QACR;QACAC,YAAY,EAAE;UACV;UACAC,KAAK,EAAE,qBAAqB;UAAE;UAC9B9C,IAAI,EAAEF,MAAM,CAACC,QAAQ,CAACE,MAAM,GAAG,WAAW,CAAE;QAEhD,CAAC;;QACD8C,mBAAmB,EAAE,KAAK,CAAE;MAChC,CAAC;;MAEDC,KAAK,EAAE,MAAM;MAAE;MACfC,wBAAwB,EAAE,IAAI;MAE9BC,KAAK,EAAE,IAAI;MAAE;;MAEbC,aAAa,EAAE,IAAI,CAAE;;MAErB;IACJ,CAAC;;IAED,MAAMC,OAAO,GAAG,IAAI9E,eAAe,CAAC,CAAC;IACrC8E,OAAO,CAACC,IAAI,CAACnD,MAAM,CAAC;IAEpB,IAAIoD,aAAa,GAAG,IAAI;IACxB1D,OAAO,CAACC,GAAG,CAACd,cAAc,EAAEE,kBAAkB,CAAC;IAE/C,IAAIF,cAAc,IAAIE,kBAAkB,EAAE;MAEtC,MAAMsE,UAAU,GAAK,EAAE,GAAG,EAAE,GAAG,IAAI,GAAI5D,WAAW,GAAIH,WAAW;MACjE,MAAMgE,aAAa,GAAK,EAAE,GAAG,EAAE,GAAG,IAAI,GAAI7D,WAAW,GAAIH,WAAW;MAEpE,IAAIgE,aAAa,GAAG,CAAC,EAAE;QACnBF,aAAa,GAAGG,UAAU,CAAC,MAAM;UAC7B,IAAI1E,cAAc,IAAI,CAACE,kBAAkB,EAAE;YACvCW,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAC,CAAC,CAAC;UAC9E,CAAC,MAAM,IAAI,CAACd,cAAc,IAAIE,kBAAkB,EAAE;YAC9CW,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAC,CAAC,CAAC;UAC9E;QACJ,CAAC,EAAE2D,aAAa,CAAC;MACrB;;MAGA;MACA,MAAME,oBAAoB,GAAGD,UAAU,CAAC,MAAM;QAC1C3D,MAAM,CAACC,QAAQ,CAAC4D,MAAM,CAAC,CAAC;MAC5B,CAAC,EAAEJ,UAAU,CAAC;MAEd,OAAO,MAAM;QACTK,YAAY,CAACN,aAAa,CAAC;QAC3BM,YAAY,CAACF,oBAAoB,CAAC;MACtC,CAAC;IACL;EAGJ,CAAC,EAAE,CAAC9E,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAEC,cAAc,EAAEE,kBAAkB,CAAC,CAAC;EAGxDb,SAAS,CAAC,MAAM;IACZ,MAAMyF,kBAAkB,GAAIC,KAAK,IAAK;MAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtB;MACAD,KAAK,CAACE,WAAW,GAAG,iCAAiC;IACzD,CAAC;IAEDlE,MAAM,CAACmE,gBAAgB,CAAC,cAAc,EAAEJ,kBAAkB,CAAC;IAE3D,OAAO,MAAM;MACT/D,MAAM,CAACoE,mBAAmB,CAAC,cAAc,EAAEL,kBAAkB,CAAC;IAClE,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIpF,OAAA;IAAA0F,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd,CAAC;AAAA3F,EAAA,CA/KKD,UAAU;EAAA,QAEeH,SAAS;AAAA;AAAAgG,EAAA,GAFlC7F,UAAU;AAiLhB,eAAeA,UAAU;AAAA,IAAA6F,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}