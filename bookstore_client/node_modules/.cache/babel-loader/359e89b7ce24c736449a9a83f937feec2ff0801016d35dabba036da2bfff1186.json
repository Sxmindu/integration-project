{"ast":null,"code":"var _jsxFileName = \"/Users/samindu/Downloads/client/src/pages/admin/ComplainReports.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Header, DoughnutChart, Popover, BarChart, Select } from \"../webcomponent\";\nimport useAxiosMethods from \"../../hooks/useAxiosMethods\";\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserReports = () => {\n  _s();\n  const {\n    get\n  } = useAxiosMethods();\n  const [response, setResponse] = useState([]);\n  const [sortBy, setSortBy] = useState(\"All\");\n  const [complains, setComplains] = useState([]);\n  const [complains2, setComplains2] = useState([]);\n  const pdfContainerRef = useRef(null);\n  const pdfContainer2Ref = useRef(null);\n  useEffect(() => {\n    get(\"/entrepreneurs/getcomplains\", setResponse);\n  }, []);\n  useEffect(() => {\n    setComplains(response);\n    setComplains2(response);\n  }, [response]);\n\n  //filter the response data according to the selected dropdown item\n  const handleSortByChange = selectedOption => {\n    setSortBy(selectedOption);\n    if (selectedOption === \"All\") {\n      setComplains(response);\n    } else if (selectedOption === \"Last 7 Days\") {\n      const data = response.filter(complain => {\n        const date = new Date(complain.date);\n        const today = new Date();\n        const diffTime = Math.abs(today - date);\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        return diffDays <= 7;\n      });\n      setComplains(data);\n    } else if (selectedOption === \"Last Month\") {\n      const filteredData = response.filter(complain => {\n        const date = new Date(complain.date);\n        const today = new Date();\n        const diffTime = Math.abs(today - date);\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        return diffDays <= 30;\n      });\n      setComplains(filteredData);\n    }\n  };\n  const handleSortByChange2 = selectedOption => {\n    setSortBy(selectedOption);\n    if (selectedOption === \"All\") {\n      setComplains2(response);\n    } else if (selectedOption === \"Last 7 Days\") {\n      const data = response.filter(complain => {\n        const date = new Date(complain.date);\n        const today = new Date();\n        const diffTime = Math.abs(today - date);\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        return diffDays <= 7;\n      });\n      setComplains2(data);\n    } else if (selectedOption === \"Last Month\") {\n      const filteredData = response.filter(complain => {\n        const date = new Date(complain.date);\n        const today = new Date();\n        const diffTime = Math.abs(today - date);\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        return diffDays <= 30;\n      });\n      setComplains2(filteredData);\n    }\n  };\n  const investorComplains = [];\n  const entrepreneurComplains = [];\n  complains.forEach(complain => {\n    const userRole = complain.userRole;\n    const complainType = complain.complainType;\n    if (userRole === \"ENTREPRENEUR\") {\n      entrepreneurComplains.push(complainType);\n    }\n  });\n  complains2.forEach(complain => {\n    const userRole = complain.userRole;\n    const complainType = complain.complainType;\n    if (userRole === \"INDIVIDUAL_INVESTOR\") {\n      investorComplains.push(complainType);\n    }\n  });\n  let acceptedInvestorComplains = 0;\n  let pendingInvestorComplains = 0;\n  let rejectedInvestorComplains = 0;\n  let acceptedEntrepreneurComplains = 0;\n  let pendingEntrepreneurComplains = 0;\n  let rejectedEntrepreneurComplains = 0;\n\n  //foreach complain count accepted, pending, rejected\n  investorComplains.forEach(element => {\n    if (element === \"SOLVED\" || element === \"MARKED\") {\n      acceptedInvestorComplains++;\n    } else if (element === \"PENDING\") {\n      pendingInvestorComplains++;\n    } else if (element === \"REJECTED\") {\n      rejectedInvestorComplains++;\n    }\n  });\n  entrepreneurComplains.forEach(element => {\n    if (element === \"SOLVED\" || element === \"MARKED\") {\n      acceptedEntrepreneurComplains++;\n    } else if (element === \"PENDING\") {\n      pendingEntrepreneurComplains++;\n    } else if (element === \"REJECTED\") {\n      rejectedEntrepreneurComplains++;\n    }\n  });\n  const donutChart = {\n    chart1: {\n      label: \"Total Complains\",\n      series: [acceptedEntrepreneurComplains, pendingEntrepreneurComplains, rejectedEntrepreneurComplains],\n      colors: [\"#E186DD\", \"#FFD668\", \"#FF969C\"],\n      dataLabels: [\"Accepted\", \"Pending\", \"Rejected\"]\n    },\n    chart2: {\n      label: \"Total Complains\",\n      series: [acceptedInvestorComplains, pendingInvestorComplains, rejectedInvestorComplains],\n      // colors: [\"#A35EC2\", \"#C7A3D4\", \"#FFE8FF\"],\n      dataLabels: [\"Accepted\", \"Pending\", \"Rejected\"]\n    }\n  };\n  const generatePDF = async () => {\n    //report for entrepreneur section\n    const reportName = \"Entrepreneur Complains Report\";\n    const description = `This is a report of the complains published by the entrepreneurs\nof the system.\\n\\nDate: ${new Date().toLocaleString()}\\n`;\n    const pdf = new jsPDF('p', 'mm', 'a4');\n    const pdfContainer = pdfContainerRef.current;\n    if (pdfContainer) {\n      //report name with styles\n      pdf.setFont('helvetica', 'bold');\n      pdf.setFontSize(25);\n      pdf.setTextColor(144, 16, 185);\n      const textWidth = pdf.getStringUnitWidth(reportName) * pdf.getFontSize() / pdf.internal.scaleFactor;\n      const textOffset = (pdf.internal.pageSize.width - textWidth) / 2;\n      pdf.text(reportName, textOffset, 20);\n\n      //description with styles\n      pdf.setFont('helvetica', 'normal');\n      pdf.setFontSize(12);\n      pdf.setTextColor(0, 0, 0);\n      pdf.text(description, 30, 40);\n      const tableHeaders = [\"Complain Type\", \"No of Complains\"];\n      const tableData = [[\"Accepted\", acceptedEntrepreneurComplains], [\"Pending\", pendingEntrepreneurComplains], [\"Rejected\", rejectedEntrepreneurComplains]];\n      const tableOptions = {\n        head: [tableHeaders],\n        body: tableData,\n        startY: 70,\n        margin: {\n          left: 10\n        },\n        // Adjust left margin for desired horizontal position\n        theme: 'grid',\n        styles: {\n          fontSize: 10,\n          cellPadding: 1,\n          overflow: 'linebreak',\n          halign: 'center',\n          valign: 'middle'\n        },\n        columnStyles: {\n          0: {\n            cellWidth: 30\n          },\n          1: {\n            cellWidth: 30\n          }\n        }\n      };\n\n      // Calculate the total table width\n      const totalTableWidth = tableHeaders.length * tableOptions.columnStyles[0].cellWidth;\n\n      // Calculate the center position for X-axis\n      const pageWidth = pdf.internal.pageSize.width;\n      const startX = (pageWidth - totalTableWidth) / 2;\n\n      // Adjust the left margin to the calculated startX\n      tableOptions.margin.left = startX;\n      pdf.autoTable({\n        ...tableOptions\n      });\n\n      //chart with styles\n      const canvas = await html2canvas(pdfContainer);\n      const imageData = canvas.toDataURL('image/png');\n      pdf.addImage(imageData, 'PNG', 50, 100, 120, 100); // Adjust position and dimensions\n\n      // Save the PDF\n      pdf.save('entrepreneur_complains_report.pdf');\n    }\n  };\n  const generatePDF2 = async () => {\n    //report for investor section\n    const reportName2 = \"Investor Complains Report\";\n    //create a multiline description for the pdf including the date,response data\n    const description2 = `This is a report of the complains published by the investors\nof the system.\\n\\nDate: ${new Date().toLocaleString()}\\n`;\n    const pdf = new jsPDF('p', 'mm', 'a4');\n    const pdfContainer = pdfContainer2Ref.current;\n    if (pdfContainer) {\n      //report name with styles\n      pdf.setFont('helvetica', 'bold');\n      pdf.setFontSize(25);\n      pdf.setTextColor(144, 16, 185);\n      const textWidth = pdf.getStringUnitWidth(reportName2) * pdf.getFontSize() / pdf.internal.scaleFactor;\n      const textOffset = (pdf.internal.pageSize.width - textWidth) / 2;\n      pdf.text(reportName2, textOffset, 20);\n\n      //description with styles\n      pdf.setFont('helvetica', 'normal');\n      pdf.setFontSize(12);\n      pdf.setTextColor(0, 0, 0);\n      pdf.text(description2, 30, 40);\n      const tableHeaders = [\"Complain Type\", \"No of Complains\"];\n      const tableData = [[\"Accepted\", acceptedInvestorComplains], [\"Pending\", pendingInvestorComplains], [\"Rejected\", rejectedInvestorComplains]];\n      const tableOptions = {\n        head: [tableHeaders],\n        body: tableData,\n        startY: 70,\n        margin: {\n          left: 10\n        },\n        // Adjust left margin for desired horizontal position\n        theme: 'grid',\n        styles: {\n          fontSize: 10,\n          cellPadding: 1,\n          overflow: 'linebreak',\n          halign: 'center',\n          valign: 'middle'\n        },\n        columnStyles: {\n          0: {\n            cellWidth: 30\n          },\n          1: {\n            cellWidth: 30\n          }\n        }\n      };\n\n      // Calculate the total table width\n      const totalTableWidth = tableHeaders.length * tableOptions.columnStyles[0].cellWidth;\n\n      // Calculate the center position for X-axis\n      const pageWidth = pdf.internal.pageSize.width;\n      const startX = (pageWidth - totalTableWidth) / 2;\n\n      // Adjust the left margin to the calculated startX\n      tableOptions.margin.left = startX;\n      pdf.autoTable({\n        ...tableOptions\n      });\n\n      //chart with styles\n      const canvas = await html2canvas(pdfContainer);\n      const imageData = canvas.toDataURL('image/png');\n      pdf.addImage(imageData, 'PNG', 50, 100, 120, 100); // Adjust position and dimensions\n\n      // Save the PDF\n      pdf.save('investor_complains_report.pdf');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      active: \"Analytics\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"clear\",\n        className: \"px-[0.75rem] !border-none\",\n        type: \"button\",\n        icon: \"previous\",\n        onClick: () => {\n          window.location.href = \"/admin/analytics\";\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full flex flex-col lg:flex-row gap-[1rem] mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full lg:w-[50%] bg-white rounded-lg border-[1px] p-4 md:p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row gap-[0.2rem] border-gray-200 border-b py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-row\",\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"leading-none text-2xl font-bold text-gray-900 dark:text-white pb-2\",\n                children: \"Entrepreneur Complains\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-row\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"clear\",\n                className: \" w-[5rem] ml-[3rem] border-none\",\n                type: \"button\",\n                onClick: generatePDF,\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: pdfContainerRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart1ref\",\n              children: /*#__PURE__*/_jsxDEV(DoughnutChart, {\n                data: donutChart.chart1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 items-center border-gray-200 border-t dark:border-gray-700 justify-between\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center pt-5 w-full lg:w-[20rem]\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                label: \"Sort By\",\n                options: [\"All\", \"Last 7 Days\", \"Last Month\"],\n                value: sortBy,\n                color: \"purple\",\n                onChange: handleSortByChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full lg:w-[50%] bg-white rounded-lg border-[1px] p-4 md:p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row gap-[0.2rem] border-gray-200 border-b py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-row\",\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"leading-none text-2xl font-bold text-gray-900 dark:text-white pb-2\",\n                children: \"Investor Complains\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-row\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"clear\",\n                className: \" w-[6rem] ml-[6rem] border-none\",\n                type: \"button\",\n                onClick: generatePDF2,\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: pdfContainer2Ref,\n            children: /*#__PURE__*/_jsxDEV(DoughnutChart, {\n              data: donutChart.chart2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 items-center border-gray-200 border-t dark:border-gray-700 justify-between\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center pt-5 w-full lg:w-[20rem]\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                label: \"Sort By\",\n                options: [\"All\", \"Last 7 Days\", \"Last Month\"],\n                value: sortBy,\n                color: \"purple\",\n                onChange: handleSortByChange2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 9\n  }, this);\n};\n_s(UserReports, \"+IeUNMSH5XRaNh1KmqPBT2U0etQ=\", false, function () {\n  return [useAxiosMethods];\n});\n_c = UserReports;\nexport default UserReports;\nvar _c;\n$RefreshReg$(_c, \"UserReports\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","Header","DoughnutChart","Popover","BarChart","Select","useAxiosMethods","html2canvas","jsPDF","jsxDEV","_jsxDEV","UserReports","_s","get","response","setResponse","sortBy","setSortBy","complains","setComplains","complains2","setComplains2","pdfContainerRef","pdfContainer2Ref","handleSortByChange","selectedOption","data","filter","complain","date","Date","today","diffTime","Math","abs","diffDays","ceil","filteredData","handleSortByChange2","investorComplains","entrepreneurComplains","forEach","userRole","complainType","push","acceptedInvestorComplains","pendingInvestorComplains","rejectedInvestorComplains","acceptedEntrepreneurComplains","pendingEntrepreneurComplains","rejectedEntrepreneurComplains","element","donutChart","chart1","label","series","colors","dataLabels","chart2","generatePDF","reportName","description","toLocaleString","pdf","pdfContainer","current","setFont","setFontSize","setTextColor","textWidth","getStringUnitWidth","getFontSize","internal","scaleFactor","textOffset","pageSize","width","text","tableHeaders","tableData","tableOptions","head","body","startY","margin","left","theme","styles","fontSize","cellPadding","overflow","halign","valign","columnStyles","cellWidth","totalTableWidth","length","pageWidth","startX","autoTable","canvas","imageData","toDataURL","addImage","save","generatePDF2","reportName2","description2","children","active","variant","className","type","icon","onClick","window","location","href","fileName","_jsxFileName","lineNumber","columnNumber","ref","options","value","color","onChange","_c","$RefreshReg$"],"sources":["/Users/samindu/Downloads/client/src/pages/admin/ComplainReports.js"],"sourcesContent":["import React,{useState,useEffect, useRef} from \"react\";\r\nimport { Button, Header, DoughnutChart,Popover, BarChart, Select} from \"../webcomponent\";\r\nimport useAxiosMethods from \"../../hooks/useAxiosMethods\";\r\nimport html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\n\r\nconst UserReports = () => {\r\n    const { get } = useAxiosMethods();\r\n    const [response, setResponse] = useState([]);\r\n    const [sortBy, setSortBy] = useState(\"All\");\r\n    const [complains,setComplains]=useState([]);\r\n    const [complains2,setComplains2]=useState([]);\r\n    const pdfContainerRef = useRef(null);\r\n    const pdfContainer2Ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        get(\"/entrepreneurs/getcomplains\",setResponse);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setComplains(response);\r\n        setComplains2(response);\r\n    }, [response]);\r\n\r\n    //filter the response data according to the selected dropdown item\r\n    const handleSortByChange=(selectedOption)=> {\r\n        setSortBy(selectedOption);\r\n        if (selectedOption === \"All\") {\r\n            setComplains(response);\r\n        } else if (selectedOption === \"Last 7 Days\") {\r\n            const data= response.filter((complain) => {\r\n                const date = new Date(complain.date);\r\n                const today = new Date();\r\n                const diffTime = Math.abs(today - date);\r\n                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); \r\n                return diffDays<=7;\r\n            });              \r\n            setComplains(data);\r\n        }else if (selectedOption === \"Last Month\") {\r\n            const filteredData = response.filter((complain) => {\r\n                const date = new Date(complain.date);\r\n                const today = new Date();\r\n                const diffTime = Math.abs(today - date);\r\n                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n                return diffDays <= 30;\r\n              });\r\n            setComplains(filteredData);\r\n        }\r\n    };\r\n\r\n    const handleSortByChange2=(selectedOption)=> {\r\n        setSortBy(selectedOption);\r\n        if (selectedOption === \"All\") {\r\n            setComplains2(response);\r\n        } else if (selectedOption === \"Last 7 Days\") {\r\n            const data= response.filter((complain) => {\r\n                const date = new Date(complain.date);\r\n                const today = new Date();\r\n                const diffTime = Math.abs(today - date);\r\n                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); \r\n                return diffDays<=7;\r\n            });              \r\n            setComplains2(data);\r\n        }else if (selectedOption === \"Last Month\") {\r\n            const filteredData = response.filter((complain) => {\r\n                const date = new Date(complain.date);\r\n                const today = new Date();\r\n                const diffTime = Math.abs(today - date);\r\n                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n                return diffDays <= 30;\r\n              });\r\n            setComplains2(filteredData);\r\n        }\r\n    }\r\n\r\n    const investorComplains = [];\r\n    const entrepreneurComplains = [];\r\n\r\n    complains.forEach(complain => {\r\n        const userRole = complain.userRole;\r\n        const complainType = complain.complainType;\r\n\r\n        if (userRole === \"ENTREPRENEUR\") {\r\n            entrepreneurComplains.push(complainType);\r\n        }\r\n    });\r\n\r\n    complains2.forEach(complain=>{\r\n        const userRole = complain.userRole;\r\n        const complainType = complain.complainType;\r\n\r\n        if (userRole === \"INDIVIDUAL_INVESTOR\") {\r\n            investorComplains.push(complainType);\r\n        } \r\n    })\r\n\r\n    let acceptedInvestorComplains = 0;\r\n    let pendingInvestorComplains = 0;\r\n    let rejectedInvestorComplains = 0;\r\n\r\n    let acceptedEntrepreneurComplains = 0;\r\n    let pendingEntrepreneurComplains = 0;\r\n    let rejectedEntrepreneurComplains = 0;\r\n\r\n    //foreach complain count accepted, pending, rejected\r\n    investorComplains.forEach(element => {\r\n        if (element === \"SOLVED\" || element === \"MARKED\") {\r\n            acceptedInvestorComplains++;\r\n        } else if (element === \"PENDING\") {\r\n            pendingInvestorComplains++;\r\n        } else if (element === \"REJECTED\") {\r\n            rejectedInvestorComplains++;\r\n        }\r\n    });\r\n\r\n    entrepreneurComplains.forEach(element => {\r\n        if (element === \"SOLVED\" || element === \"MARKED\") {\r\n            acceptedEntrepreneurComplains++;\r\n        } else if (element === \"PENDING\") {\r\n            pendingEntrepreneurComplains++;\r\n        } else if (element === \"REJECTED\") {\r\n            rejectedEntrepreneurComplains++;\r\n        }\r\n    });\r\n\r\n    const donutChart = {\r\n        chart1: {\r\n            label: \"Total Complains\",\r\n            series: [acceptedEntrepreneurComplains, pendingEntrepreneurComplains, rejectedEntrepreneurComplains],\r\n            colors: [\"#E186DD\", \"#FFD668\", \"#FF969C\"],\r\n            dataLabels: [\"Accepted\",\"Pending\",\"Rejected\"]\r\n        },\r\n        chart2:{\r\n            label: \"Total Complains\",\r\n            series: [acceptedInvestorComplains, pendingInvestorComplains, rejectedInvestorComplains],\r\n            // colors: [\"#A35EC2\", \"#C7A3D4\", \"#FFE8FF\"],\r\n            dataLabels: [\"Accepted\",\"Pending\",\"Rejected\"]\r\n        }\r\n    } \r\n\r\n    const generatePDF = async () => {\r\n        //report for entrepreneur section\r\n        const reportName = \"Entrepreneur Complains Report\";\r\n        const description = `This is a report of the complains published by the entrepreneurs\r\nof the system.\\n\\nDate: ${new Date().toLocaleString()}\\n`;\r\n        const pdf = new jsPDF('p', 'mm', 'a4');\r\n        const pdfContainer = pdfContainerRef.current;\r\n    \r\n        if (pdfContainer) {\r\n          //report name with styles\r\n            pdf.setFont('helvetica', 'bold');\r\n            pdf.setFontSize(25);\r\n            pdf.setTextColor(144,16,185);\r\n            const textWidth = pdf.getStringUnitWidth(reportName) * pdf.getFontSize() / pdf.internal.scaleFactor;\r\n            const textOffset = (pdf.internal.pageSize.width - textWidth) / 2;\r\n            pdf.text(reportName, textOffset, 20);\r\n\r\n            //description with styles\r\n            pdf.setFont('helvetica', 'normal');\r\n            pdf.setFontSize(12);\r\n            pdf.setTextColor(0, 0, 0);\r\n            pdf.text(description, 30, 40);\r\n\r\n            const tableHeaders = [\"Complain Type\", \"No of Complains\"];\r\n            const tableData = [\r\n                [\"Accepted\", acceptedEntrepreneurComplains],\r\n                [\"Pending\", pendingEntrepreneurComplains],\r\n                [\"Rejected\", rejectedEntrepreneurComplains]\r\n            ];\r\n\r\n            const tableOptions = {\r\n                head: [tableHeaders],\r\n                body: tableData,\r\n                startY: 70,\r\n                margin: { left: 10 }, // Adjust left margin for desired horizontal position\r\n                theme: 'grid',\r\n                styles: {\r\n                  fontSize: 10,\r\n                  cellPadding: 1,\r\n                  overflow: 'linebreak',\r\n                  halign: 'center',\r\n                  valign: 'middle',\r\n                },\r\n                columnStyles: {\r\n                  0: { cellWidth: 30 },\r\n                  1: { cellWidth: 30 }\r\n                },\r\n              };\r\n          \r\n            // Calculate the total table width\r\n            const totalTableWidth = tableHeaders.length * tableOptions.columnStyles[0].cellWidth;\r\n        \r\n            // Calculate the center position for X-axis\r\n            const pageWidth = pdf.internal.pageSize.width;\r\n            const startX = (pageWidth - totalTableWidth) / 2;\r\n        \r\n            // Adjust the left margin to the calculated startX\r\n            tableOptions.margin.left = startX;\r\n        \r\n            pdf.autoTable({\r\n            ...tableOptions,\r\n            });\r\n\r\n            //chart with styles\r\n            const canvas = await html2canvas(pdfContainer);\r\n            const imageData = canvas.toDataURL('image/png');\r\n            pdf.addImage(imageData, 'PNG', 50, 100, 120, 100); // Adjust position and dimensions\r\n           \r\n            // Save the PDF\r\n            pdf.save('entrepreneur_complains_report.pdf');\r\n        }\r\n    };\r\n\r\n    \r\n    const generatePDF2 = async () => {\r\n        //report for investor section\r\n        const reportName2 = \"Investor Complains Report\";\r\n        //create a multiline description for the pdf including the date,response data\r\n        const description2 = `This is a report of the complains published by the investors\r\nof the system.\\n\\nDate: ${new Date().toLocaleString()}\\n`;\r\n\r\n        const pdf = new jsPDF('p', 'mm', 'a4');\r\n        const pdfContainer = pdfContainer2Ref.current;\r\n    \r\n        if (pdfContainer) {\r\n          //report name with styles\r\n            pdf.setFont('helvetica', 'bold');\r\n            pdf.setFontSize(25);\r\n            pdf.setTextColor(144,16,185);\r\n            const textWidth = pdf.getStringUnitWidth(reportName2) * pdf.getFontSize() / pdf.internal.scaleFactor;\r\n            const textOffset = (pdf.internal.pageSize.width - textWidth) / 2;\r\n            pdf.text(reportName2, textOffset, 20);\r\n\r\n            //description with styles\r\n            pdf.setFont('helvetica', 'normal');\r\n            pdf.setFontSize(12);\r\n            pdf.setTextColor(0, 0, 0);\r\n            pdf.text(description2, 30, 40);\r\n\r\n            const tableHeaders=[ \"Complain Type\", \"No of Complains\"];\r\n            const tableData = [\r\n                [\"Accepted\", acceptedInvestorComplains],\r\n                [\"Pending\", pendingInvestorComplains],\r\n                [\"Rejected\", rejectedInvestorComplains]\r\n            ];\r\n\r\n            const tableOptions = {\r\n                head: [tableHeaders],\r\n                body: tableData,\r\n                startY: 70,\r\n                margin: { left: 10 }, // Adjust left margin for desired horizontal position\r\n                theme: 'grid',\r\n                styles: {\r\n                  fontSize: 10,\r\n                  cellPadding: 1,\r\n                  overflow: 'linebreak',\r\n                  halign: 'center',\r\n                  valign: 'middle',\r\n                },\r\n                columnStyles: {\r\n                  0: { cellWidth: 30 },\r\n                  1: { cellWidth: 30 }\r\n                },\r\n              };\r\n          \r\n            // Calculate the total table width\r\n            const totalTableWidth = tableHeaders.length * tableOptions.columnStyles[0].cellWidth;\r\n        \r\n            // Calculate the center position for X-axis\r\n            const pageWidth = pdf.internal.pageSize.width;\r\n            const startX = (pageWidth - totalTableWidth) / 2;\r\n        \r\n            // Adjust the left margin to the calculated startX\r\n            tableOptions.margin.left = startX;\r\n        \r\n            pdf.autoTable({\r\n            ...tableOptions,\r\n            });\r\n\r\n\r\n            //chart with styles\r\n            const canvas = await html2canvas(pdfContainer);\r\n            const imageData = canvas.toDataURL('image/png');\r\n            pdf.addImage(imageData, 'PNG', 50, 100, 120, 100); // Adjust position and dimensions\r\n           \r\n            // Save the PDF\r\n            pdf.save('investor_complains_report.pdf');\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div>\r\n        <Header active=\"Analytics\">  \r\n            <Button\r\n                variant=\"clear\"\r\n                className=\"px-[0.75rem] !border-none\"\r\n                type=\"button\"\r\n                icon=\"previous\"\r\n                onClick={() => {\r\n                    window.location.href = \"/admin/analytics\";\r\n                }}\r\n            >\r\n               Back\r\n            </Button>    \r\n            <div className=\"w-full flex flex-col lg:flex-row gap-[1rem] mt-6\">\r\n                <div className=\"w-full lg:w-[50%] bg-white rounded-lg border-[1px] p-4 md:p-6\">\r\n                    <div className=\"flex flex-row gap-[0.2rem] border-gray-200 border-b py-2\">\r\n                        <div className=\"flex flex-row\">\r\n                            <h5 className=\"leading-none text-2xl font-bold text-gray-900 dark:text-white pb-2\">\r\n                                Entrepreneur Complains\r\n                            </h5>\r\n                        </div>\r\n                        <div className=\"flex flex-row\">\r\n                            <Button\r\n                                variant=\"clear\"\r\n                                className=\" w-[5rem] ml-[3rem] border-none\"\r\n                                type=\"button\"\r\n                                onClick={generatePDF}\r\n                            >\r\n                                Download\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <div ref={pdfContainerRef}>\r\n                        <div className=\"chart1ref\">\r\n                            <DoughnutChart data={donutChart.chart1}/>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className=\"grid grid-cols-1 items-center border-gray-200 border-t dark:border-gray-700 justify-between\">\r\n                        <div className=\"flex justify-between items-center pt-5 w-full lg:w-[20rem]\">\r\n                            <Select\r\n                                label=\"Sort By\"\r\n                                options={[\"All\", \"Last 7 Days\", \"Last Month\"]}\r\n                                value={sortBy}\r\n                                color=\"purple\"\r\n                                onChange={handleSortByChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full lg:w-[50%] bg-white rounded-lg border-[1px] p-4 md:p-6\">\r\n                    <div className=\"flex flex-row gap-[0.2rem] border-gray-200 border-b py-2\">\r\n                        <div className=\"flex flex-row\">\r\n                            <h5 className=\"leading-none text-2xl font-bold text-gray-900 dark:text-white pb-2\">\r\n                                Investor Complains\r\n                            </h5>\r\n                        </div>\r\n                        <div className=\"flex flex-row\">\r\n                            <Button\r\n                                variant=\"clear\"\r\n                                className=\" w-[6rem] ml-[6rem] border-none\"\r\n                                type=\"button\"\r\n                                onClick={generatePDF2}\r\n                            >\r\n                                Download\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <div ref={pdfContainer2Ref}>\r\n                        <DoughnutChart data={donutChart.chart2}/>\r\n                    </div>\r\n                    <div\r\n                        className=\"grid grid-cols-1 items-center border-gray-200 border-t dark:border-gray-700 justify-between\">\r\n                        <div className=\"flex justify-between items-center pt-5 w-full lg:w-[20rem]\">\r\n                            <Select\r\n                                label=\"Sort By\"\r\n                                options={[\"All\", \"Last 7 Days\", \"Last Month\"]}\r\n                                value={sortBy}\r\n                                color=\"purple\"\r\n                                onChange={handleSortByChange2}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>       \r\n        </Header>\r\n        </div>   \r\n    )\r\n\r\n}\r\n\r\nexport default UserReports;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,EAAEC,MAAM,QAAO,OAAO;AACtD,SAASC,MAAM,EAAEC,MAAM,EAAEC,aAAa,EAACC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,QAAO,iBAAiB;AACxF,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAI,CAAC,GAAGP,eAAe,CAAC,CAAC;EACjC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACqB,SAAS,EAACC,YAAY,CAAC,GAACtB,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACuB,UAAU,EAACC,aAAa,CAAC,GAACxB,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAMyB,eAAe,GAAGvB,MAAM,CAAC,IAAI,CAAC;EACpC,MAAMwB,gBAAgB,GAAGxB,MAAM,CAAC,IAAI,CAAC;EAErCD,SAAS,CAAC,MAAM;IACZe,GAAG,CAAC,6BAA6B,EAACE,WAAW,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACZqB,YAAY,CAACL,QAAQ,CAAC;IACtBO,aAAa,CAACP,QAAQ,CAAC;EAC3B,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMU,kBAAkB,GAAEC,cAAc,IAAI;IACxCR,SAAS,CAACQ,cAAc,CAAC;IACzB,IAAIA,cAAc,KAAK,KAAK,EAAE;MAC1BN,YAAY,CAACL,QAAQ,CAAC;IAC1B,CAAC,MAAM,IAAIW,cAAc,KAAK,aAAa,EAAE;MACzC,MAAMC,IAAI,GAAEZ,QAAQ,CAACa,MAAM,CAAEC,QAAQ,IAAK;QACtC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,QAAQ,CAACC,IAAI,CAAC;QACpC,MAAME,KAAK,GAAG,IAAID,IAAI,CAAC,CAAC;QACxB,MAAME,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACH,KAAK,GAAGF,IAAI,CAAC;QACvC,MAAMM,QAAQ,GAAGF,IAAI,CAACG,IAAI,CAACJ,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5D,OAAOG,QAAQ,IAAE,CAAC;MACtB,CAAC,CAAC;MACFhB,YAAY,CAACO,IAAI,CAAC;IACtB,CAAC,MAAK,IAAID,cAAc,KAAK,YAAY,EAAE;MACvC,MAAMY,YAAY,GAAGvB,QAAQ,CAACa,MAAM,CAAEC,QAAQ,IAAK;QAC/C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,QAAQ,CAACC,IAAI,CAAC;QACpC,MAAME,KAAK,GAAG,IAAID,IAAI,CAAC,CAAC;QACxB,MAAME,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACH,KAAK,GAAGF,IAAI,CAAC;QACvC,MAAMM,QAAQ,GAAGF,IAAI,CAACG,IAAI,CAACJ,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5D,OAAOG,QAAQ,IAAI,EAAE;MACvB,CAAC,CAAC;MACJhB,YAAY,CAACkB,YAAY,CAAC;IAC9B;EACJ,CAAC;EAED,MAAMC,mBAAmB,GAAEb,cAAc,IAAI;IACzCR,SAAS,CAACQ,cAAc,CAAC;IACzB,IAAIA,cAAc,KAAK,KAAK,EAAE;MAC1BJ,aAAa,CAACP,QAAQ,CAAC;IAC3B,CAAC,MAAM,IAAIW,cAAc,KAAK,aAAa,EAAE;MACzC,MAAMC,IAAI,GAAEZ,QAAQ,CAACa,MAAM,CAAEC,QAAQ,IAAK;QACtC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,QAAQ,CAACC,IAAI,CAAC;QACpC,MAAME,KAAK,GAAG,IAAID,IAAI,CAAC,CAAC;QACxB,MAAME,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACH,KAAK,GAAGF,IAAI,CAAC;QACvC,MAAMM,QAAQ,GAAGF,IAAI,CAACG,IAAI,CAACJ,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5D,OAAOG,QAAQ,IAAE,CAAC;MACtB,CAAC,CAAC;MACFd,aAAa,CAACK,IAAI,CAAC;IACvB,CAAC,MAAK,IAAID,cAAc,KAAK,YAAY,EAAE;MACvC,MAAMY,YAAY,GAAGvB,QAAQ,CAACa,MAAM,CAAEC,QAAQ,IAAK;QAC/C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,QAAQ,CAACC,IAAI,CAAC;QACpC,MAAME,KAAK,GAAG,IAAID,IAAI,CAAC,CAAC;QACxB,MAAME,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACH,KAAK,GAAGF,IAAI,CAAC;QACvC,MAAMM,QAAQ,GAAGF,IAAI,CAACG,IAAI,CAACJ,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5D,OAAOG,QAAQ,IAAI,EAAE;MACvB,CAAC,CAAC;MACJd,aAAa,CAACgB,YAAY,CAAC;IAC/B;EACJ,CAAC;EAED,MAAME,iBAAiB,GAAG,EAAE;EAC5B,MAAMC,qBAAqB,GAAG,EAAE;EAEhCtB,SAAS,CAACuB,OAAO,CAACb,QAAQ,IAAI;IAC1B,MAAMc,QAAQ,GAAGd,QAAQ,CAACc,QAAQ;IAClC,MAAMC,YAAY,GAAGf,QAAQ,CAACe,YAAY;IAE1C,IAAID,QAAQ,KAAK,cAAc,EAAE;MAC7BF,qBAAqB,CAACI,IAAI,CAACD,YAAY,CAAC;IAC5C;EACJ,CAAC,CAAC;EAEFvB,UAAU,CAACqB,OAAO,CAACb,QAAQ,IAAE;IACzB,MAAMc,QAAQ,GAAGd,QAAQ,CAACc,QAAQ;IAClC,MAAMC,YAAY,GAAGf,QAAQ,CAACe,YAAY;IAE1C,IAAID,QAAQ,KAAK,qBAAqB,EAAE;MACpCH,iBAAiB,CAACK,IAAI,CAACD,YAAY,CAAC;IACxC;EACJ,CAAC,CAAC;EAEF,IAAIE,yBAAyB,GAAG,CAAC;EACjC,IAAIC,wBAAwB,GAAG,CAAC;EAChC,IAAIC,yBAAyB,GAAG,CAAC;EAEjC,IAAIC,6BAA6B,GAAG,CAAC;EACrC,IAAIC,4BAA4B,GAAG,CAAC;EACpC,IAAIC,6BAA6B,GAAG,CAAC;;EAErC;EACAX,iBAAiB,CAACE,OAAO,CAACU,OAAO,IAAI;IACjC,IAAIA,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,QAAQ,EAAE;MAC9CN,yBAAyB,EAAE;IAC/B,CAAC,MAAM,IAAIM,OAAO,KAAK,SAAS,EAAE;MAC9BL,wBAAwB,EAAE;IAC9B,CAAC,MAAM,IAAIK,OAAO,KAAK,UAAU,EAAE;MAC/BJ,yBAAyB,EAAE;IAC/B;EACJ,CAAC,CAAC;EAEFP,qBAAqB,CAACC,OAAO,CAACU,OAAO,IAAI;IACrC,IAAIA,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,QAAQ,EAAE;MAC9CH,6BAA6B,EAAE;IACnC,CAAC,MAAM,IAAIG,OAAO,KAAK,SAAS,EAAE;MAC9BF,4BAA4B,EAAE;IAClC,CAAC,MAAM,IAAIE,OAAO,KAAK,UAAU,EAAE;MAC/BD,6BAA6B,EAAE;IACnC;EACJ,CAAC,CAAC;EAEF,MAAME,UAAU,GAAG;IACfC,MAAM,EAAE;MACJC,KAAK,EAAE,iBAAiB;MACxBC,MAAM,EAAE,CAACP,6BAA6B,EAAEC,4BAA4B,EAAEC,6BAA6B,CAAC;MACpGM,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;MACzCC,UAAU,EAAE,CAAC,UAAU,EAAC,SAAS,EAAC,UAAU;IAChD,CAAC;IACDC,MAAM,EAAC;MACHJ,KAAK,EAAE,iBAAiB;MACxBC,MAAM,EAAE,CAACV,yBAAyB,EAAEC,wBAAwB,EAAEC,yBAAyB,CAAC;MACxF;MACAU,UAAU,EAAE,CAAC,UAAU,EAAC,SAAS,EAAC,UAAU;IAChD;EACJ,CAAC;EAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA,MAAMC,UAAU,GAAG,+BAA+B;IAClD,MAAMC,WAAW,GAAI;AAC7B,0BAA0B,IAAI/B,IAAI,CAAC,CAAC,CAACgC,cAAc,CAAC,CAAE,IAAG;IACjD,MAAMC,GAAG,GAAG,IAAIvD,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;IACtC,MAAMwD,YAAY,GAAG1C,eAAe,CAAC2C,OAAO;IAE5C,IAAID,YAAY,EAAE;MAChB;MACED,GAAG,CAACG,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;MAChCH,GAAG,CAACI,WAAW,CAAC,EAAE,CAAC;MACnBJ,GAAG,CAACK,YAAY,CAAC,GAAG,EAAC,EAAE,EAAC,GAAG,CAAC;MAC5B,MAAMC,SAAS,GAAGN,GAAG,CAACO,kBAAkB,CAACV,UAAU,CAAC,GAAGG,GAAG,CAACQ,WAAW,CAAC,CAAC,GAAGR,GAAG,CAACS,QAAQ,CAACC,WAAW;MACnG,MAAMC,UAAU,GAAG,CAACX,GAAG,CAACS,QAAQ,CAACG,QAAQ,CAACC,KAAK,GAAGP,SAAS,IAAI,CAAC;MAChEN,GAAG,CAACc,IAAI,CAACjB,UAAU,EAAEc,UAAU,EAAE,EAAE,CAAC;;MAEpC;MACAX,GAAG,CAACG,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC;MAClCH,GAAG,CAACI,WAAW,CAAC,EAAE,CAAC;MACnBJ,GAAG,CAACK,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACzBL,GAAG,CAACc,IAAI,CAAChB,WAAW,EAAE,EAAE,EAAE,EAAE,CAAC;MAE7B,MAAMiB,YAAY,GAAG,CAAC,eAAe,EAAE,iBAAiB,CAAC;MACzD,MAAMC,SAAS,GAAG,CACd,CAAC,UAAU,EAAE/B,6BAA6B,CAAC,EAC3C,CAAC,SAAS,EAAEC,4BAA4B,CAAC,EACzC,CAAC,UAAU,EAAEC,6BAA6B,CAAC,CAC9C;MAED,MAAM8B,YAAY,GAAG;QACjBC,IAAI,EAAE,CAACH,YAAY,CAAC;QACpBI,IAAI,EAAEH,SAAS;QACfI,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE;UAAEC,IAAI,EAAE;QAAG,CAAC;QAAE;QACtBC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE;UACNC,QAAQ,EAAE,EAAE;UACZC,WAAW,EAAE,CAAC;UACdC,QAAQ,EAAE,WAAW;UACrBC,MAAM,EAAE,QAAQ;UAChBC,MAAM,EAAE;QACV,CAAC;QACDC,YAAY,EAAE;UACZ,CAAC,EAAE;YAAEC,SAAS,EAAE;UAAG,CAAC;UACpB,CAAC,EAAE;YAAEA,SAAS,EAAE;UAAG;QACrB;MACF,CAAC;;MAEH;MACA,MAAMC,eAAe,GAAGjB,YAAY,CAACkB,MAAM,GAAGhB,YAAY,CAACa,YAAY,CAAC,CAAC,CAAC,CAACC,SAAS;;MAEpF;MACA,MAAMG,SAAS,GAAGlC,GAAG,CAACS,QAAQ,CAACG,QAAQ,CAACC,KAAK;MAC7C,MAAMsB,MAAM,GAAG,CAACD,SAAS,GAAGF,eAAe,IAAI,CAAC;;MAEhD;MACAf,YAAY,CAACI,MAAM,CAACC,IAAI,GAAGa,MAAM;MAEjCnC,GAAG,CAACoC,SAAS,CAAC;QACd,GAAGnB;MACH,CAAC,CAAC;;MAEF;MACA,MAAMoB,MAAM,GAAG,MAAM7F,WAAW,CAACyD,YAAY,CAAC;MAC9C,MAAMqC,SAAS,GAAGD,MAAM,CAACE,SAAS,CAAC,WAAW,CAAC;MAC/CvC,GAAG,CAACwC,QAAQ,CAACF,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;;MAEnD;MACAtC,GAAG,CAACyC,IAAI,CAAC,mCAAmC,CAAC;IACjD;EACJ,CAAC;EAGD,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B;IACA,MAAMC,WAAW,GAAG,2BAA2B;IAC/C;IACA,MAAMC,YAAY,GAAI;AAC9B,0BAA0B,IAAI7E,IAAI,CAAC,CAAC,CAACgC,cAAc,CAAC,CAAE,IAAG;IAEjD,MAAMC,GAAG,GAAG,IAAIvD,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;IACtC,MAAMwD,YAAY,GAAGzC,gBAAgB,CAAC0C,OAAO;IAE7C,IAAID,YAAY,EAAE;MAChB;MACED,GAAG,CAACG,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;MAChCH,GAAG,CAACI,WAAW,CAAC,EAAE,CAAC;MACnBJ,GAAG,CAACK,YAAY,CAAC,GAAG,EAAC,EAAE,EAAC,GAAG,CAAC;MAC5B,MAAMC,SAAS,GAAGN,GAAG,CAACO,kBAAkB,CAACoC,WAAW,CAAC,GAAG3C,GAAG,CAACQ,WAAW,CAAC,CAAC,GAAGR,GAAG,CAACS,QAAQ,CAACC,WAAW;MACpG,MAAMC,UAAU,GAAG,CAACX,GAAG,CAACS,QAAQ,CAACG,QAAQ,CAACC,KAAK,GAAGP,SAAS,IAAI,CAAC;MAChEN,GAAG,CAACc,IAAI,CAAC6B,WAAW,EAAEhC,UAAU,EAAE,EAAE,CAAC;;MAErC;MACAX,GAAG,CAACG,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC;MAClCH,GAAG,CAACI,WAAW,CAAC,EAAE,CAAC;MACnBJ,GAAG,CAACK,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACzBL,GAAG,CAACc,IAAI,CAAC8B,YAAY,EAAE,EAAE,EAAE,EAAE,CAAC;MAE9B,MAAM7B,YAAY,GAAC,CAAE,eAAe,EAAE,iBAAiB,CAAC;MACxD,MAAMC,SAAS,GAAG,CACd,CAAC,UAAU,EAAElC,yBAAyB,CAAC,EACvC,CAAC,SAAS,EAAEC,wBAAwB,CAAC,EACrC,CAAC,UAAU,EAAEC,yBAAyB,CAAC,CAC1C;MAED,MAAMiC,YAAY,GAAG;QACjBC,IAAI,EAAE,CAACH,YAAY,CAAC;QACpBI,IAAI,EAAEH,SAAS;QACfI,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE;UAAEC,IAAI,EAAE;QAAG,CAAC;QAAE;QACtBC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE;UACNC,QAAQ,EAAE,EAAE;UACZC,WAAW,EAAE,CAAC;UACdC,QAAQ,EAAE,WAAW;UACrBC,MAAM,EAAE,QAAQ;UAChBC,MAAM,EAAE;QACV,CAAC;QACDC,YAAY,EAAE;UACZ,CAAC,EAAE;YAAEC,SAAS,EAAE;UAAG,CAAC;UACpB,CAAC,EAAE;YAAEA,SAAS,EAAE;UAAG;QACrB;MACF,CAAC;;MAEH;MACA,MAAMC,eAAe,GAAGjB,YAAY,CAACkB,MAAM,GAAGhB,YAAY,CAACa,YAAY,CAAC,CAAC,CAAC,CAACC,SAAS;;MAEpF;MACA,MAAMG,SAAS,GAAGlC,GAAG,CAACS,QAAQ,CAACG,QAAQ,CAACC,KAAK;MAC7C,MAAMsB,MAAM,GAAG,CAACD,SAAS,GAAGF,eAAe,IAAI,CAAC;;MAEhD;MACAf,YAAY,CAACI,MAAM,CAACC,IAAI,GAAGa,MAAM;MAEjCnC,GAAG,CAACoC,SAAS,CAAC;QACd,GAAGnB;MACH,CAAC,CAAC;;MAGF;MACA,MAAMoB,MAAM,GAAG,MAAM7F,WAAW,CAACyD,YAAY,CAAC;MAC9C,MAAMqC,SAAS,GAAGD,MAAM,CAACE,SAAS,CAAC,WAAW,CAAC;MAC/CvC,GAAG,CAACwC,QAAQ,CAACF,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;;MAEnD;MACAtC,GAAG,CAACyC,IAAI,CAAC,+BAA+B,CAAC;IAC7C;EACJ,CAAC;EAED,oBACI9F,OAAA;IAAAkG,QAAA,eACAlG,OAAA,CAACT,MAAM;MAAC4G,MAAM,EAAC,WAAW;MAAAD,QAAA,gBACtBlG,OAAA,CAACV,MAAM;QACH8G,OAAO,EAAC,OAAO;QACfC,SAAS,EAAC,2BAA2B;QACrCC,IAAI,EAAC,QAAQ;QACbC,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEA,CAAA,KAAM;UACXC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,kBAAkB;QAC7C,CAAE;QAAAT,QAAA,EACL;MAED;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT/G,OAAA;QAAKqG,SAAS,EAAC,kDAAkD;QAAAH,QAAA,gBAC7DlG,OAAA;UAAKqG,SAAS,EAAC,+DAA+D;UAAAH,QAAA,gBAC1ElG,OAAA;YAAKqG,SAAS,EAAC,0DAA0D;YAAAH,QAAA,gBACrElG,OAAA;cAAKqG,SAAS,EAAC,eAAe;cAAAH,QAAA,eAC1BlG,OAAA;gBAAIqG,SAAS,EAAC,oEAAoE;gBAAAH,QAAA,EAAC;cAEnF;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACN/G,OAAA;cAAKqG,SAAS,EAAC,eAAe;cAAAH,QAAA,eAC1BlG,OAAA,CAACV,MAAM;gBACH8G,OAAO,EAAC,OAAO;gBACfC,SAAS,EAAC,iCAAiC;gBAC3CC,IAAI,EAAC,QAAQ;gBACbE,OAAO,EAAEvD,WAAY;gBAAAiD,QAAA,EACxB;cAED;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACN/G,OAAA;YAAKgH,GAAG,EAAEpG,eAAgB;YAAAsF,QAAA,eACtBlG,OAAA;cAAKqG,SAAS,EAAC,WAAW;cAAAH,QAAA,eACtBlG,OAAA,CAACR,aAAa;gBAACwB,IAAI,EAAE0B,UAAU,CAACC;cAAO;gBAAAiE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACN/G,OAAA;YACIqG,SAAS,EAAC,6FAA6F;YAAAH,QAAA,eACvGlG,OAAA;cAAKqG,SAAS,EAAC,4DAA4D;cAAAH,QAAA,eACvElG,OAAA,CAACL,MAAM;gBACHiD,KAAK,EAAC,SAAS;gBACfqE,OAAO,EAAE,CAAC,KAAK,EAAE,aAAa,EAAE,YAAY,CAAE;gBAC9CC,KAAK,EAAE5G,MAAO;gBACd6G,KAAK,EAAC,QAAQ;gBACdC,QAAQ,EAAEtG;cAAmB;gBAAA8F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACN/G,OAAA;UAAKqG,SAAS,EAAC,+DAA+D;UAAAH,QAAA,gBAC1ElG,OAAA;YAAKqG,SAAS,EAAC,0DAA0D;YAAAH,QAAA,gBACrElG,OAAA;cAAKqG,SAAS,EAAC,eAAe;cAAAH,QAAA,eAC1BlG,OAAA;gBAAIqG,SAAS,EAAC,oEAAoE;gBAAAH,QAAA,EAAC;cAEnF;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACN/G,OAAA;cAAKqG,SAAS,EAAC,eAAe;cAAAH,QAAA,eAC1BlG,OAAA,CAACV,MAAM;gBACH8G,OAAO,EAAC,OAAO;gBACfC,SAAS,EAAC,iCAAiC;gBAC3CC,IAAI,EAAC,QAAQ;gBACbE,OAAO,EAAET,YAAa;gBAAAG,QAAA,EACzB;cAED;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACN/G,OAAA;YAAKgH,GAAG,EAAEnG,gBAAiB;YAAAqF,QAAA,eACvBlG,OAAA,CAACR,aAAa;cAACwB,IAAI,EAAE0B,UAAU,CAACM;YAAO;cAAA4D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,eACN/G,OAAA;YACIqG,SAAS,EAAC,6FAA6F;YAAAH,QAAA,eACvGlG,OAAA;cAAKqG,SAAS,EAAC,4DAA4D;cAAAH,QAAA,eACvElG,OAAA,CAACL,MAAM;gBACHiD,KAAK,EAAC,SAAS;gBACfqE,OAAO,EAAE,CAAC,KAAK,EAAE,aAAa,EAAE,YAAY,CAAE;gBAC9CC,KAAK,EAAE5G,MAAO;gBACd6G,KAAK,EAAC,QAAQ;gBACdC,QAAQ,EAAExF;cAAoB;gBAAAgF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGd,CAAC;AAAA7G,EAAA,CAtXKD,WAAW;EAAA,QACGL,eAAe;AAAA;AAAAyH,EAAA,GAD7BpH,WAAW;AAwXjB,eAAeA,WAAW;AAAC,IAAAoH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}