<?xml version="1.0" encoding="UTF-8"?>
<sequence name="GetOrdersSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <filter xpath="(string-length(get-property('query.param.page')) > 0 and string-length(get-property('query.param.fetch')) > 0) or string-length(get-property('query.param.status')) > 0">
        <then>
            <filter xpath="string-length(get-property('query.param.status')) > 0">
                <then>
                    <filter xpath="string-length(get-property('query.param.page')) > 0 and string-length(get-property('query.param.fetch')) > 0">
                        <then>
                            <script language="js">
                                <![CDATA[
                                    var page = parseInt(mc.getProperty("query.param.page"));
                                    var fetch = parseInt(mc.getProperty("query.param.fetch"));

                                    var skip = (page - 1) * fetch;
                                    mc.setProperty("page", page);
                                    mc.setProperty("fetch", fetch);
                                    mc.setProperty("skip", skip);
                                ]]>
                            </script>
                            <dataServiceCall serviceName="BookDataService">
                                <operations type="single">
                                    <operation name="getPaginationOrderPaymentByStatus">
                                        <param name="payment_status" expression="get-property('query.param.status')"/>
                                        <param name="skip" expression="get-property('skip')"/>
                                        <param name="fetch" expression="get-property('fetch')"/>
                                    </operation>
                                </operations>
                                <source type="inline"/>
                                <target type="body"/>
                            </dataServiceCall>
                            <log category="DEBUG">
                                <message>Result: ${payload}</message>
                            </log>
                            <filter xpath="${exists($.Data)}">
                                <then>
                                    <property name="data" expression="json-eval($.Data.Orders)"/>
                                    <dataServiceCall serviceName="BookDataService">
                                        <operations type="single">
                                            <operation name="getOrderCountByStatus">
                                                <param name="payment_status" expression="get-property('query.param.status')"/>
                                            </operation>
                                        </operations>
                                        <source type="inline"/>
                                        <target type="body"/>
                                    </dataServiceCall>
                                    <property name="total_orders" expression="json-eval($.Orders.total_orders)"/>
                                    <script language="js">
                                        <![CDATA[
                                            var page = parseInt(mc.getProperty("query.param.page"));
                                            var totalOrders = parseInt(mc.getProperty("total_orders"));
                                            var fetch = parseInt(mc.getProperty("fetch"));

                                            var totalPages = Math.ceil(totalOrders / fetch);
                                            mc.setProperty("total_pages", totalPages);

                                            if (page == 1) {
                                                mc.setProperty("previous", "null");
                                            } else {
                                                mc.setProperty("previous", page - 1);
                                            }

                                            if (page == totalPages) {
                                                mc.setProperty("next", "null");
                                            } else {
                                                mc.setProperty("next", page + 1);
                                            }
                                        ]]>
                                    </script>
                                    <payloadFactory media-type="json">
                                        <format>
                                            {
                                            "Orders": $1,
                                            "meta": {
                                                "total_orders": $2,
                                                "total_pages": $3,
                                                "prev_page": $4,
                                                "current_page": $5,
                                                "next_page": $6
                                            }
                                            }
                                        </format>
                                        <args>
                                            <arg expression="get-property('data')"/>
                                            <arg expression="get-property('total_orders')"/>
                                            <arg expression="get-property('total_pages')"/>
                                            <arg expression="get-property('previous')"/>
                                            <arg expression="get-property('page')"/>
                                            <arg expression="get-property('next')"/>
                                        </args>
                                    </payloadFactory>
                                </then>
                                <else>
                                    <filter xpath="string(get-property('fetch')) = '0'">
                                        <then>
                                            <call-template target="FaultHandleTemp">
                                                <with-param name="status_code" value="400"/>
                                                <with-param name="internal_error_code" value="err_0"/>
                                                <with-param name="message" value="Invalid query param fetch: fetch should be greater than 0"/>
                                            </call-template>
                                        </then>
                                        <else>
                                            <script language="js">
                                                <![CDATA[
                                                    var status = mc.getProperty("query.param.status");
                                                    var message = "Orders with status " +status+ " not found";
                                                    mc.setProperty("error_message", message);
                                                ]]>
                                            </script>
                                            <call-template target="FaultHandleTemp">
                                                <with-param name="status_code" value="404"/>
                                                <with-param name="internal_error_code" value="err_1"/>
                                                <with-param name="message" value="get-property('error_message')"/>
                                            </call-template>
                                        </else>
                                    </filter>
                                </else>
                            </filter>
                        </then>
                        <else>
                            <dataServiceCall serviceName="BookDataService">
                                <operations type="single">
                                    <operation name="getOrderPaymentByStatus">
                                        <param name="payment_status" expression="get-property('query.param.status')"/>
                                    </operation>
                                </operations>
                                <source type="inline"/>
                                <target type="body"/>
                            </dataServiceCall>
                            <log category="DEBUG">
                                <message>Result: ${payload}</message>
                            </log>
                            <filter xpath="${exists($.Data)}">
                                <then>
                                    <payloadFactory media-type="json">
                                        <format>
                                            ${payload.Data}
                                        </format>
                                    </payloadFactory>
                                </then>
                                <else>
                                    <script language="js">
                                        <![CDATA[
                                            var status = mc.getProperty("query.param.status");
                                            var message = "Orders with status " +status+ " not found";
                                            mc.setProperty("error_message", message);
                                        ]]>
                                    </script>
                                    <call-template target="FaultHandleTemp">
                                        <with-param name="status_code" value="404"/>
                                        <with-param name="internal_error_code" value="err_1"/>
                                        <with-param name="message" value="get-property('error_message')"/>
                                    </call-template>
                                </else>
                            </filter>
                        </else>
                    </filter>
                </then>
                <else>
                    <script language="js">
                        <![CDATA[
                            var page = parseInt(mc.getProperty("query.param.page"));
                            var fetch = parseInt(mc.getProperty("query.param.fetch"));

                            var skip = (page - 1) * fetch;
                            mc.setProperty("page", page);
                            mc.setProperty("fetch", fetch);
                            mc.setProperty("skip", skip);
                        ]]>
                    </script>
                    <dataServiceCall serviceName="BookDataService">
                        <operations type="single">
                            <operation name="getPaginationOrderPayment">
                                <param name="skip" expression="get-property('skip')"/>
                                <param name="fetch" expression="get-property('fetch')"/>
                            </operation>
                        </operations>
                        <source type="inline"/>
                        <target type="body"/>
                    </dataServiceCall>
                    <log category="DEBUG">
                        <message>Result: ${payload}</message>
                    </log>
                    <filter xpath="${exists($.Data)}">
                        <then>
                            <property name="data" expression="json-eval($.Data.Orders)"/>
                            <dataServiceCall serviceName="BookDataService">
                                <operations type="single">
                                    <operation name="getOrderCount"/>
                                </operations>
                                <source type="inline"/>
                                <target type="body"/>
                            </dataServiceCall>
                            <property name="total_orders" expression="json-eval($.Orders.total_orders)"/>
                            <script language="js">
                                <![CDATA[
                                    var page = parseInt(mc.getProperty("query.param.page"));
                                    var totalOrders = parseInt(mc.getProperty("total_orders"));
                                    var fetch = parseInt(mc.getProperty("fetch"));

                                    var totalPages = Math.ceil(totalOrders / fetch);
                                    mc.setProperty("total_pages", totalPages);

                                    if (page == 1) {
                                        mc.setProperty("previous", "null");
                                    } else {
                                        mc.setProperty("previous", page - 1);
                                    }

                                    if (page == totalPages) {
                                        mc.setProperty("next", "null");
                                    } else {
                                        mc.setProperty("next", page + 1);
                                    }
                                ]]>
                            </script>
                            <payloadFactory media-type="json">
                                <format>
                                    {
                                    "Orders": $1,
                                    "meta": {
                                        "total_orders": $2,
                                        "total_pages": $3,
                                        "prev_page": $4,
                                        "current_page": $5,
                                        "next_page": $6
                                    }
                                    }
                                </format>
                                <args>
                                    <arg expression="get-property('data')"/>
                                    <arg expression="get-property('total_orders')"/>
                                    <arg expression="get-property('total_pages')"/>
                                    <arg expression="get-property('previous')"/>
                                    <arg expression="get-property('page')"/>
                                    <arg expression="get-property('next')"/>
                                </args>
                            </payloadFactory>
                        </then>
                        <else>
                            <filter xpath="string(get-property('fetch')) = '0'">
                                <then>
                                    <call-template target="FaultHandleTemp">
                                        <with-param name="status_code" value="400"/>
                                        <with-param name="internal_error_code" value="err_0"/>
                                        <with-param name="message" value="Invalid query param fetch: fetch should be greater than 0"/>
                                    </call-template>
                                </then>
                                <else>
                                    <call-template target="FaultHandleTemp">
                                        <with-param name="status_code" value="404"/>
                                        <with-param name="internal_error_code" value="err_1"/>
                                        <with-param name="message" value="No orders found"/>
                                    </call-template>
                                </else>
                            </filter>
                        </else>
                    </filter>
                </else>
            </filter>
        </then>
        <else>
            <dataServiceCall serviceName="BookDataService">
                <operations type="single">
                    <operation name="getOrderPayment"/>
                </operations>
                <source type="inline"/>
                <target type="body"/>
            </dataServiceCall>
            <log category="DEBUG">
                <message>Result: ${payload.Data}</message>
            </log>
            <filter xpath="${exists($.Data)}">
                <then>
                    <payloadFactory media-type="json">
                        <format>
                            ${payload.Data}
                        </format>
                    </payloadFactory>
                </then>
                <else>
                    <call-template target="FaultHandleTemp">
                        <with-param name="status_code" value="404"/>
                        <with-param name="internal_error_code" value="err_1"/>
                        <with-param name="message" value="No orders found"/>
                    </call-template>
                </else>
            </filter>
        </else>
    </filter>
    <respond/>
</sequence>