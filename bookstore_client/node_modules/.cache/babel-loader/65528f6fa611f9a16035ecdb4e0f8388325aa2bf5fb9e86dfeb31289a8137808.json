{"ast":null,"code":"var _jsxFileName = \"/Users/samindu/Downloads/client/src/pages/admin/GainsReport.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Header, DoughnutChart, Popover, BarChart } from \"../webcomponent\";\nimport useAxiosMethods from \"../../hooks/useAxiosMethods\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMoneyCheckDollar } from \"@fortawesome/free-solid-svg-icons\";\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GainsReport = () => {\n  _s();\n  const {\n    get\n  } = useAxiosMethods();\n  const [response, setResponse] = useState([]);\n  const barChartRef = useRef(null);\n  useEffect(() => {\n    get(\"/entrepreneur/userGains\", setResponse);\n  }, []);\n  const today = new Date();\n  const currentYear = today.getFullYear();\n  const currentMonth = today.getMonth();\n  const months = [];\n  for (let i = 12; i > 0; i--) {\n    const year = currentYear + Math.floor((currentMonth + i) / 12) - 1;\n    const monthIndex = (currentMonth + i) % 12;\n    const monthName = new Date(currentYear, monthIndex).toLocaleString('default', {\n      month: 'long'\n    });\n    months.push(`${monthName} ${year}`);\n  }\n\n  //reverse the array\n  months.reverse();\n\n  //convert all the subscription prices to numbers\n  response.forEach(element => {\n    element.subscriptionprice = Number(element.subscriptionprice);\n  });\n\n  //for each month, calculate the total income\n  const totalIncome = [];\n  months.forEach(month => {\n    let income = 0;\n    response.forEach(element => {\n      if (element.publishedDate === month) {\n        income += element.subscriptionprice;\n      }\n    });\n    totalIncome.push(income);\n  });\n  console.log(totalIncome[10]);\n  const barchart = {\n    chart1: {\n      label: \"Total Users\",\n      series: [{\n        name: \"Income\",\n        data: totalIncome\n      }],\n      dataLabels: months\n    }\n  };\n  const handleGeneratePDF = async () => {\n    const reportName = \"User Gains Report\";\n    const description = `This report shows the total income gained from the subscriptions of the users for the \\n past 12 months.\\n\\nDate: ${new Date().toLocaleString()}\\n`;\n    const pdf = new jsPDF('p', 'mm', 'a4');\n    const pdfContainer = barChartRef.current;\n    pdf.setFont('helvetica', 'bold');\n    pdf.setFontSize(25);\n    pdf.setTextColor(144, 16, 185);\n    const textWidth = pdf.getStringUnitWidth(reportName) * pdf.getFontSize() / pdf.internal.scaleFactor;\n    const textOffset = (pdf.internal.pageSize.width - textWidth) / 2;\n    pdf.text(reportName, textOffset, 20);\n\n    //description with styles\n    pdf.setFont('helvetica', 'normal');\n    pdf.setFontSize(12);\n    pdf.setTextColor(0, 0, 0);\n    pdf.text(description, 30, 40);\n\n    //chart with styles\n    const canvas = await html2canvas(pdfContainer);\n    const imageData = canvas.toDataURL('image/png');\n    pdf.addImage(imageData, 'PNG', 30, 60, 170, 100);\n    const tableHeaders = [\"Month\", \"Income(LKR)\"];\n    const tableData = [];\n    for (let i = 0; i < months.length; i++) {\n      tableData.push([months[i], totalIncome[i]]);\n    }\n    console.log(tableData);\n    const tableOptions = {\n      head: [tableHeaders],\n      body: tableData,\n      startY: 160,\n      margin: {\n        left: 10\n      },\n      // Adjust left margin for desired horizontal position\n      theme: 'grid',\n      styles: {\n        fontSize: 10,\n        cellPadding: 1,\n        overflow: 'linebreak',\n        halign: 'center',\n        valign: 'middle'\n      },\n      columnStyles: {\n        0: {\n          cellWidth: 30\n        },\n        1: {\n          cellWidth: 30\n        }\n      }\n    };\n\n    // Calculate the total table width\n    const totalTableWidth = tableHeaders.length * tableOptions.columnStyles[0].cellWidth;\n\n    // Calculate the center position for X-axis\n    const pageWidth = pdf.internal.pageSize.width;\n    const startX = (pageWidth - totalTableWidth) / 2;\n\n    // Adjust the left margin to the calculated startX\n    tableOptions.margin.left = startX;\n    pdf.autoTable({\n      ...tableOptions\n    });\n    pdf.save(`${reportName}.pdf`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      active: \"Analytics\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"clear\",\n        className: \"px-[0.75rem] !border-none\",\n        type: \"button\",\n        icon: \"previous\",\n        onClick: () => {\n          window.location.href = \"/admin/analytics\";\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full flex flex-col lg:flex-row gap-[1rem]\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full lg:w-full bg-white rounded-lg border-[1px] p-4 md:p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row gap-[0.2rem] border-gray-200 border-b py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-row\",\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"leading-none text-3xl font-bold text-gray-900 dark:text-white pb-2\",\n                children: \"User Gains\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-row\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"clear\",\n                className: \" w-[5rem] ml-[42rem] border-none\",\n                type: \"button\",\n                onClick: handleGeneratePDF,\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: barChartRef,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-[1rem]\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-base font-normal text-gray-800 dark:text-gray-400\",\n                  children: \"Income\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center px-2.5 py-0.5 text-base font-semibold text-green-500 dark:text-green-500 text-center\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faMoneyCheckDollar\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n              data: barchart.chart1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n_s(GainsReport, \"PaRx7G/VJiJi9NQAr6xz+K3UPLg=\", false, function () {\n  return [useAxiosMethods];\n});\n_c = GainsReport;\nexport default GainsReport;\nvar _c;\n$RefreshReg$(_c, \"GainsReport\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Button","Header","DoughnutChart","Popover","BarChart","useAxiosMethods","FontAwesomeIcon","faMoneyCheckDollar","html2canvas","jsPDF","jsxDEV","_jsxDEV","GainsReport","_s","get","response","setResponse","barChartRef","today","Date","currentYear","getFullYear","currentMonth","getMonth","months","i","year","Math","floor","monthIndex","monthName","toLocaleString","month","push","reverse","forEach","element","subscriptionprice","Number","totalIncome","income","publishedDate","console","log","barchart","chart1","label","series","name","data","dataLabels","handleGeneratePDF","reportName","description","pdf","pdfContainer","current","setFont","setFontSize","setTextColor","textWidth","getStringUnitWidth","getFontSize","internal","scaleFactor","textOffset","pageSize","width","text","canvas","imageData","toDataURL","addImage","tableHeaders","tableData","length","tableOptions","head","body","startY","margin","left","theme","styles","fontSize","cellPadding","overflow","halign","valign","columnStyles","cellWidth","totalTableWidth","pageWidth","startX","autoTable","save","children","active","variant","className","type","icon","onClick","window","location","href","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/samindu/Downloads/client/src/pages/admin/GainsReport.js"],"sourcesContent":["import React,{useEffect,useRef,useState} from \"react\";\r\nimport { Button, Header, DoughnutChart,Popover, BarChart } from \"../webcomponent\";\r\nimport useAxiosMethods from \"../../hooks/useAxiosMethods\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faMoneyCheckDollar} from \"@fortawesome/free-solid-svg-icons\";\r\nimport html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable' ;\r\n\r\nconst GainsReport = () => {\r\n    const { get } = useAxiosMethods();\r\n    const [response, setResponse] = useState([]);\r\n    const barChartRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        get(\"/entrepreneur/userGains\",setResponse);\r\n    }, []);\r\n\r\n    const today = new Date();\r\n    const currentYear = today.getFullYear();\r\n    const currentMonth = today.getMonth();\r\n  \r\n    const months = [];\r\n    for (let i = 12; i > 0; i--) {\r\n      const year = currentYear + Math.floor((currentMonth + i) / 12)-1;\r\n      const monthIndex = (currentMonth + i) % 12;\r\n      const monthName = new Date(currentYear, monthIndex).toLocaleString('default', { month: 'long' });\r\n      months.push(`${monthName} ${year}`);\r\n    }\r\n\r\n    //reverse the array\r\n    months.reverse();\r\n\r\n    //convert all the subscription prices to numbers\r\n    response.forEach(element => {\r\n        element.subscriptionprice = Number(element.subscriptionprice);\r\n    });\r\n\r\n    //for each month, calculate the total income\r\n    const totalIncome = [];\r\n    months.forEach(month => {\r\n        let income = 0;\r\n        response.forEach(element => {\r\n            if(element.publishedDate === month){\r\n                income += element.subscriptionprice;\r\n            }\r\n        });\r\n        totalIncome.push(income);\r\n    });\r\n\r\n    console.log(totalIncome[10]);\r\n\r\n    const barchart={\r\n        chart1:{\r\n            label:\"Total Users\",\r\n            series:[\r\n            {\r\n                name:\"Income\",\r\n                data:totalIncome\r\n            }\r\n            ],\r\n            dataLabels: months\r\n        }\r\n    } \r\n\r\n    const handleGeneratePDF = async() => {\r\n        const reportName = \"User Gains Report\";\r\n        const description = `This report shows the total income gained from the subscriptions of the users for the \\n past 12 months.\\n\\nDate: ${new Date().toLocaleString()}\\n`;\r\n        const pdf = new jsPDF('p', 'mm', 'a4');\r\n        const pdfContainer = barChartRef.current;\r\n\r\n        pdf.setFont('helvetica', 'bold');\r\n        pdf.setFontSize(25);\r\n        pdf.setTextColor(144,16,185);\r\n        const textWidth = pdf.getStringUnitWidth(reportName) * pdf.getFontSize() / pdf.internal.scaleFactor;\r\n        const textOffset = (pdf.internal.pageSize.width - textWidth) / 2;\r\n        pdf.text(reportName, textOffset, 20);\r\n\r\n        //description with styles\r\n        pdf.setFont('helvetica', 'normal');\r\n        pdf.setFontSize(12);\r\n        pdf.setTextColor(0, 0, 0);\r\n        pdf.text(description, 30, 40);\r\n\r\n        //chart with styles\r\n        const canvas = await html2canvas(pdfContainer);\r\n        const imageData = canvas.toDataURL('image/png');\r\n        pdf.addImage(imageData, 'PNG', 30, 60, 170, 100);\r\n\r\n        const tableHeaders = [\"Month\",\"Income(LKR)\"];\r\n        const tableData = [];\r\n        for(let i=0;i<months.length;i++){\r\n            tableData.push([months[i],totalIncome[i]]);\r\n        }\r\n\r\n        console.log(tableData);\r\n\r\n        const tableOptions = {\r\n            head: [tableHeaders],\r\n            body: tableData,\r\n            startY: 160,\r\n            margin: { left: 10 }, // Adjust left margin for desired horizontal position\r\n            theme: 'grid',\r\n            styles: {\r\n              fontSize: 10,\r\n              cellPadding: 1,\r\n              overflow: 'linebreak',\r\n              halign: 'center',\r\n              valign: 'middle',\r\n            },\r\n            columnStyles: {\r\n              0: { cellWidth: 30 },\r\n              1: { cellWidth: 30 },\r\n            },\r\n          };\r\n      \r\n          // Calculate the total table width\r\n          const totalTableWidth = tableHeaders.length * tableOptions.columnStyles[0].cellWidth;\r\n      \r\n          // Calculate the center position for X-axis\r\n          const pageWidth = pdf.internal.pageSize.width;\r\n          const startX = (pageWidth - totalTableWidth) / 2;\r\n      \r\n          // Adjust the left margin to the calculated startX\r\n          tableOptions.margin.left = startX;\r\n      \r\n          pdf.autoTable({\r\n            ...tableOptions,\r\n          });\r\n\r\n        pdf.save(`${reportName}.pdf`);\r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <Header active=\"Analytics\">   \r\n            <Button\r\n                variant=\"clear\"\r\n                className=\"px-[0.75rem] !border-none\"\r\n                type=\"button\"\r\n                icon=\"previous\"\r\n                onClick={() => {\r\n                    window.location.href = \"/admin/analytics\";\r\n                }}\r\n            >\r\n               Back\r\n            </Button>  \r\n            <div className=\"w-full flex flex-col lg:flex-row gap-[1rem]\">\r\n                <div className=\"w-full lg:w-full bg-white rounded-lg border-[1px] p-4 md:p-6\">\r\n                    <div className=\"flex flex-row gap-[0.2rem] border-gray-200 border-b py-2\">\r\n                        <div className=\"flex flex-row\">\r\n                            <h5 className=\"leading-none text-3xl font-bold text-gray-900 dark:text-white pb-2\">\r\n                                User Gains\r\n                            </h5>\r\n                        </div>\r\n                        <div className=\"flex flex-row\">\r\n                            <Button\r\n                                variant=\"clear\"\r\n                                className=\" w-[5rem] ml-[42rem] border-none\"\r\n                                type=\"button\"\r\n                                onClick={handleGeneratePDF}\r\n                            >\r\n                                Download\r\n                            </Button>\r\n                        </div>   \r\n                    </div>\r\n                    <div ref={barChartRef}>\r\n                    <div className=\"flex items-center gap-[1rem]\">\r\n                        <div className=\"flex justify-between items-center\">\r\n                            <p className=\"text-base font-normal text-gray-800 dark:text-gray-400\">Income</p>\r\n                        </div>\r\n                        <div\r\n                            className=\"flex items-center px-2.5 py-0.5 text-base font-semibold text-green-500 dark:text-green-500 text-center\">   \r\n                        <FontAwesomeIcon icon={faMoneyCheckDollar}/>\r\n                        </div>\r\n                    </div>\r\n                    <BarChart data={barchart.chart1}/>\r\n                    </div>\r\n                </div>\r\n            </div>         \r\n        </Header>\r\n        </div>   \r\n    )\r\n\r\n}\r\n\r\nexport default GainsReport;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}