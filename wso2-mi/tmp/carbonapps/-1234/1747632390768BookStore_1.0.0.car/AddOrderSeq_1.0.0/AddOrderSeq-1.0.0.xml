<?xml version="1.0" encoding="UTF-8"?>
<sequence name="AddOrderSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log category="DEBUG">
        <message>Adding Order: ${payload}</message>
    </log>
    <property name="book_id" expression="${payload.book_id}"/>
    <property name="user_email" expression="${payload.user_email}"/>
    <property name="quantity" type="INTEGER" expression="${payload.quantity}"/>
    <variable name="quantity" type="INTEGER" expression="${payload.quantity}"/>

    <dataServiceCall serviceName="BookDataService">
        <operations type="single">
            <operation name="getAllDetailBook">
                <param name="book_id" expression="get-property('book_id')"/>
            </operation>
        </operations>
        <source type="inline"/>
        <target type="body"/>
    </dataServiceCall>
    <filter xpath="${exists($.Book)}">
        <then>
            <log category="DEBUG">
                <message>Book Details: ${payload}</message>
            </log>
            <filter regex="0" source="${payload.Book.stock_quantity}" >
                <then>
                    <call-template target="FaultHandleTemp">
                        <with-param name="status_code" value="409"/>
                        <with-param name="internal_error_code" value="err_1"/>
                        <with-param name="message" value="Book out of stock"/>
                    </call-template>
                </then>
                <else>
                    <property name="remaning_quantity" type="INTEGER" expression="${payload.Book.stock_quantity - vars.quantity}"/>
                    <filter regex="^-\d+$" source="${properties.synapse.remaning_quantity}">
                        <then>
                            <call-template target="FaultHandleTemp">
                                <with-param name="status_code" value="409"/>
                                <with-param name="internal_error_code" value="err_1"/>
                                <with-param name="message" value="Required book quantity not available"/>
                            </call-template>
                        </then>
                        <else>
                            <variable name="price" type="DOUBLE" expression="${payload.Book.price}"/>
                            <property name="amount" type="DOUBLE" expression="${vars.quantity * vars.price}"/>

                            <dataServiceCall serviceName="BookDataService">
                                <operations type="request-box">
                                    <operation name="getNextOrderIds"/>
                                </operations>
                                <source type="inline"/>
                                <target type="body"/>
                            </dataServiceCall>

                            <log category="DEBUG">
                                <message>${payload}</message>
                            </log>

                            <property name="order_id" type="STRING" expression="${payload.DATA_SERVICE_REQUEST_BOX_RESPONSE.OrderIds.order_id}"/>
                            <property name="order_item_id" type="STRING" expression="${payload.DATA_SERVICE_REQUEST_BOX_RESPONSE.OrderIds.order_item_id}"/>
                            <property name="payment_id" type="STRING" expression="${payload.DATA_SERVICE_REQUEST_BOX_RESPONSE.OrderIds.payment_id}"/>

                            <dataServiceCall serviceName="BookDataService">
                                <operations type="request-box">
                                    <operation name="updateBookQuantity">
                                        <param name="book_id" expression="get-property('book_id')"/>
                                        <param name="stock_quantity" expression="get-property('remaning_quantity')"/>
                                    </operation>
                                    <operation name="addOrder">
                                        <param name="order_id" expression="get-property('order_id')"/>
                                        <param name="user_email" expression="get-property('user_email')"/>
                                        <param name="total_amount" expression="get-property('amount')"/>
                                    </operation>
                                    <operation name="addOrderItem">
                                        <param name="order_item_id" expression="get-property('order_item_id')"/>
                                        <param name="order_id" expression="get-property('order_id')"/>
                                        <param name="book_id" expression="get-property('book_id')"/>
                                        <param name="quantity" expression="get-property('quantity')"/>
                                    </operation>
                                    <operation name="addPayment">
                                        <param name="payment_id" expression="get-property('payment_id')"/>
                                        <param name="order_id" expression="get-property('order_id')"/>
                                        <param name="payment_amount" expression="get-property('amount')"/>
                                    </operation>
                                    <operation name="getLastInsertedOrderPayment"/>
                                </operations>
                                <source type="inline"/>
                                <target type="body"/>
                            </dataServiceCall>

                            <log category="DEBUG">
                                <message>${payload}</message>
                            </log>

                            <payloadFactory media-type="json">
                                <format>
                                    {
                                    "message": "Order Created Successfully!",
                                    "data": $1
                                    }
                                </format>
                                <args>
                                    <arg evaluator="json" expression="json-eval($.DATA_SERVICE_REQUEST_BOX_RESPONSE.OrderPayment)"/>
                                </args>
                            </payloadFactory>
                        </else>
                    </filter>
                </else>
            </filter>
        </then>
        <else>
            <script language="js">
                <![CDATA[
                    var bookId = mc.getProperty("book_id");
                    var message = "Book with ID " + bookId + " not found!";
                    mc.setProperty("error_message", message);
                ]]>
            </script>
            <call-template target="FaultHandleTemp">
                <with-param name="status_code" value="404"/>
                <with-param name="internal_error_code" value="err_1"/>
                <with-param name="message" value="{get-property('error_message')}"/>
            </call-template>
        </else>
    </filter>
    
    <respond/>
</sequence>






<!-- <variable name="amount" type="DOUBLE" expression="${vars.quantity * vars.price}"/> -->
<!-- <variable name="amount" type="DOUBLE" expression="${properties.synapse.quantity * vars.price}"/> -->
