{"ast":null,"code":"var _jsxFileName = \"/Users/samindu/Downloads/client/src/pages/investor/Profile.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Checkbox, Input, Select } from \"../webcomponent\";\nimport { DisableAccount, NotificationSettings } from \"../sectioncomponent\";\nimport useAxiosMethods from \"../../hooks/useAxiosMethods\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { useParams } from \"react-router-dom\";\n//const mobileRegex=/^(?:\\+94|0)(?:\\d{9})$/;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst passwordRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).{8,}$/;\n\n// const ProfileInformation = ({formData1, setFormData1, validateFormData1}) => {\n//\n//     const [editMode, setEditMode] = useState(false);\n//     const [editForm, setEditForm] = useState(true);\n//     const [changePassword, setchangePassword] = useState(false)\n//     const handleEditClick = () => {\n//         setEditMode(true);\n//         setEditForm(false);\n//     };\n//     const handleChangePasswordClick = () => {\n//         setchangePassword(true)\n//     }\n//     const noHandleChangePasswordClick = () => {\n//         setchangePassword(false)\n//     }\n//     const {get,put} = useAxiosMethods();\n//     const handleSubmit = () => {\n//         setEditMode(false);\n//         setEditForm(true);\n//             put(`investors/update-details/${id})`,response,true)\n//     };\n//     //get user id\n//     const [ response, setResponse] = useState([]);\n//     const {auth} = useAuth();\n//     const id=auth.id;\n//     console.log(id);\n//\n//\n//     useEffect(()=>{\n//         get(`investors/pending-details/${id}`,setResponse, true);\n//     },[] )\n//\n//\n//\n//\n//         //const {id} = useParams();\n//\n//         // useEffect(() => {\n//         //     get(`/investor/update/view/${id}`, setResponse, true);\n//         // }, []);\n//         // console.log(response)\n//\n//         const [formData, setFormData] = useState({\n//             firstname: \"\",\n//             lastname: \"\",\n//             firstline: \"\",\n//             secondline: \"\",\n//             town: \"\",\n//             district: \"\",\n//             mobile: \"\",\n//             password: \"\",\n//             confirmPassword: \"\",\n//         });\n//\n//         useEffect(() => {\n//             setFormData({\n//                 ...formData,\n//                 firstname: response.firstname,\n//                 lastname: response.lastname,\n//                 firstline: response.firstLineAddress,\n//                 secondline: response.secondLineAddress,\n//                 town: response.town,\n//                 district: response.district,\n//                 mobile: response.contactNumber,\n//                 password: response.password,\n//                 confirmPassword: response.password,\n//             })\n//\n//         }, [response]);\n//\n//         const [validateFormData, setValidateFormData] = useState({\n//             firstname: {\"State\": \"\", \"Message\": \"\"},\n//             lastname: {\"State\": \"\", \"Message\": \"\"},\n//             firstline: {\"State\": \"\", \"Message\": \"\"},\n//             secondline: {\"State\": \"\", \"Message\": \"\"},\n//             town: {\"State\": \"\", \"Message\": \"\"},\n//             district: {\"State\": \"\", \"Message\": \"\"},\n//             mobile: {\"State\": \"\", \"Message\": \"\"},\n//             password: {\"State\": \"\", \"Message\": \"\"},\n//             confirmPassword: {\"State\": \"\", \"Message\": \"\"}\n//         });\n//\n//         const [disabled, setDisabled] = useState(true);\n//\n//         const [showSuccessNotification, setShowSuccessNotification] = useState(false);\n//\n//         useEffect(() => {\n//             //let mobileFlag = mobileRegex.test(formData.mobile);\n//             let passwordFlag = passwordRegex.test(formData.password);\n//             let confirmPasswordFlag = formData.password === formData.confirmPassword;\n//\n//             setValidateFormData({\n//                 password: {\n//                     State: passwordFlag || !formData.password ? \"Valid\" : \"Invalid\",\n//                     Message: passwordFlag || !formData.password ? \"\" : \"Password must contain at least 8 characters, one uppercase, one lowercase and one number\"\n//                 },\n//                 confirmPassword: {\n//                     State: confirmPasswordFlag || !formData.confirmPassword ? \"Valid\" : \"Invalid\",\n//                     Message: confirmPasswordFlag || !formData.confirmPassword ? \"\" : \"Passwords do not match\"\n//                 }\n//             });\n//         }, [formData.password, formData.confirmPassword]);\n//\n//\n//         //check all fields are valid and required fields are not empty\n//         const [requiredFields] = useState([\n//             \"firstname\",\n//             \"lastname\",\n//             \"firstline\",\n//             \"secondline\",\n//             \"town\",\n//             \"district\",\n//             \"mobile\",\n//             \"password\",\n//             \"confirmPassword\"\n//         ]);\n//\n//         useEffect(() => {\n//             let requiredFieldsFlag = requiredFields.every((field) => formData[field] !== \"\");\n//\n//             let validateFormDataFlag = Object.values(validateFormData).every((field) => field.State === \"Valid\");\n//\n//             setDisabled(!(requiredFieldsFlag && validateFormDataFlag));\n//         }, [formData, requiredFields, validateFormData]);\n//\n//\n//         const requestData = {\n//             firstname: formData.firstname,\n//             lastname: formData.lastname,\n//             firstLineAddress: formData.firstline,\n//             secondLineAddress: formData.secondline,\n//             town: formData.town,\n//             district: formData.district,\n//             email: formData.email,\n//             nic: formData.nic,\n//             gender: formData.gender,\n//             contactNumber: formData.mobile,\n//             password: formData.password,\n//         }\n//\n//\n//     const handleUpdateClick =  () => {\n//         setEditMode(false);\n//         setEditForm(true);\n//         try {\n//             const response =  put(`/investors/update/${id}`, JSON.stringify(requestData), setResponse\n//             );\n//\n//             if (response.status === 200) {\n//                 console.log('investor updated successfully');\n//\n//             } else {\n//                 console.error('Update failed');\n//\n//             }\n//         } catch (error) {\n//             console.error('An error occurred:', error);\n//\n//         }\n//     };\n//     return (\n//         <div\n//             className='flex mt-24 relative justify-center items-start w-auto rounded-2xl py-[2rem] border border-main-purple'>\n//             {changePassword ? (\n//                 /* Display change password form */\n//                 <div>\n//                     <h1 className=\"text-2xl text-main-purple mb-6\">Change Password</h1>\n//                     <div className=\"flex flex-col gap-6 items-center mb-1 \">\n//                         <Input\n//                             type=\"password\"\n//                             label=\"Enter Current Password\"\n//                             required\n//                         />\n//                         <Input\n//                             type=\"password\"\n//                             label=\"Enter New Password\"\n//                             required\n//                         />\n//                         <Input\n//                             type=\"password\"\n//                             label=\"Confirm New Password\"\n//                             required\n//                         />\n//                         <div className=\"row\">\n//                             <Button color=\"purple\" size=\"sm\" ripple={true} type='submit'\n//                                     onClick={noHandleChangePasswordClick}>back</Button>\n//                             <Button color=\"purple\" size=\"sm\" ripple={true} type='submit'>Submit</Button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             ) : (\n//                 <div className=\"ProfileInfo\">\n//                     <div className=\"flex justify-between\">\n//                         <h1 className=\"text-2xl text-main-purple\">Profile Information</h1>\n//                         {editMode ? (\n//                             <Button color=\"purple\" ripple={true} onClick={handleUpdateClick}>Submit</Button>\n//                         ) : (\n//                             <Button color=\"purple\" ripple={true} onClick={handleEditClick}>Edit</Button>\n//                         )}\n//                     </div>\n//                     <div className=\"mt-6\">\n//                         <div className=\"row\">\n//                             <Input\n//                                 type=\"text\"\n//                                 label=\"First Name\"\n//                                 value={formData.firstname}\n//                                 disabled={editForm}\n//                                 onChange={(e) => {\n//                                     if (!editForm) {\n//                                         setFormData({\n//                                             ...formData,\n//                                             firstname: e.target.value, // Update the value in response state\n//                                         });\n//                                     }\n//\n//                                 }}\n//                                 state={validateFormData.firstname}\n//                                 required={true}\n//                             />\n//                             <Input\n//                                 type=\"text\"\n//                                 label=\"Last name\"\n//                                 value={formData.lastname}\n//                                 disabled={editForm}\n//                                 onChange={(e) => {\n//                                     if (!editForm) {\n//                                         setFormData({\n//                                             ...formData,\n//                                             lastname: e.target.value, // Update the value in response state\n//                                         });\n//                                     }\n//                                 }}\n//                                     state={validateFormData.lastname}\n//                                     required={true}\n//\n//                             />\n//\n//                         </div>\n//\n//\n//                         <fieldset className='p-2 border-[1px] mb-[1rem] rounded-2xl border-light-purple'>\n//                             <legend className=\"bg-white px-[1rem] text-light-purple relative left-[0.1rem]\">Address\n//                             </legend>\n//                             <div className=\"row\">\n//                                 <Input\n//                                     type=\"text\"\n//                                     label=\"First Line\"\n//                                     value={formData.firstline}\n//                                     disabled={editForm}\n//                                     onChange={(e) => {\n//                                         if (!editForm) {\n//                                             setFormData({\n//                                                 ...formData,\n//                                                 firstline: e.target.value, // Update the value in response state\n//                                             });\n//                                         }\n//                                     }}\n//                                 />\n//                                 <Input\n//                                     type=\"text\"\n//                                     label=\"Second Line\"\n//                                     value={formData.secondline}\n//                                     disabled={editForm}\n//                                     onChange={(e) => {\n//                                         if (!editForm) {\n//                                             setFormData({\n//                                                 ...formData,\n//                                                 secondline: e.target.value, // Update the value in response state\n//                                             });\n//                                         }\n//                                     }}\n//                                 />\n//                             </div>\n//\n//\n//                             <div className=\"row\">\n//                                 <Input\n//                                     type=\"text\"\n//                                     label=\"Town\"\n//                                     value={formData.town}\n//                                     disabled={editForm}\n//                                     onChange={(e) => {\n//                                         if (!editForm) {\n//                                             setFormData({\n//                                                 ...response,\n//                                                 town: e.target.value, // Update the value in response state\n//                                             });\n//                                         }\n//                                     }}\n//                                 />\n//                                 <Select\n//                                     label=\"District\"\n//                                     value={formData.district}\n//                                     options={[\"Ampara\",\n//                                         \"Anuradhapura\",\n//                                         \"Badulla\",\n//                                         \"Batticaloa\",\n//                                         \"Colombo\",\n//                                         \"Galle\",\n//                                         \"Gampaha\",\n//                                         \"Hambantota\",\n//                                         \"Jaffna\",\n//                                         \"Kalutara\",\n//                                         \"Kandy\",\n//                                         \"Kegalle\",\n//                                         \"Kilinochchi\",\n//                                         \"Kurunegala\",\n//                                         \"Mannar\",\n//                                         \"Matale\",\n//                                         \"Matara\",\n//                                         \"Monaragala\",\n//                                         \"Mullaitivu\",\n//                                         \"Nuwara Eliya\",\n//                                         \"Polonnaruwa\",\n//                                         \"Puttalam\",\n//                                         \"Ratnapura\",\n//                                         \"Trincomalee\",\n//                                         \"Vavuniya\"]}\n//                                     disabled={editForm}\n//                                     onChange={(e) => {\n//                                         if (!editForm) {\n//                                             setFormData({\n//                                                 ...formData,\n//                                                 district: e, // Update the value in response state\n//                                             });\n//                                         }\n//                                     }}\n//                                 />\n//                             </div>\n//                         </fieldset>\n//\n//                             <Input\n//                                 type=\"text\"\n//                                 label=\"mobile number\"\n//                                 value={formData.mobile}\n//                                 disabled={editForm}\n//                                 onChange={(e) => {\n//                                     if (!editForm) {\n//                                         setFormData({\n//                                             ...formData,\n//                                             mobile: e.target.value, // Update the value in response state\n//                                         });\n//                                     }\n//                                 }}\n//                                 state={validateFormData.mobile}\n//                                 required={true}\n//                             />\n//                         </div>\n//                     {/*<button className=\"text-sm text-main-purple\" onClick={handleChangePasswordClick}>Change Password*/}\n//                     {/*</button>*/}\n//                 </div>\n//             )}\n//         </div>\n//     )\n// }\n// const ProfileInformation = ({formData1, setFormData1, validateFormData1}) => {\n//\n//     const [editMode, setEditMode] = useState(false);\n//     const [editForm, setEditForm] = useState(true);\n//     const [changePassword, setchangePassword] = useState(false)\n//     const handleEditClick = () => {\n//         setEditMode(true);\n//         setEditForm(false);\n//     };\n//     const handleChangePasswordClick = () => {\n//         setchangePassword(true)\n//     }\n//     const noHandleChangePasswordClick = () => {\n//         setchangePassword(false)\n//     }\n//     const {get,put} = useAxiosMethods();\n//     const handleSubmit = () => {\n//         setEditMode(false);\n//         setEditForm(true);\n//         put(`investors/update-details/${id})`,response,true)\n//     };\n//     //get user id\n//     const [ response, setResponse] = useState([]);\n//     const {auth} = useAuth();\n//     const id=auth.id;\n//     console.log(id);\n//\n//\n//     useEffect(()=>{\n//         get(`investors/pending-details/${id}`,setResponse, true);\n//     },[] )\n//\n//\n//     const [formData, setFormData] = useState({\n//         firstname: \"\",\n//         lastname: \"\",\n//         firstline: \"\",\n//         secondline: \"\",\n//         town: \"\",\n//         district: \"\",\n//         mobile: \"\",\n//         password: \"\",\n//         confirmPassword: \"\",\n//     });\n//\n//     useEffect(() => {\n//         setFormData({\n//             ...formData,\n//             firstname: response.firstname,\n//             lastname: response.lastname,\n//             firstline: response.firstLineAddress,\n//             secondline: response.secondLineAddress,\n//             town: response.town,\n//             district: response.district,\n//             mobile: response.contactNumber,\n//             password: response.password,\n//             confirmPassword: response.password,\n//         })\n//\n//     }, [response]);\n//\n//     const [validateFormData, setValidateFormData] = useState({\n//         firstname: {\"State\": \"\", \"Message\": \"\"},\n//         lastname: {\"State\": \"\", \"Message\": \"\"},\n//         firstline: {\"State\": \"\", \"Message\": \"\"},\n//         secondline: {\"State\": \"\", \"Message\": \"\"},\n//         town: {\"State\": \"\", \"Message\": \"\"},\n//         district: {\"State\": \"\", \"Message\": \"\"},\n//         mobile: {\"State\": \"\", \"Message\": \"\"},\n//         password: {\"State\": \"\", \"Message\": \"\"},\n//         confirmPassword: {\"State\": \"\", \"Message\": \"\"}\n//     });\n//\n//     const [disabled, setDisabled] = useState(true);\n//\n//     const [showSuccessNotification, setShowSuccessNotification] = useState(false);\n//\n//     useEffect(() => {\n//         //let mobileFlag = mobileRegex.test(formData.mobile);\n//         let passwordFlag = passwordRegex.test(formData.password);\n//         let confirmPasswordFlag = formData.password === formData.confirmPassword;\n//\n//         setValidateFormData({\n//             password: {\n//                 State: passwordFlag || !formData.password ? \"Valid\" : \"Invalid\",\n//                 Message: passwordFlag || !formData.password ? \"\" : \"Password must contain at least 8 characters, one uppercase, one lowercase and one number\"\n//             },\n//             confirmPassword: {\n//                 State: confirmPasswordFlag || !formData.confirmPassword ? \"Valid\" : \"Invalid\",\n//                 Message: confirmPasswordFlag || !formData.confirmPassword ? \"\" : \"Passwords do not match\"\n//             }\n//         });\n//     }, [formData.password, formData.confirmPassword]);\n//\n//\n//     //check all fields are valid and required fields are not empty\n//     const [requiredFields] = useState([\n//         \"firstname\",\n//         \"lastname\",\n//         \"firstline\",\n//         \"secondline\",\n//         \"town\",\n//         \"district\",\n//         \"mobile\",\n//         \"password\",\n//         \"confirmPassword\"\n//     ]);\n//\n//     useEffect(() => {\n//         let requiredFieldsFlag = requiredFields.every((field) => formData[field] !== \"\");\n//\n//         let validateFormDataFlag = Object.values(validateFormData).every((field) => field.State === \"Valid\");\n//\n//         setDisabled(!(requiredFieldsFlag && validateFormDataFlag));\n//     }, [formData, requiredFields, validateFormData]);\n//\n//\n//     const requestData = {\n//         firstname: formData.firstname,\n//         lastname: formData.lastname,\n//         firstLineAddress: formData.firstline,\n//         secondLineAddress: formData.secondline,\n//         town: formData.town,\n//         district: formData.district,\n//         email: formData.email,\n//         nic: formData.nic,\n//         gender: formData.gender,\n//         contactNumber: formData.mobile,\n//         password: formData.password,\n//     }\n//\n//\n//     const handleUpdateClick =  () => {\n//         setEditMode(false);\n//         setEditForm(true);\n//         try {\n//             const response =  put(`/investors/update/${id}`, JSON.stringify(requestData), setResponse\n//             );\n//\n//             if (response.status === 200) {\n//                 console.log('investor updated successfully');\n//\n//             } else {\n//                 console.error('Update failed');\n//\n//             }\n//         } catch (error) {\n//             console.error('An error occurred:', error);\n//\n//         }\n//     };\n//     return (\n//         <div\n//             className='flex mt-24 relative justify-center items-start w-auto rounded-2xl py-[2rem] border border-main-purple'>\n//             {changePassword ? (\n//                 /* Display change password form */\n//                 <div>\n//                     <h1 className=\"text-2xl text-main-purple mb-6\">Change Password</h1>\n//                     <div className=\"flex flex-col gap-6 items-center mb-1 \">\n//                         <Input\n//                             type=\"password\"\n//                             label=\"Enter Current Password\"\n//                             required\n//                         />\n//                         <Input\n//                             type=\"password\"\n//                             label=\"Enter New Password\"\n//                             required\n//                         />\n//                         <Input\n//                             type=\"password\"\n//                             label=\"Confirm New Password\"\n//                             required\n//                         />\n//                         <div className=\"row\">\n//                             <Button color=\"purple\" size=\"sm\" ripple={true} type='submit'\n//                                     onClick={noHandleChangePasswordClick}>back</Button>\n//                             <Button color=\"purple\" size=\"sm\" ripple={true} type='submit'>Submit</Button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             ) : (\n//                 <div className=\"ProfileInfo\">\n//                     <div className=\"flex justify-between\">\n//                         <h1 className=\"text-2xl text-main-purple\">Profile Information</h1>\n//                         {editMode ? (\n//                             <Button color=\"purple\" ripple={true} onClick={handleUpdateClick}>Submit</Button>\n//                         ) : (\n//                             <Button color=\"purple\" ripple={true} onClick={handleEditClick}>Edit</Button>\n//                         )}\n//                     </div>\n//                     <div className=\"mt-6\">\n//                         <div className=\"row\">\n//                             <Input\n//                                 type=\"text\"\n//                                 label=\"First Name\"\n//                                 value={formData.firstname}\n//                                 disabled={editForm}\n//                                 onChange={(e) => {\n//                                     if (!editForm) {\n//                                         setFormData({\n//                                             ...formData,\n//                                             firstname: e.target.value, // Update the value in response state\n//                                         });\n//                                     }\n//\n//                                 }}\n//                                 state={validateFormData.firstname}\n//                                 required={true}\n//                             />\n//                             <Input\n//                                 type=\"text\"\n//                                 label=\"Last name\"\n//                                 value={formData.lastname}\n//                                 disabled={editForm}\n//                                 onChange={(e) => {\n//                                     if (!editForm) {\n//                                         setFormData({\n//                                             ...formData,\n//                                             lastname: e.target.value, // Update the value in response state\n//                                         });\n//                                     }\n//                                 }}\n//                                 state={validateFormData.lastname}\n//                                 required={true}\n//\n//                             />\n//\n//                         </div>\n//\n//\n//                         <fieldset className='p-2 border-[1px] mb-[1rem] rounded-2xl border-light-purple'>\n//                             <legend className=\"bg-white px-[1rem] text-light-purple relative left-[0.1rem]\">Address\n//                             </legend>\n//                             <div className=\"row\">\n//                                 <Input\n//                                     type=\"text\"\n//                                     label=\"First Line\"\n//                                     value={formData.firstline}\n//                                     disabled={editForm}\n//                                     onChange={(e) => {\n//                                         if (!editForm) {\n//                                             setFormData({\n//                                                 ...formData,\n//                                                 firstline: e.target.value, // Update the value in response state\n//                                             });\n//                                         }\n//                                     }}\n//                                 />\n//                                 <Input\n//                                     type=\"text\"\n//                                     label=\"Second Line\"\n//                                     value={formData.secondline}\n//                                     disabled={editForm}\n//                                     onChange={(e) => {\n//                                         if (!editForm) {\n//                                             setFormData({\n//                                                 ...formData,\n//                                                 secondline: e.target.value, // Update the value in response state\n//                                             });\n//                                         }\n//                                     }}\n//                                 />\n//                             </div>\n//\n//\n//                             <div className=\"row\">\n//                                 <Input\n//                                     type=\"text\"\n//                                     label=\"Town\"\n//                                     value={formData.town}\n//                                     disabled={editForm}\n//                                     onChange={(e) => {\n//                                         if (!editForm) {\n//                                             setFormData({\n//                                                 ...response,\n//                                                 town: e.target.value, // Update the value in response state\n//                                             });\n//                                         }\n//                                     }}\n//                                 />\n//                                 <Select\n//                                     label=\"District\"\n//                                     value={formData.district}\n//                                     options={[\"Ampara\",\n//                                         \"Anuradhapura\",\n//                                         \"Badulla\",\n//                                         \"Batticaloa\",\n//                                         \"Colombo\",\n//                                         \"Galle\",\n//                                         \"Gampaha\",\n//                                         \"Hambantota\",\n//                                         \"Jaffna\",\n//                                         \"Kalutara\",\n//                                         \"Kandy\",\n//                                         \"Kegalle\",\n//                                         \"Kilinochchi\",\n//                                         \"Kurunegala\",\n//                                         \"Mannar\",\n//                                         \"Matale\",\n//                                         \"Matara\",\n//                                         \"Monaragala\",\n//                                         \"Mullaitivu\",\n//                                         \"Nuwara Eliya\",\n//                                         \"Polonnaruwa\",\n//                                         \"Puttalam\",\n//                                         \"Ratnapura\",\n//                                         \"Trincomalee\",\n//                                         \"Vavuniya\"]}\n//                                     disabled={editForm}\n//                                     onChange={(e) => {\n//                                         if (!editForm) {\n//                                             setFormData({\n//                                                 ...formData,\n//                                                 district: e, // Update the value in response state\n//                                             });\n//                                         }\n//                                     }}\n//                                 />\n//                             </div>\n//                         </fieldset>\n//\n//                         <Input\n//                             type=\"text\"\n//                             label=\"mobile number\"\n//                             value={formData.mobile}\n//                             disabled={editForm}\n//                             onChange={(e) => {\n//                                 if (!editForm) {\n//                                     setFormData({\n//                                         ...formData,\n//                                         mobile: e.target.value, // Update the value in response state\n//                                     });\n//                                 }\n//                             }}\n//                             state={validateFormData.mobile}\n//                             required={true}\n//                         />\n//                     </div>\n//                     {/*<button className=\"text-sm text-main-purple\" onClick={handleChangePasswordClick}>Change Password*/}\n//                     {/*</button>*/}\n//                 </div>\n//             )}\n//         </div>\n//     )\n// }\n\nconst ProfileInformation = _ref => {\n  _s();\n  let {\n    formData1,\n    setFormData1,\n    validateFormData1\n  } = _ref;\n  const [editMode, setEditMode] = useState(false);\n  const [editForm, setEditForm] = useState(true);\n  const [changePassword, setchangePassword] = useState(false);\n  const handleEditClick = () => {\n    setEditMode(true);\n    setEditForm(false);\n  };\n  const handleChangePasswordClick = () => {\n    setchangePassword(true);\n  };\n  const noHandleChangePasswordClick = () => {\n    setchangePassword(false);\n  };\n  const {\n    get,\n    put\n  } = useAxiosMethods();\n  const handleSubmit = () => {\n    setEditMode(false);\n    setEditForm(true);\n    put(`investors/update-details/${id})`, response, true);\n  };\n  //get user id\n  const [response, setResponse] = useState([]);\n  const {\n    auth\n  } = useAuth();\n  const id = auth.id;\n  console.log(id);\n  useEffect(() => {\n    get(`investors/pending-details/${id}`, setResponse, true);\n  }, []);\n  const [formData, setFormData] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    firstline: \"\",\n    secondline: \"\",\n    town: \"\",\n    district: \"\",\n    mobile: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  useEffect(() => {\n    setFormData({\n      ...formData,\n      firstname: response.firstname,\n      lastname: response.lastname,\n      firstline: response.firstLineAddress,\n      secondline: response.secondLineAddress,\n      town: response.town,\n      district: response.district,\n      mobile: response.contactNumber,\n      password: response.password,\n      confirmPassword: response.password\n    });\n  }, [response]);\n  const [validateFormData, setValidateFormData] = useState({\n    firstname: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    lastname: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    firstline: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    secondline: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    town: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    district: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    mobile: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    password: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    },\n    confirmPassword: {\n      \"State\": \"\",\n      \"Message\": \"\"\n    }\n  });\n  const [disabled, setDisabled] = useState(true);\n  const [showSuccessNotification, setShowSuccessNotification] = useState(false);\n  useEffect(() => {\n    //let mobileFlag = mobileRegex.test(formData.mobile);\n    let passwordFlag = passwordRegex.test(formData.password);\n    let confirmPasswordFlag = formData.password === formData.confirmPassword;\n    setValidateFormData({\n      password: {\n        State: passwordFlag || !formData.password ? \"Valid\" : \"Invalid\",\n        Message: passwordFlag || !formData.password ? \"\" : \"Password must contain at least 8 characters, one uppercase, one lowercase and one number\"\n      },\n      confirmPassword: {\n        State: confirmPasswordFlag || !formData.confirmPassword ? \"Valid\" : \"Invalid\",\n        Message: confirmPasswordFlag || !formData.confirmPassword ? \"\" : \"Passwords do not match\"\n      }\n    });\n  }, [formData.password, formData.confirmPassword]);\n\n  //check all fields are valid and required fields are not empty\n  const [requiredFields] = useState([\"firstname\", \"lastname\", \"firstline\", \"secondline\", \"town\", \"district\", \"mobile\", \"password\", \"confirmPassword\"]);\n  useEffect(() => {\n    let requiredFieldsFlag = requiredFields.every(field => formData[field] !== \"\");\n    let validateFormDataFlag = Object.values(validateFormData).every(field => field.State === \"Valid\");\n    setDisabled(!(requiredFieldsFlag && validateFormDataFlag));\n  }, [formData, requiredFields, validateFormData]);\n  const requestData = {\n    firstname: formData.firstname,\n    lastname: formData.lastname,\n    firstLineAddress: formData.firstline,\n    secondLineAddress: formData.secondline,\n    town: formData.town,\n    district: formData.district,\n    email: formData.email,\n    nic: formData.nic,\n    gender: formData.gender,\n    contactNumber: formData.mobile,\n    password: formData.password\n  };\n  const handleUpdateClick = () => {\n    setEditMode(false);\n    setEditForm(true);\n    try {\n      const response = put(`/investors/update/${id}`, JSON.stringify(requestData), setResponse);\n      if (response.status === 200) {\n        console.log('investor updated successfully');\n      } else {\n        console.error('Update failed');\n      }\n    } catch (error) {\n      console.error('An error occurred:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex mt-24 relative justify-center items-start w-auto rounded-2xl py-[2rem] border border-main-purple\",\n    children: changePassword ?\n    /*#__PURE__*/\n    /* Display change password form */\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl text-main-purple mb-6\",\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-6 items-center mb-1 \",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          label: \"Enter Current Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          label: \"Enter New Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          label: \"Confirm New Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"purple\",\n            size: \"sm\",\n            ripple: true,\n            type: \"submit\",\n            onClick: noHandleChangePasswordClick,\n            children: \"back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"purple\",\n            size: \"sm\",\n            ripple: true,\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ProfileInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl text-main-purple\",\n          children: \"Profile Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 25\n        }, this), editMode ? /*#__PURE__*/_jsxDEV(Button, {\n          color: \"purple\",\n          ripple: true,\n          onClick: handleUpdateClick,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          color: \"purple\",\n          ripple: true,\n          onClick: handleEditClick,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            label: \"First Name\",\n            value: formData.firstname,\n            disabled: editForm,\n            onChange: e => {\n              if (!editForm) {\n                setFormData({\n                  ...formData,\n                  firstname: e.target.value // Update the value in response state\n                });\n              }\n            },\n\n            state: validateFormData.firstname,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            label: \"Last name\",\n            value: formData.lastname,\n            disabled: editForm,\n            onChange: e => {\n              if (!editForm) {\n                setFormData({\n                  ...formData,\n                  lastname: e.target.value // Update the value in response state\n                });\n              }\n            },\n\n            state: validateFormData.lastname,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"p-2 border-[1px] mb-[1rem] rounded-2xl border-light-purple\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"bg-white px-[1rem] text-light-purple relative left-[0.1rem]\",\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              label: \"First Line\",\n              value: formData.firstline,\n              disabled: editForm,\n              onChange: e => {\n                if (!editForm) {\n                  setFormData({\n                    ...formData,\n                    firstline: e.target.value // Update the value in response state\n                  });\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 947,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              label: \"Second Line\",\n              value: formData.secondline,\n              disabled: editForm,\n              onChange: e => {\n                if (!editForm) {\n                  setFormData({\n                    ...formData,\n                    secondline: e.target.value // Update the value in response state\n                  });\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              label: \"Town\",\n              value: formData.town,\n              disabled: editForm,\n              onChange: e => {\n                if (!editForm) {\n                  setFormData({\n                    ...response,\n                    town: e.target.value // Update the value in response state\n                  });\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 979,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              label: \"District\",\n              value: formData.district,\n              options: [\"Ampara\", \"Anuradhapura\", \"Badulla\", \"Batticaloa\", \"Colombo\", \"Galle\", \"Gampaha\", \"Hambantota\", \"Jaffna\", \"Kalutara\", \"Kandy\", \"Kegalle\", \"Kilinochchi\", \"Kurunegala\", \"Mannar\", \"Matale\", \"Matara\", \"Monaragala\", \"Mullaitivu\", \"Nuwara Eliya\", \"Polonnaruwa\", \"Puttalam\", \"Ratnapura\", \"Trincomalee\", \"Vavuniya\"],\n              disabled: editForm,\n              onChange: e => {\n                if (!editForm) {\n                  setFormData({\n                    ...formData,\n                    district: e // Update the value in response state\n                  });\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          label: \"mobile number\",\n          value: formData.mobile,\n          disabled: editForm,\n          onChange: e => {\n            if (!editForm) {\n              setFormData({\n                ...formData,\n                mobile: e.target.value // Update the value in response state\n              });\n            }\n          },\n\n          state: validateFormData.mobile,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 894,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 864,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfileInformation, \"v1qpYxHXOdliEpI2qT5k0pCEK40=\", false, function () {\n  return [useAxiosMethods, useAuth];\n});\n_c = ProfileInformation;\nconst Preferences = () => {\n  _s2();\n  const category = [{\n    label: 'Food & Beverage'\n  }, {\n    label: 'Technology'\n  }, {\n    label: 'App / Website'\n  }, {\n    label: 'Fitness'\n  }, {\n    label: 'Health / Wellness / Nutrition'\n  }, {\n    label: 'Sports'\n  }, {\n    label: 'Beauty'\n  }, {\n    label: 'Clothing / Fashion'\n  }, {\n    label: 'Toys / Games'\n  }, {\n    label: 'Entertainment / Experiential'\n  }, {\n    label: 'Pets'\n  }, {\n    label: 'Holiday'\n  }, {\n    label: 'Children'\n  }, {\n    label: 'Housewares / Home Design'\n  }];\n\n  //get preferences\n  const [response, setResponse] = useState([]);\n  const {\n    auth\n  } = useAuth();\n  const id = auth.id;\n  console.log(id);\n  const {\n    get\n  } = useAxiosMethods();\n  useEffect(() => {\n    get(`investors/interested-sectors-Ids/${id}`, setResponse, true);\n  }, []);\n  console.log(response);\n  const [categories, setCategories] = useState({\n    food: false,\n    technology: false,\n    app: false,\n    fitness: false,\n    healthcare: false,\n    sports: false,\n    beauty: false,\n    clothing: false,\n    toys: false,\n    entertainment: false,\n    pets: false,\n    music: false,\n    holiday: false,\n    children: false,\n    housewares: false\n  });\n  const numCategories = Object.keys(categories).length;\n  for (let i = 0; i < numCategories; i++) {\n    const index = response[i];\n    const key = Object.keys(categories)[index - 1];\n    if (key) {\n      categories[key] = true;\n    }\n  }\n  console.log(categories);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex mt-24 relative justify-center items-start w-auto rounded-2xl px-[1rem] lg:px-[5rem] py-[2rem] border border-main-purple\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Preferences\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl text-main-purple self-center\",\n        children: \"Preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-main-purple\",\n        children: \"Check the box to update your preferences.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full mt-4 py-[1rem] px-4 bg-white flex flex-col justify-center items-center  \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-[1240px] mx-auto grid md:grid-cols-3 gap-8 justify-center items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            label: \"Food & Beverage\",\n            name: \"Food & Beverage\",\n            checked: categories.food,\n            onChange: event => {\n              setCategories({\n                ...categories,\n                food: event.target.checked\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            label: \"Technology\",\n            name: \"Technology\",\n            checked: categories.technology,\n            onChange: event => {\n              setCategories({\n                ...categories,\n                technology: event.target.checked\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            label: \"App / Website\",\n            name: \"App / Website\",\n            checked: categories.app,\n            onChange: event => setCategories({\n              ...categories,\n              app: event.target.checked\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            label: \"Fitness\",\n            name: \"Fitness\",\n            checked: categories.fitness,\n            onChange: event => setCategories({\n              ...categories,\n              fitness: event.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            label: \"Health / Wellness / Nutrition\",\n            name: \"Health / Wellness / Nutrition\",\n            checked: categories.healthcare,\n            onChange: event => setCategories({\n              ...categories,\n              healthcare: event.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            label: \"Sports\",\n            name: \"Sports\",\n            checked: categories.sports,\n            onChange: event => setCategories({\n              ...categories,\n              sports: event.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            label: \"Beauty\",\n            name: \"Beauty\",\n            checked: categories.beauty,\n            onChange: event => setCategories({\n              ...categories,\n              beauty: event.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            label: \"Clothing / Fashion\",\n            name: \"Clothing / Fashion\",\n            checked: categories.clothing,\n            onChange: event => setCategories({\n              ...categories,\n              clothing: event.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            label: \"Toys / Games\",\n            name: \"Toys / Games\",\n            checked: categories.toys,\n            onChange: event => setCategories({\n              ...categories,\n              toys: event.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            label: \"Entertainment / Experiential\",\n            name: \"Entertainment / Experiential\",\n            checked: categories.entertainment,\n            onChange: event => setCategories({\n              ...categories,\n              entertainment: event.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            label: \"Pets\",\n            name: \"Pets\",\n            checked: categories.pets,\n            onChange: event => setCategories({\n              ...categories,\n              pets: event.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            label: \"Music\",\n            name: \"Music\",\n            checked: categories.music,\n            onChange: event => setCategories({\n              ...categories,\n              music: event.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            label: \"Holiday\",\n            name: \"Holiday\",\n            checked: categories.holiday,\n            onChange: event => setCategories({\n              ...categories,\n              holiday: event.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            label: \"Children\",\n            name: \"Children\",\n            checked: categories.children,\n            onChange: event => setCategories({\n              ...categories,\n              children: event.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1233,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            label: \"Housewares / Home Design\",\n            name: \"Housewares / Home Design\",\n            checked: categories.housewares,\n            onChange: event => setCategories({\n              ...categories,\n              housewares: event.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1241,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1121,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1119,\n    columnNumber: 9\n  }, this);\n};\n_s2(Preferences, \"8oSc96Ap8XiZ+CJ56TkalUMkj8k=\", false, function () {\n  return [useAuth, useAxiosMethods];\n});\n_c2 = Preferences;\nconst UpdatedDocuments = () => {\n  _s3();\n  const {\n    get\n  } = useAxiosMethods();\n  const [response, setResponse] = useState([]);\n  const [sectors, setSectors] = useState([]);\n  const [pdf, setPdf] = useState([]);\n  const [showSuccessNotification, setShowSuccessNotification] = useState(false);\n  const [showErrorNotification, setShowErrorNotification] = useState(false);\n  const {\n    id\n  } = useParams();\n  const registrationRequestDetails = {\n    policeReport: \"/assets/images/20000499.pdf\",\n    incomeStatement: \"/assets/images/20000499.pdf\"\n  };\n  useEffect(() => {\n    get(`/auth/get-investor-pdf/${id}`, setPdf);\n  }, []);\n  const pdfs = {\n    policeReport: pdf[0],\n    incomeStatement: pdf[1]\n  };\n  const handleDocumentDownload = (documentData, documentName) => {\n    const linkSource = `data:application/pdf;base64,${documentData}`;\n    const downloadLink = document.createElement(\"a\");\n    const fileName = `${documentName}.pdf`;\n    downloadLink.href = linkSource;\n    downloadLink.download = fileName;\n    downloadLink.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" mb-24 flex flex-col mt-24 relative justify-center items-start w-auto rounded-2xl px-[1rem] lg:px-[5rem] py-[2rem] border border-main-purple\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl text-main-purple self-center \",\n      children: \"Documents Uploaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1346,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row items-center w-full text-center mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"applicationNotifications w-1/2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-main-purple self-center\",\n          children: \"Bank Statement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1349,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full mt-4 py-[2rem] px-4 bg-white flex flex-col space-y-4 mr-4\",\n          children: /*#__PURE__*/_jsxDEV(\"embed\", {\n            className: \"h-[600px] w-full\",\n            src: \"/assets/documents/Bank%20Account%20Statement.pdf\",\n            type: \"application/pdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1351,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1350,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1348,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"applicationNotificationsSettings w-1/2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \" text-main-purple self-center\",\n          children: \"Police Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1360,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full mt-4 py-[2rem] px-4 bg-white flex flex-col space-y-4 mr-4\",\n          children: /*#__PURE__*/_jsxDEV(\"embed\", {\n            className: \"h-[600px] w-full\",\n            src: \"/assets/documents/clearance_application.pdf\",\n            type: \"application/pdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1362,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1361,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1359,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1347,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1293,\n    columnNumber: 9\n  }, this);\n};\n_s3(UpdatedDocuments, \"tXqH7NcsmUFIPE0qlJQClFq9als=\", false, function () {\n  return [useAxiosMethods, useParams];\n});\n_c3 = UpdatedDocuments;\nconst Profile = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ProfileInformation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1377,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Preferences, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1378,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UpdatedDocuments, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1379,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DisableAccount, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1380,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c4 = Profile;\nexport default Profile;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ProfileInformation\");\n$RefreshReg$(_c2, \"Preferences\");\n$RefreshReg$(_c3, \"UpdatedDocuments\");\n$RefreshReg$(_c4, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","Button","Checkbox","Input","Select","DisableAccount","NotificationSettings","useAxiosMethods","useAuth","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","passwordRegex","ProfileInformation","_ref","_s","formData1","setFormData1","validateFormData1","editMode","setEditMode","editForm","setEditForm","changePassword","setchangePassword","handleEditClick","handleChangePasswordClick","noHandleChangePasswordClick","get","put","handleSubmit","id","response","setResponse","auth","console","log","formData","setFormData","firstname","lastname","firstline","secondline","town","district","mobile","password","confirmPassword","firstLineAddress","secondLineAddress","contactNumber","validateFormData","setValidateFormData","disabled","setDisabled","showSuccessNotification","setShowSuccessNotification","passwordFlag","test","confirmPasswordFlag","State","Message","requiredFields","requiredFieldsFlag","every","field","validateFormDataFlag","Object","values","requestData","email","nic","gender","handleUpdateClick","JSON","stringify","status","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","label","required","color","size","ripple","onClick","value","onChange","e","target","state","options","_c","Preferences","_s2","category","categories","setCategories","food","technology","app","fitness","healthcare","sports","beauty","clothing","toys","entertainment","pets","music","holiday","housewares","numCategories","keys","length","i","index","key","name","checked","event","_c2","UpdatedDocuments","_s3","sectors","setSectors","pdf","setPdf","showErrorNotification","setShowErrorNotification","registrationRequestDetails","policeReport","incomeStatement","pdfs","handleDocumentDownload","documentData","documentName","linkSource","downloadLink","document","createElement","href","download","click","src","_c3","Profile","_c4","$RefreshReg$"],"sources":["/Users/samindu/Downloads/client/src/pages/investor/Profile.js"],"sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport {Button, Checkbox, Input, Select} from \"../webcomponent\";\r\nimport {DisableAccount, NotificationSettings} from \"../sectioncomponent\";\r\nimport useAxiosMethods from \"../../hooks/useAxiosMethods\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport {useParams} from \"react-router-dom\";\r\n//const mobileRegex=/^(?:\\+94|0)(?:\\d{9})$/;\r\nconst passwordRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).{8,}$/;\r\n\r\n// const ProfileInformation = ({formData1, setFormData1, validateFormData1}) => {\r\n//\r\n//     const [editMode, setEditMode] = useState(false);\r\n//     const [editForm, setEditForm] = useState(true);\r\n//     const [changePassword, setchangePassword] = useState(false)\r\n//     const handleEditClick = () => {\r\n//         setEditMode(true);\r\n//         setEditForm(false);\r\n//     };\r\n//     const handleChangePasswordClick = () => {\r\n//         setchangePassword(true)\r\n//     }\r\n//     const noHandleChangePasswordClick = () => {\r\n//         setchangePassword(false)\r\n//     }\r\n//     const {get,put} = useAxiosMethods();\r\n//     const handleSubmit = () => {\r\n//         setEditMode(false);\r\n//         setEditForm(true);\r\n//             put(`investors/update-details/${id})`,response,true)\r\n//     };\r\n//     //get user id\r\n//     const [ response, setResponse] = useState([]);\r\n//     const {auth} = useAuth();\r\n//     const id=auth.id;\r\n//     console.log(id);\r\n//\r\n//\r\n//     useEffect(()=>{\r\n//         get(`investors/pending-details/${id}`,setResponse, true);\r\n//     },[] )\r\n//\r\n//\r\n//\r\n//\r\n//         //const {id} = useParams();\r\n//\r\n//         // useEffect(() => {\r\n//         //     get(`/investor/update/view/${id}`, setResponse, true);\r\n//         // }, []);\r\n//         // console.log(response)\r\n//\r\n//         const [formData, setFormData] = useState({\r\n//             firstname: \"\",\r\n//             lastname: \"\",\r\n//             firstline: \"\",\r\n//             secondline: \"\",\r\n//             town: \"\",\r\n//             district: \"\",\r\n//             mobile: \"\",\r\n//             password: \"\",\r\n//             confirmPassword: \"\",\r\n//         });\r\n//\r\n//         useEffect(() => {\r\n//             setFormData({\r\n//                 ...formData,\r\n//                 firstname: response.firstname,\r\n//                 lastname: response.lastname,\r\n//                 firstline: response.firstLineAddress,\r\n//                 secondline: response.secondLineAddress,\r\n//                 town: response.town,\r\n//                 district: response.district,\r\n//                 mobile: response.contactNumber,\r\n//                 password: response.password,\r\n//                 confirmPassword: response.password,\r\n//             })\r\n//\r\n//         }, [response]);\r\n//\r\n//         const [validateFormData, setValidateFormData] = useState({\r\n//             firstname: {\"State\": \"\", \"Message\": \"\"},\r\n//             lastname: {\"State\": \"\", \"Message\": \"\"},\r\n//             firstline: {\"State\": \"\", \"Message\": \"\"},\r\n//             secondline: {\"State\": \"\", \"Message\": \"\"},\r\n//             town: {\"State\": \"\", \"Message\": \"\"},\r\n//             district: {\"State\": \"\", \"Message\": \"\"},\r\n//             mobile: {\"State\": \"\", \"Message\": \"\"},\r\n//             password: {\"State\": \"\", \"Message\": \"\"},\r\n//             confirmPassword: {\"State\": \"\", \"Message\": \"\"}\r\n//         });\r\n//\r\n//         const [disabled, setDisabled] = useState(true);\r\n//\r\n//         const [showSuccessNotification, setShowSuccessNotification] = useState(false);\r\n//\r\n//         useEffect(() => {\r\n//             //let mobileFlag = mobileRegex.test(formData.mobile);\r\n//             let passwordFlag = passwordRegex.test(formData.password);\r\n//             let confirmPasswordFlag = formData.password === formData.confirmPassword;\r\n//\r\n//             setValidateFormData({\r\n//                 password: {\r\n//                     State: passwordFlag || !formData.password ? \"Valid\" : \"Invalid\",\r\n//                     Message: passwordFlag || !formData.password ? \"\" : \"Password must contain at least 8 characters, one uppercase, one lowercase and one number\"\r\n//                 },\r\n//                 confirmPassword: {\r\n//                     State: confirmPasswordFlag || !formData.confirmPassword ? \"Valid\" : \"Invalid\",\r\n//                     Message: confirmPasswordFlag || !formData.confirmPassword ? \"\" : \"Passwords do not match\"\r\n//                 }\r\n//             });\r\n//         }, [formData.password, formData.confirmPassword]);\r\n//\r\n//\r\n//         //check all fields are valid and required fields are not empty\r\n//         const [requiredFields] = useState([\r\n//             \"firstname\",\r\n//             \"lastname\",\r\n//             \"firstline\",\r\n//             \"secondline\",\r\n//             \"town\",\r\n//             \"district\",\r\n//             \"mobile\",\r\n//             \"password\",\r\n//             \"confirmPassword\"\r\n//         ]);\r\n//\r\n//         useEffect(() => {\r\n//             let requiredFieldsFlag = requiredFields.every((field) => formData[field] !== \"\");\r\n//\r\n//             let validateFormDataFlag = Object.values(validateFormData).every((field) => field.State === \"Valid\");\r\n//\r\n//             setDisabled(!(requiredFieldsFlag && validateFormDataFlag));\r\n//         }, [formData, requiredFields, validateFormData]);\r\n//\r\n//\r\n//         const requestData = {\r\n//             firstname: formData.firstname,\r\n//             lastname: formData.lastname,\r\n//             firstLineAddress: formData.firstline,\r\n//             secondLineAddress: formData.secondline,\r\n//             town: formData.town,\r\n//             district: formData.district,\r\n//             email: formData.email,\r\n//             nic: formData.nic,\r\n//             gender: formData.gender,\r\n//             contactNumber: formData.mobile,\r\n//             password: formData.password,\r\n//         }\r\n//\r\n//\r\n//     const handleUpdateClick =  () => {\r\n//         setEditMode(false);\r\n//         setEditForm(true);\r\n//         try {\r\n//             const response =  put(`/investors/update/${id}`, JSON.stringify(requestData), setResponse\r\n//             );\r\n//\r\n//             if (response.status === 200) {\r\n//                 console.log('investor updated successfully');\r\n//\r\n//             } else {\r\n//                 console.error('Update failed');\r\n//\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('An error occurred:', error);\r\n//\r\n//         }\r\n//     };\r\n//     return (\r\n//         <div\r\n//             className='flex mt-24 relative justify-center items-start w-auto rounded-2xl py-[2rem] border border-main-purple'>\r\n//             {changePassword ? (\r\n//                 /* Display change password form */\r\n//                 <div>\r\n//                     <h1 className=\"text-2xl text-main-purple mb-6\">Change Password</h1>\r\n//                     <div className=\"flex flex-col gap-6 items-center mb-1 \">\r\n//                         <Input\r\n//                             type=\"password\"\r\n//                             label=\"Enter Current Password\"\r\n//                             required\r\n//                         />\r\n//                         <Input\r\n//                             type=\"password\"\r\n//                             label=\"Enter New Password\"\r\n//                             required\r\n//                         />\r\n//                         <Input\r\n//                             type=\"password\"\r\n//                             label=\"Confirm New Password\"\r\n//                             required\r\n//                         />\r\n//                         <div className=\"row\">\r\n//                             <Button color=\"purple\" size=\"sm\" ripple={true} type='submit'\r\n//                                     onClick={noHandleChangePasswordClick}>back</Button>\r\n//                             <Button color=\"purple\" size=\"sm\" ripple={true} type='submit'>Submit</Button>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             ) : (\r\n//                 <div className=\"ProfileInfo\">\r\n//                     <div className=\"flex justify-between\">\r\n//                         <h1 className=\"text-2xl text-main-purple\">Profile Information</h1>\r\n//                         {editMode ? (\r\n//                             <Button color=\"purple\" ripple={true} onClick={handleUpdateClick}>Submit</Button>\r\n//                         ) : (\r\n//                             <Button color=\"purple\" ripple={true} onClick={handleEditClick}>Edit</Button>\r\n//                         )}\r\n//                     </div>\r\n//                     <div className=\"mt-6\">\r\n//                         <div className=\"row\">\r\n//                             <Input\r\n//                                 type=\"text\"\r\n//                                 label=\"First Name\"\r\n//                                 value={formData.firstname}\r\n//                                 disabled={editForm}\r\n//                                 onChange={(e) => {\r\n//                                     if (!editForm) {\r\n//                                         setFormData({\r\n//                                             ...formData,\r\n//                                             firstname: e.target.value, // Update the value in response state\r\n//                                         });\r\n//                                     }\r\n//\r\n//                                 }}\r\n//                                 state={validateFormData.firstname}\r\n//                                 required={true}\r\n//                             />\r\n//                             <Input\r\n//                                 type=\"text\"\r\n//                                 label=\"Last name\"\r\n//                                 value={formData.lastname}\r\n//                                 disabled={editForm}\r\n//                                 onChange={(e) => {\r\n//                                     if (!editForm) {\r\n//                                         setFormData({\r\n//                                             ...formData,\r\n//                                             lastname: e.target.value, // Update the value in response state\r\n//                                         });\r\n//                                     }\r\n//                                 }}\r\n//                                     state={validateFormData.lastname}\r\n//                                     required={true}\r\n//\r\n//                             />\r\n//\r\n//                         </div>\r\n//\r\n//\r\n//                         <fieldset className='p-2 border-[1px] mb-[1rem] rounded-2xl border-light-purple'>\r\n//                             <legend className=\"bg-white px-[1rem] text-light-purple relative left-[0.1rem]\">Address\r\n//                             </legend>\r\n//                             <div className=\"row\">\r\n//                                 <Input\r\n//                                     type=\"text\"\r\n//                                     label=\"First Line\"\r\n//                                     value={formData.firstline}\r\n//                                     disabled={editForm}\r\n//                                     onChange={(e) => {\r\n//                                         if (!editForm) {\r\n//                                             setFormData({\r\n//                                                 ...formData,\r\n//                                                 firstline: e.target.value, // Update the value in response state\r\n//                                             });\r\n//                                         }\r\n//                                     }}\r\n//                                 />\r\n//                                 <Input\r\n//                                     type=\"text\"\r\n//                                     label=\"Second Line\"\r\n//                                     value={formData.secondline}\r\n//                                     disabled={editForm}\r\n//                                     onChange={(e) => {\r\n//                                         if (!editForm) {\r\n//                                             setFormData({\r\n//                                                 ...formData,\r\n//                                                 secondline: e.target.value, // Update the value in response state\r\n//                                             });\r\n//                                         }\r\n//                                     }}\r\n//                                 />\r\n//                             </div>\r\n//\r\n//\r\n//                             <div className=\"row\">\r\n//                                 <Input\r\n//                                     type=\"text\"\r\n//                                     label=\"Town\"\r\n//                                     value={formData.town}\r\n//                                     disabled={editForm}\r\n//                                     onChange={(e) => {\r\n//                                         if (!editForm) {\r\n//                                             setFormData({\r\n//                                                 ...response,\r\n//                                                 town: e.target.value, // Update the value in response state\r\n//                                             });\r\n//                                         }\r\n//                                     }}\r\n//                                 />\r\n//                                 <Select\r\n//                                     label=\"District\"\r\n//                                     value={formData.district}\r\n//                                     options={[\"Ampara\",\r\n//                                         \"Anuradhapura\",\r\n//                                         \"Badulla\",\r\n//                                         \"Batticaloa\",\r\n//                                         \"Colombo\",\r\n//                                         \"Galle\",\r\n//                                         \"Gampaha\",\r\n//                                         \"Hambantota\",\r\n//                                         \"Jaffna\",\r\n//                                         \"Kalutara\",\r\n//                                         \"Kandy\",\r\n//                                         \"Kegalle\",\r\n//                                         \"Kilinochchi\",\r\n//                                         \"Kurunegala\",\r\n//                                         \"Mannar\",\r\n//                                         \"Matale\",\r\n//                                         \"Matara\",\r\n//                                         \"Monaragala\",\r\n//                                         \"Mullaitivu\",\r\n//                                         \"Nuwara Eliya\",\r\n//                                         \"Polonnaruwa\",\r\n//                                         \"Puttalam\",\r\n//                                         \"Ratnapura\",\r\n//                                         \"Trincomalee\",\r\n//                                         \"Vavuniya\"]}\r\n//                                     disabled={editForm}\r\n//                                     onChange={(e) => {\r\n//                                         if (!editForm) {\r\n//                                             setFormData({\r\n//                                                 ...formData,\r\n//                                                 district: e, // Update the value in response state\r\n//                                             });\r\n//                                         }\r\n//                                     }}\r\n//                                 />\r\n//                             </div>\r\n//                         </fieldset>\r\n//\r\n//                             <Input\r\n//                                 type=\"text\"\r\n//                                 label=\"mobile number\"\r\n//                                 value={formData.mobile}\r\n//                                 disabled={editForm}\r\n//                                 onChange={(e) => {\r\n//                                     if (!editForm) {\r\n//                                         setFormData({\r\n//                                             ...formData,\r\n//                                             mobile: e.target.value, // Update the value in response state\r\n//                                         });\r\n//                                     }\r\n//                                 }}\r\n//                                 state={validateFormData.mobile}\r\n//                                 required={true}\r\n//                             />\r\n//                         </div>\r\n//                     {/*<button className=\"text-sm text-main-purple\" onClick={handleChangePasswordClick}>Change Password*/}\r\n//                     {/*</button>*/}\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     )\r\n// }\r\n// const ProfileInformation = ({formData1, setFormData1, validateFormData1}) => {\r\n//\r\n//     const [editMode, setEditMode] = useState(false);\r\n//     const [editForm, setEditForm] = useState(true);\r\n//     const [changePassword, setchangePassword] = useState(false)\r\n//     const handleEditClick = () => {\r\n//         setEditMode(true);\r\n//         setEditForm(false);\r\n//     };\r\n//     const handleChangePasswordClick = () => {\r\n//         setchangePassword(true)\r\n//     }\r\n//     const noHandleChangePasswordClick = () => {\r\n//         setchangePassword(false)\r\n//     }\r\n//     const {get,put} = useAxiosMethods();\r\n//     const handleSubmit = () => {\r\n//         setEditMode(false);\r\n//         setEditForm(true);\r\n//         put(`investors/update-details/${id})`,response,true)\r\n//     };\r\n//     //get user id\r\n//     const [ response, setResponse] = useState([]);\r\n//     const {auth} = useAuth();\r\n//     const id=auth.id;\r\n//     console.log(id);\r\n//\r\n//\r\n//     useEffect(()=>{\r\n//         get(`investors/pending-details/${id}`,setResponse, true);\r\n//     },[] )\r\n//\r\n//\r\n//     const [formData, setFormData] = useState({\r\n//         firstname: \"\",\r\n//         lastname: \"\",\r\n//         firstline: \"\",\r\n//         secondline: \"\",\r\n//         town: \"\",\r\n//         district: \"\",\r\n//         mobile: \"\",\r\n//         password: \"\",\r\n//         confirmPassword: \"\",\r\n//     });\r\n//\r\n//     useEffect(() => {\r\n//         setFormData({\r\n//             ...formData,\r\n//             firstname: response.firstname,\r\n//             lastname: response.lastname,\r\n//             firstline: response.firstLineAddress,\r\n//             secondline: response.secondLineAddress,\r\n//             town: response.town,\r\n//             district: response.district,\r\n//             mobile: response.contactNumber,\r\n//             password: response.password,\r\n//             confirmPassword: response.password,\r\n//         })\r\n//\r\n//     }, [response]);\r\n//\r\n//     const [validateFormData, setValidateFormData] = useState({\r\n//         firstname: {\"State\": \"\", \"Message\": \"\"},\r\n//         lastname: {\"State\": \"\", \"Message\": \"\"},\r\n//         firstline: {\"State\": \"\", \"Message\": \"\"},\r\n//         secondline: {\"State\": \"\", \"Message\": \"\"},\r\n//         town: {\"State\": \"\", \"Message\": \"\"},\r\n//         district: {\"State\": \"\", \"Message\": \"\"},\r\n//         mobile: {\"State\": \"\", \"Message\": \"\"},\r\n//         password: {\"State\": \"\", \"Message\": \"\"},\r\n//         confirmPassword: {\"State\": \"\", \"Message\": \"\"}\r\n//     });\r\n//\r\n//     const [disabled, setDisabled] = useState(true);\r\n//\r\n//     const [showSuccessNotification, setShowSuccessNotification] = useState(false);\r\n//\r\n//     useEffect(() => {\r\n//         //let mobileFlag = mobileRegex.test(formData.mobile);\r\n//         let passwordFlag = passwordRegex.test(formData.password);\r\n//         let confirmPasswordFlag = formData.password === formData.confirmPassword;\r\n//\r\n//         setValidateFormData({\r\n//             password: {\r\n//                 State: passwordFlag || !formData.password ? \"Valid\" : \"Invalid\",\r\n//                 Message: passwordFlag || !formData.password ? \"\" : \"Password must contain at least 8 characters, one uppercase, one lowercase and one number\"\r\n//             },\r\n//             confirmPassword: {\r\n//                 State: confirmPasswordFlag || !formData.confirmPassword ? \"Valid\" : \"Invalid\",\r\n//                 Message: confirmPasswordFlag || !formData.confirmPassword ? \"\" : \"Passwords do not match\"\r\n//             }\r\n//         });\r\n//     }, [formData.password, formData.confirmPassword]);\r\n//\r\n//\r\n//     //check all fields are valid and required fields are not empty\r\n//     const [requiredFields] = useState([\r\n//         \"firstname\",\r\n//         \"lastname\",\r\n//         \"firstline\",\r\n//         \"secondline\",\r\n//         \"town\",\r\n//         \"district\",\r\n//         \"mobile\",\r\n//         \"password\",\r\n//         \"confirmPassword\"\r\n//     ]);\r\n//\r\n//     useEffect(() => {\r\n//         let requiredFieldsFlag = requiredFields.every((field) => formData[field] !== \"\");\r\n//\r\n//         let validateFormDataFlag = Object.values(validateFormData).every((field) => field.State === \"Valid\");\r\n//\r\n//         setDisabled(!(requiredFieldsFlag && validateFormDataFlag));\r\n//     }, [formData, requiredFields, validateFormData]);\r\n//\r\n//\r\n//     const requestData = {\r\n//         firstname: formData.firstname,\r\n//         lastname: formData.lastname,\r\n//         firstLineAddress: formData.firstline,\r\n//         secondLineAddress: formData.secondline,\r\n//         town: formData.town,\r\n//         district: formData.district,\r\n//         email: formData.email,\r\n//         nic: formData.nic,\r\n//         gender: formData.gender,\r\n//         contactNumber: formData.mobile,\r\n//         password: formData.password,\r\n//     }\r\n//\r\n//\r\n//     const handleUpdateClick =  () => {\r\n//         setEditMode(false);\r\n//         setEditForm(true);\r\n//         try {\r\n//             const response =  put(`/investors/update/${id}`, JSON.stringify(requestData), setResponse\r\n//             );\r\n//\r\n//             if (response.status === 200) {\r\n//                 console.log('investor updated successfully');\r\n//\r\n//             } else {\r\n//                 console.error('Update failed');\r\n//\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('An error occurred:', error);\r\n//\r\n//         }\r\n//     };\r\n//     return (\r\n//         <div\r\n//             className='flex mt-24 relative justify-center items-start w-auto rounded-2xl py-[2rem] border border-main-purple'>\r\n//             {changePassword ? (\r\n//                 /* Display change password form */\r\n//                 <div>\r\n//                     <h1 className=\"text-2xl text-main-purple mb-6\">Change Password</h1>\r\n//                     <div className=\"flex flex-col gap-6 items-center mb-1 \">\r\n//                         <Input\r\n//                             type=\"password\"\r\n//                             label=\"Enter Current Password\"\r\n//                             required\r\n//                         />\r\n//                         <Input\r\n//                             type=\"password\"\r\n//                             label=\"Enter New Password\"\r\n//                             required\r\n//                         />\r\n//                         <Input\r\n//                             type=\"password\"\r\n//                             label=\"Confirm New Password\"\r\n//                             required\r\n//                         />\r\n//                         <div className=\"row\">\r\n//                             <Button color=\"purple\" size=\"sm\" ripple={true} type='submit'\r\n//                                     onClick={noHandleChangePasswordClick}>back</Button>\r\n//                             <Button color=\"purple\" size=\"sm\" ripple={true} type='submit'>Submit</Button>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             ) : (\r\n//                 <div className=\"ProfileInfo\">\r\n//                     <div className=\"flex justify-between\">\r\n//                         <h1 className=\"text-2xl text-main-purple\">Profile Information</h1>\r\n//                         {editMode ? (\r\n//                             <Button color=\"purple\" ripple={true} onClick={handleUpdateClick}>Submit</Button>\r\n//                         ) : (\r\n//                             <Button color=\"purple\" ripple={true} onClick={handleEditClick}>Edit</Button>\r\n//                         )}\r\n//                     </div>\r\n//                     <div className=\"mt-6\">\r\n//                         <div className=\"row\">\r\n//                             <Input\r\n//                                 type=\"text\"\r\n//                                 label=\"First Name\"\r\n//                                 value={formData.firstname}\r\n//                                 disabled={editForm}\r\n//                                 onChange={(e) => {\r\n//                                     if (!editForm) {\r\n//                                         setFormData({\r\n//                                             ...formData,\r\n//                                             firstname: e.target.value, // Update the value in response state\r\n//                                         });\r\n//                                     }\r\n//\r\n//                                 }}\r\n//                                 state={validateFormData.firstname}\r\n//                                 required={true}\r\n//                             />\r\n//                             <Input\r\n//                                 type=\"text\"\r\n//                                 label=\"Last name\"\r\n//                                 value={formData.lastname}\r\n//                                 disabled={editForm}\r\n//                                 onChange={(e) => {\r\n//                                     if (!editForm) {\r\n//                                         setFormData({\r\n//                                             ...formData,\r\n//                                             lastname: e.target.value, // Update the value in response state\r\n//                                         });\r\n//                                     }\r\n//                                 }}\r\n//                                 state={validateFormData.lastname}\r\n//                                 required={true}\r\n//\r\n//                             />\r\n//\r\n//                         </div>\r\n//\r\n//\r\n//                         <fieldset className='p-2 border-[1px] mb-[1rem] rounded-2xl border-light-purple'>\r\n//                             <legend className=\"bg-white px-[1rem] text-light-purple relative left-[0.1rem]\">Address\r\n//                             </legend>\r\n//                             <div className=\"row\">\r\n//                                 <Input\r\n//                                     type=\"text\"\r\n//                                     label=\"First Line\"\r\n//                                     value={formData.firstline}\r\n//                                     disabled={editForm}\r\n//                                     onChange={(e) => {\r\n//                                         if (!editForm) {\r\n//                                             setFormData({\r\n//                                                 ...formData,\r\n//                                                 firstline: e.target.value, // Update the value in response state\r\n//                                             });\r\n//                                         }\r\n//                                     }}\r\n//                                 />\r\n//                                 <Input\r\n//                                     type=\"text\"\r\n//                                     label=\"Second Line\"\r\n//                                     value={formData.secondline}\r\n//                                     disabled={editForm}\r\n//                                     onChange={(e) => {\r\n//                                         if (!editForm) {\r\n//                                             setFormData({\r\n//                                                 ...formData,\r\n//                                                 secondline: e.target.value, // Update the value in response state\r\n//                                             });\r\n//                                         }\r\n//                                     }}\r\n//                                 />\r\n//                             </div>\r\n//\r\n//\r\n//                             <div className=\"row\">\r\n//                                 <Input\r\n//                                     type=\"text\"\r\n//                                     label=\"Town\"\r\n//                                     value={formData.town}\r\n//                                     disabled={editForm}\r\n//                                     onChange={(e) => {\r\n//                                         if (!editForm) {\r\n//                                             setFormData({\r\n//                                                 ...response,\r\n//                                                 town: e.target.value, // Update the value in response state\r\n//                                             });\r\n//                                         }\r\n//                                     }}\r\n//                                 />\r\n//                                 <Select\r\n//                                     label=\"District\"\r\n//                                     value={formData.district}\r\n//                                     options={[\"Ampara\",\r\n//                                         \"Anuradhapura\",\r\n//                                         \"Badulla\",\r\n//                                         \"Batticaloa\",\r\n//                                         \"Colombo\",\r\n//                                         \"Galle\",\r\n//                                         \"Gampaha\",\r\n//                                         \"Hambantota\",\r\n//                                         \"Jaffna\",\r\n//                                         \"Kalutara\",\r\n//                                         \"Kandy\",\r\n//                                         \"Kegalle\",\r\n//                                         \"Kilinochchi\",\r\n//                                         \"Kurunegala\",\r\n//                                         \"Mannar\",\r\n//                                         \"Matale\",\r\n//                                         \"Matara\",\r\n//                                         \"Monaragala\",\r\n//                                         \"Mullaitivu\",\r\n//                                         \"Nuwara Eliya\",\r\n//                                         \"Polonnaruwa\",\r\n//                                         \"Puttalam\",\r\n//                                         \"Ratnapura\",\r\n//                                         \"Trincomalee\",\r\n//                                         \"Vavuniya\"]}\r\n//                                     disabled={editForm}\r\n//                                     onChange={(e) => {\r\n//                                         if (!editForm) {\r\n//                                             setFormData({\r\n//                                                 ...formData,\r\n//                                                 district: e, // Update the value in response state\r\n//                                             });\r\n//                                         }\r\n//                                     }}\r\n//                                 />\r\n//                             </div>\r\n//                         </fieldset>\r\n//\r\n//                         <Input\r\n//                             type=\"text\"\r\n//                             label=\"mobile number\"\r\n//                             value={formData.mobile}\r\n//                             disabled={editForm}\r\n//                             onChange={(e) => {\r\n//                                 if (!editForm) {\r\n//                                     setFormData({\r\n//                                         ...formData,\r\n//                                         mobile: e.target.value, // Update the value in response state\r\n//                                     });\r\n//                                 }\r\n//                             }}\r\n//                             state={validateFormData.mobile}\r\n//                             required={true}\r\n//                         />\r\n//                     </div>\r\n//                     {/*<button className=\"text-sm text-main-purple\" onClick={handleChangePasswordClick}>Change Password*/}\r\n//                     {/*</button>*/}\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nconst ProfileInformation = ({formData1, setFormData1, validateFormData1}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [editForm, setEditForm] = useState(true);\r\n    const [changePassword, setchangePassword] = useState(false)\r\n    const handleEditClick = () => {\r\n        setEditMode(true);\r\n        setEditForm(false);\r\n    };\r\n    const handleChangePasswordClick = () => {\r\n        setchangePassword(true)\r\n    }\r\n    const noHandleChangePasswordClick = () => {\r\n        setchangePassword(false)\r\n    }\r\n    const {get,put} = useAxiosMethods();\r\n    const handleSubmit = () => {\r\n        setEditMode(false);\r\n        setEditForm(true);\r\n        put(`investors/update-details/${id})`,response,true)\r\n    };\r\n    //get user id\r\n    const [ response, setResponse] = useState([]);\r\n    const {auth} = useAuth();\r\n    const id=auth.id;\r\n    console.log(id);\r\n\r\n\r\n    useEffect(()=>{\r\n        get(`investors/pending-details/${id}`,setResponse, true);\r\n    },[] )\r\n\r\n\r\n    const [formData, setFormData] = useState({\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        firstline: \"\",\r\n        secondline: \"\",\r\n        town: \"\",\r\n        district: \"\",\r\n        mobile: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        setFormData({\r\n            ...formData,\r\n            firstname: response.firstname,\r\n            lastname: response.lastname,\r\n            firstline: response.firstLineAddress,\r\n            secondline: response.secondLineAddress,\r\n            town: response.town,\r\n            district: response.district,\r\n            mobile: response.contactNumber,\r\n            password: response.password,\r\n            confirmPassword: response.password,\r\n        })\r\n\r\n    }, [response]);\r\n\r\n    const [validateFormData, setValidateFormData] = useState({\r\n        firstname: {\"State\": \"\", \"Message\": \"\"},\r\n        lastname: {\"State\": \"\", \"Message\": \"\"},\r\n        firstline: {\"State\": \"\", \"Message\": \"\"},\r\n        secondline: {\"State\": \"\", \"Message\": \"\"},\r\n        town: {\"State\": \"\", \"Message\": \"\"},\r\n        district: {\"State\": \"\", \"Message\": \"\"},\r\n        mobile: {\"State\": \"\", \"Message\": \"\"},\r\n        password: {\"State\": \"\", \"Message\": \"\"},\r\n        confirmPassword: {\"State\": \"\", \"Message\": \"\"}\r\n    });\r\n\r\n    const [disabled, setDisabled] = useState(true);\r\n\r\n    const [showSuccessNotification, setShowSuccessNotification] = useState(false);\r\n\r\n    useEffect(() => {\r\n        //let mobileFlag = mobileRegex.test(formData.mobile);\r\n        let passwordFlag = passwordRegex.test(formData.password);\r\n        let confirmPasswordFlag = formData.password === formData.confirmPassword;\r\n\r\n        setValidateFormData({\r\n            password: {\r\n                State: passwordFlag || !formData.password ? \"Valid\" : \"Invalid\",\r\n                Message: passwordFlag || !formData.password ? \"\" : \"Password must contain at least 8 characters, one uppercase, one lowercase and one number\"\r\n            },\r\n            confirmPassword: {\r\n                State: confirmPasswordFlag || !formData.confirmPassword ? \"Valid\" : \"Invalid\",\r\n                Message: confirmPasswordFlag || !formData.confirmPassword ? \"\" : \"Passwords do not match\"\r\n            }\r\n        });\r\n    }, [formData.password, formData.confirmPassword]);\r\n\r\n\r\n    //check all fields are valid and required fields are not empty\r\n    const [requiredFields] = useState([\r\n        \"firstname\",\r\n        \"lastname\",\r\n        \"firstline\",\r\n        \"secondline\",\r\n        \"town\",\r\n        \"district\",\r\n        \"mobile\",\r\n        \"password\",\r\n        \"confirmPassword\"\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        let requiredFieldsFlag = requiredFields.every((field) => formData[field] !== \"\");\r\n\r\n        let validateFormDataFlag = Object.values(validateFormData).every((field) => field.State === \"Valid\");\r\n\r\n        setDisabled(!(requiredFieldsFlag && validateFormDataFlag));\r\n    }, [formData, requiredFields, validateFormData]);\r\n\r\n\r\n    const requestData = {\r\n        firstname: formData.firstname,\r\n        lastname: formData.lastname,\r\n        firstLineAddress: formData.firstline,\r\n        secondLineAddress: formData.secondline,\r\n        town: formData.town,\r\n        district: formData.district,\r\n        email: formData.email,\r\n        nic: formData.nic,\r\n        gender: formData.gender,\r\n        contactNumber: formData.mobile,\r\n        password: formData.password,\r\n    }\r\n\r\n\r\n    const handleUpdateClick =  () => {\r\n        setEditMode(false);\r\n        setEditForm(true);\r\n        try {\r\n            const response =  put(`/investors/update/${id}`, JSON.stringify(requestData), setResponse\r\n            );\r\n\r\n            if (response.status === 200) {\r\n                console.log('investor updated successfully');\r\n\r\n            } else {\r\n                console.error('Update failed');\r\n\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred:', error);\r\n\r\n        }\r\n    };\r\n    return (\r\n        <div\r\n            className='flex mt-24 relative justify-center items-start w-auto rounded-2xl py-[2rem] border border-main-purple'>\r\n            {changePassword ? (\r\n                /* Display change password form */\r\n                <div>\r\n                    <h1 className=\"text-2xl text-main-purple mb-6\">Change Password</h1>\r\n                    <div className=\"flex flex-col gap-6 items-center mb-1 \">\r\n                        <Input\r\n                            type=\"password\"\r\n                            label=\"Enter Current Password\"\r\n                            required\r\n                        />\r\n                        <Input\r\n                            type=\"password\"\r\n                            label=\"Enter New Password\"\r\n                            required\r\n                        />\r\n                        <Input\r\n                            type=\"password\"\r\n                            label=\"Confirm New Password\"\r\n                            required\r\n                        />\r\n                        <div className=\"row\">\r\n                            <Button color=\"purple\" size=\"sm\" ripple={true} type='submit'\r\n                                    onClick={noHandleChangePasswordClick}>back</Button>\r\n                            <Button color=\"purple\" size=\"sm\" ripple={true} type='submit'>Submit</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"ProfileInfo\">\r\n                    <div className=\"flex justify-between\">\r\n                        <h1 className=\"text-2xl text-main-purple\">Profile Information</h1>\r\n                        {editMode ? (\r\n                            <Button color=\"purple\" ripple={true} onClick={handleUpdateClick}>Submit</Button>\r\n                        ) : (\r\n                            <Button color=\"purple\" ripple={true} onClick={handleEditClick}>Edit</Button>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"mt-6\">\r\n                        <div className=\"row\">\r\n                            <Input\r\n                                type=\"text\"\r\n                                label=\"First Name\"\r\n                                value={formData.firstname}\r\n                                disabled={editForm}\r\n                                onChange={(e) => {\r\n                                    if (!editForm) {\r\n                                        setFormData({\r\n                                            ...formData,\r\n                                            firstname: e.target.value, // Update the value in response state\r\n                                        });\r\n                                    }\r\n\r\n                                }}\r\n                                state={validateFormData.firstname}\r\n                                required={true}\r\n                            />\r\n                            <Input\r\n                                type=\"text\"\r\n                                label=\"Last name\"\r\n                                value={formData.lastname}\r\n                                disabled={editForm}\r\n                                onChange={(e) => {\r\n                                    if (!editForm) {\r\n                                        setFormData({\r\n                                            ...formData,\r\n                                            lastname: e.target.value, // Update the value in response state\r\n                                        });\r\n                                    }\r\n                                }}\r\n                                state={validateFormData.lastname}\r\n                                required={true}\r\n\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n                        <fieldset className='p-2 border-[1px] mb-[1rem] rounded-2xl border-light-purple'>\r\n                            <legend className=\"bg-white px-[1rem] text-light-purple relative left-[0.1rem]\">Address\r\n                            </legend>\r\n                            <div className=\"row\">\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    label=\"First Line\"\r\n                                    value={formData.firstline}\r\n                                    disabled={editForm}\r\n                                    onChange={(e) => {\r\n                                        if (!editForm) {\r\n                                            setFormData({\r\n                                                ...formData,\r\n                                                firstline: e.target.value, // Update the value in response state\r\n                                            });\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    label=\"Second Line\"\r\n                                    value={formData.secondline}\r\n                                    disabled={editForm}\r\n                                    onChange={(e) => {\r\n                                        if (!editForm) {\r\n                                            setFormData({\r\n                                                ...formData,\r\n                                                secondline: e.target.value, // Update the value in response state\r\n                                            });\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    label=\"Town\"\r\n                                    value={formData.town}\r\n                                    disabled={editForm}\r\n                                    onChange={(e) => {\r\n                                        if (!editForm) {\r\n                                            setFormData({\r\n                                                ...response,\r\n                                                town: e.target.value, // Update the value in response state\r\n                                            });\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                <Select\r\n                                    label=\"District\"\r\n                                    value={formData.district}\r\n                                    options={[\"Ampara\",\r\n                                        \"Anuradhapura\",\r\n                                        \"Badulla\",\r\n                                        \"Batticaloa\",\r\n                                        \"Colombo\",\r\n                                        \"Galle\",\r\n                                        \"Gampaha\",\r\n                                        \"Hambantota\",\r\n                                        \"Jaffna\",\r\n                                        \"Kalutara\",\r\n                                        \"Kandy\",\r\n                                        \"Kegalle\",\r\n                                        \"Kilinochchi\",\r\n                                        \"Kurunegala\",\r\n                                        \"Mannar\",\r\n                                        \"Matale\",\r\n                                        \"Matara\",\r\n                                        \"Monaragala\",\r\n                                        \"Mullaitivu\",\r\n                                        \"Nuwara Eliya\",\r\n                                        \"Polonnaruwa\",\r\n                                        \"Puttalam\",\r\n                                        \"Ratnapura\",\r\n                                        \"Trincomalee\",\r\n                                        \"Vavuniya\"]}\r\n                                    disabled={editForm}\r\n                                    onChange={(e) => {\r\n                                        if (!editForm) {\r\n                                            setFormData({\r\n                                                ...formData,\r\n                                                district: e, // Update the value in response state\r\n                                            });\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </fieldset>\r\n\r\n                        <Input\r\n                            type=\"text\"\r\n                            label=\"mobile number\"\r\n                            value={formData.mobile}\r\n                            disabled={editForm}\r\n                            onChange={(e) => {\r\n                                if (!editForm) {\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        mobile: e.target.value, // Update the value in response state\r\n                                    });\r\n                                }\r\n                            }}\r\n                            state={validateFormData.mobile}\r\n                            required={true}\r\n                        />\r\n                    </div>\r\n                    {/*<button className=\"text-sm text-main-purple\" onClick={handleChangePasswordClick}>Change Password*/}\r\n                    {/*</button>*/}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nconst Preferences = () =>{\r\n\r\n    const category = [\r\n        {label: 'Food & Beverage'},\r\n        {label: 'Technology'},\r\n        {label: 'App / Website'},\r\n        {label: 'Fitness'},\r\n        {label: 'Health / Wellness / Nutrition'},\r\n        {label: 'Sports'},\r\n        {label: 'Beauty'},\r\n        {label: 'Clothing / Fashion'},\r\n        {label: 'Toys / Games'},\r\n        {label: 'Entertainment / Experiential'},\r\n        {label: 'Pets'},\r\n        {label: 'Holiday'},\r\n        {label: 'Children'},\r\n        {label: 'Housewares / Home Design'},\r\n    ];\r\n\r\n    //get preferences\r\n    const [ response, setResponse] = useState([]);\r\n    const {auth} = useAuth();\r\n    const id=auth.id;\r\n    console.log(id);\r\n\r\n    const {get} = useAxiosMethods();\r\n    useEffect(()=>{\r\n        get(`investors/interested-sectors-Ids/${id}`,setResponse, true);\r\n    },[] )\r\n    console.log(response)\r\n\r\n    const [categories, setCategories] = useState({\r\n        food: false,\r\n        technology: false,\r\n        app: false,\r\n        fitness: false,\r\n        healthcare: false,\r\n        sports: false,\r\n        beauty: false,\r\n        clothing: false,\r\n        toys: false,\r\n        entertainment: false,\r\n        pets: false,\r\n        music: false,\r\n        holiday: false,\r\n        children: false,\r\n        housewares: false,\r\n    });\r\n    const numCategories = Object.keys(categories).length;\r\n    for (let i = 0; i < numCategories; i++) {\r\n        const index = response[i];\r\n        const key = Object.keys(categories)[index - 1];\r\n        if (key) {\r\n            categories[key] = true;\r\n        }\r\n    }\r\n    console.log(categories)\r\n\r\n\r\n\r\n    return (\r\n        <div\r\n            className='flex mt-24 relative justify-center items-start w-auto rounded-2xl px-[1rem] lg:px-[5rem] py-[2rem] border border-main-purple'>\r\n            <div className=\"Preferences\">\r\n                <h1 className=\"text-2xl text-main-purple self-center\">Preferences</h1>\r\n                <p className=\"text-sm text-main-purple\">Check the box to update your preferences.</p>\r\n                <div className='w-full mt-4 py-[1rem] px-4 bg-white flex flex-col justify-center items-center  '>\r\n                    <div className='max-w-[1240px] mx-auto grid md:grid-cols-3 gap-8 justify-center items-center'>\r\n                        <Checkbox\r\n                            label=\"Food & Beverage\"\r\n                            name=\"Food & Beverage\"\r\n                            checked={categories.food}\r\n                            onChange={(event) => {\r\n                                setCategories({...categories, food: event.target.checked})\r\n                            }}\r\n                        />\r\n                        <Checkbox\r\n                            label=\"Technology\"\r\n                            name=\"Technology\"\r\n                            checked={categories.technology}\r\n                            onChange={(event) => {\r\n                                setCategories({...categories, technology: event.target.checked})\r\n                            }}\r\n                        />\r\n                        <Checkbox\r\n                            label=\"App / Website\"\r\n                            name=\"App / Website\"\r\n                            checked={categories.app}\r\n                            onChange={(event) =>\r\n                                setCategories({...categories, app: event.target.checked})\r\n                            }\r\n                            required={true}\r\n                        />\r\n                        <Checkbox\r\n                            label=\"Fitness\"\r\n                            name=\"Fitness\"\r\n                            checked={categories.fitness}\r\n                            onChange={(event) =>\r\n                                setCategories({...categories, fitness: event.target.checked})\r\n                            }\r\n\r\n                        />\r\n                        <Checkbox\r\n                            label=\"Health / Wellness / Nutrition\"\r\n                            name=\"Health / Wellness / Nutrition\"\r\n                            checked={categories.healthcare}\r\n                            onChange={(event) =>\r\n                                setCategories({...categories, healthcare: event.target.checked})\r\n                            }\r\n                        />\r\n                        <Checkbox\r\n\r\n                            label=\"Sports\"\r\n                            name=\"Sports\"\r\n                            checked={categories.sports}\r\n                            onChange={(event) =>\r\n                                setCategories({...categories, sports: event.target.checked})\r\n                            }\r\n                        />\r\n                        <Checkbox\r\n                            label=\"Beauty\"\r\n                            name=\"Beauty\"\r\n                            checked={categories.beauty}\r\n                            onChange={(event) =>\r\n                                setCategories({...categories, beauty: event.target.checked})\r\n                            }\r\n                        />\r\n                        <Checkbox\r\n                            label=\"Clothing / Fashion\"\r\n                            name=\"Clothing / Fashion\"\r\n                            checked={categories.clothing}\r\n                            onChange={(event) =>\r\n                                setCategories({...categories, clothing: event.target.checked})\r\n                            }\r\n                        />\r\n                        <Checkbox\r\n                            label=\"Toys / Games\"\r\n                            name=\"Toys / Games\"\r\n                            checked={categories.toys}\r\n                            onChange={(event) =>\r\n                                setCategories({...categories, toys: event.target.checked})\r\n                            }\r\n                        />\r\n                        <Checkbox\r\n                            label=\"Entertainment / Experiential\"\r\n                            name=\"Entertainment / Experiential\"\r\n                            checked={categories.entertainment}\r\n                            onChange={(event) =>\r\n                                setCategories({...categories, entertainment: event.target.checked})\r\n                            }\r\n                        />\r\n                        <Checkbox\r\n                            label=\"Pets\"\r\n                            name=\"Pets\"\r\n                            checked={categories.pets}\r\n                            onChange={(event) =>\r\n                                setCategories({...categories, pets: event.target.checked})\r\n                            }\r\n                        />\r\n                        <Checkbox\r\n                            label=\"Music\"\r\n                            name=\"Music\"\r\n                            checked={categories.music}\r\n                            onChange={(event) =>\r\n                                setCategories({...categories, music: event.target.checked})\r\n                            }\r\n                        />\r\n                        <Checkbox\r\n                            label=\"Holiday\"\r\n                            name=\"Holiday\"\r\n                            checked={categories.holiday}\r\n                            onChange={(event) =>\r\n                                setCategories({...categories, holiday: event.target.checked})\r\n                            }\r\n                        />\r\n                        <Checkbox\r\n                            label=\"Children\"\r\n                            name=\"Children\"\r\n                            checked={categories.children}\r\n                            onChange={(event) =>\r\n                                setCategories({...categories, children: event.target.checked})\r\n                            }\r\n                        />\r\n                        <Checkbox\r\n                            label=\"Housewares / Home Design\"\r\n                            name=\"Housewares / Home Design\"\r\n                            checked={categories.housewares}\r\n                            onChange={(event) =>\r\n                                setCategories({...categories, housewares: event.target.checked})\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst UpdatedDocuments = () => {\r\n    const { get } = useAxiosMethods();\r\n    const [response, setResponse] = useState([]);\r\n    const[sectors,setSectors]=useState([]);\r\n    const [pdf, setPdf] = useState([]);\r\n    const [showSuccessNotification, setShowSuccessNotification] = useState(false);\r\n    const [showErrorNotification, setShowErrorNotification] = useState(false);\r\n\r\n    const { id } = useParams();\r\n\r\n    const registrationRequestDetails = {\r\n        policeReport:\"/assets/images/20000499.pdf\",\r\n        incomeStatement:\"/assets/images/20000499.pdf\"\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        get(`/auth/get-investor-pdf/${id}`, setPdf);\r\n    }, []);\r\n    const pdfs = {\r\n        policeReport:pdf[0],\r\n        incomeStatement:pdf[1],\r\n    }\r\n\r\n    const handleDocumentDownload = (documentData, documentName) => {\r\n        const linkSource = `data:application/pdf;base64,${documentData}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        const fileName = `${documentName}.pdf`;\r\n\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=' mb-24 flex flex-col mt-24 relative justify-center items-start w-auto rounded-2xl px-[1rem] lg:px-[5rem] py-[2rem] border border-main-purple'>\r\n            {/*<div>*/}\r\n            {/*    <h3 className=\"font-medium text-purple-400 text-lg font-semibold mb-2\">Documents</h3>*/}\r\n            {/*    <div className=\"grid grid-cols-2 gap-5 ml-10\">*/}\r\n            {/*        <div className=\"document-container\">*/}\r\n            {/*            <p><strong>Police Report:</strong></p>*/}\r\n            {/*            <p>*/}\r\n            {/*                <iframe*/}\r\n            {/*                    src={`data:application/pdf;base64,${pdfs.policeReport}`}*/}\r\n            {/*                    width=\"88%\"*/}\r\n            {/*                    height=\"510px\"*/}\r\n            {/*                    title=\"Police Report\"*/}\r\n            {/*                ></iframe>*/}\r\n            {/*                <br></br>*/}\r\n            {/*                <Button*/}\r\n            {/*                    className=\"download-button\"*/}\r\n            {/*                    type=\"button\"*/}\r\n            {/*                    onClick={() =>*/}\r\n            {/*                        handleDocumentDownload(*/}\r\n            {/*                            pdfs.policeReport,*/}\r\n            {/*                            registrationRequestDetails.id + \"_police_report\"*/}\r\n            {/*                        )*/}\r\n            {/*                    }*/}\r\n            {/*                    label=\"Download\"*/}\r\n            {/*                />*/}\r\n            {/*            </p>*/}\r\n            {/*        </div>*/}\r\n            {/*        <div className=\"document-container\">*/}\r\n            {/*            <p><strong>Income Statement:</strong></p>*/}\r\n            {/*            <p>*/}\r\n            {/*                <iframe*/}\r\n            {/*                    src={`data:application/pdf;base64,${pdfs.incomeStatement}`}*/}\r\n            {/*                    width=\"88%\"*/}\r\n            {/*                    height=\"510px\"*/}\r\n            {/*                    title=\"Income Statement\"*/}\r\n            {/*                ></iframe>*/}\r\n            {/*                <br></br>*/}\r\n            {/*                <Button*/}\r\n            {/*                    className=\"download-button\"*/}\r\n            {/*                    type=\"button\"*/}\r\n            {/*                    onClick={() =>*/}\r\n            {/*                        handleDocumentDownload(*/}\r\n            {/*                            pdfs.incomeStatement,*/}\r\n            {/*                            registrationRequestDetails.id + \"_income_statement\"*/}\r\n            {/*                        )*/}\r\n            {/*                    }*/}\r\n            {/*                    label=\"Download\"*/}\r\n            {/*                />*/}\r\n            {/*            </p>*/}\r\n            {/*        </div>*/}\r\n            {/*    </div>*/}\r\n            {/*</div>*/}\r\n            <h1 className=\"text-2xl text-main-purple self-center \">Documents Uploaded</h1>\r\n            <div className=\"flex flex-row items-center w-full text-center mt-6\">\r\n                <div className=\"applicationNotifications w-1/2\">\r\n                    <h4 className=\"text-main-purple self-center\">Bank Statement</h4>\r\n                    <div className='w-full mt-4 py-[2rem] px-4 bg-white flex flex-col space-y-4 mr-4'>\r\n                        <embed\r\n                            className=\"h-[600px] w-full\"\r\n                            src=\"/assets/documents/Bank%20Account%20Statement.pdf\"\r\n                            type=\"application/pdf\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"applicationNotificationsSettings w-1/2\">\r\n                    <h4 className=\" text-main-purple self-center\">Police Report</h4>\r\n                    <div className='w-full mt-4 py-[2rem] px-4 bg-white flex flex-col space-y-4 mr-4'>\r\n                        <embed\r\n                            className=\"h-[600px] w-full\"\r\n                            src=\"/assets/documents/clearance_application.pdf\"\r\n                            type=\"application/pdf\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <>\r\n            <ProfileInformation/>\r\n            <Preferences/>\r\n            <UpdatedDocuments/>\r\n            <DisableAccount/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}